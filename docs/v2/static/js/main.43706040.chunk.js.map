{"version":3,"sources":["canvasSlice.js","toolSlice.js","store.js","Defs.js","Util.js","tools/PolylineTool.js","Canvas.js","tools/SelectionUI.js","tools/SelectTool.js","tools/DirectSelectTool.js","tools/RectTool.js","tools/CircleTool.js","tools/RingTool.js","tools/LineTool.js","EventLayer.js","tools/TextTool.js","ToolBar.js","Inspector.js","LayerView.js","DataPanel.js","InteractiveLegend.js","Authoring.js","Templating.js","App.js","reportWebVitals.js","index.js"],"names":["canvasSlice","createSlice","name","initialState","selected","directSelected","directSelectPreview","rectSelectRegion","itemUpdated","scaleUpdated","axisHandleVisible","legendClicked","dataItemJoined","newItemCreated","itemsDeleted","undoStackChanged","redoStackChanged","reducers","select","state","action","payload","directSelect","rectSelect","draw","console","log","updateItem","updateScale","toggleAxisHandle","customizeColorPalette","joinDataItem","createNewItem","deleteItems","updateUndoStack","updateRedoStack","actions","toolSlice","activeTool","activateTool","configureStore","reducer","canvas","tool","properties","channel","accessor","options","display","value","undefined","parameters","id","addToStack","scene","datasets","stack","type","stackType","scn","toJSON","t","tables","push","JSON","stringify","store","dispatch","length","getSVGPathData","items","vxSize","d","i","bounds","b","left","top","join","right","bottom","size","Math","max","width","height","radius","x","y","getScaleType","item","getItem","enc","getEncodingByItem","scale","canShareScale","channel1","channel2","c","indexOf","getDefaultCollectionLayout","numItems","ar","doubleGap","layout","rowGap","colGap","atlas","getPositionInScene","clientX","clientY","rect","document","getElementById","getBoundingClientRect","getPropertyDef","itemType","prop","replace","toUpperCase","getPropertyID","g","p","pts","updateUI","vx","vy","d3","style","attr","finish","renderer","undoStack","r","mark","vertices","render","connect","resizeX","resizeY","props","useEffect","translateByKey","s","getState","translate","ds","itm","parent","_doTranslate","addEventListener","e","key","removeItem","map","PolylineTool","className","getHandlePosition","nw","n","ne","se","sw","w","updateAxisHandlePosition","axis","x1","y1","x2","y2","wd","ht","tx","ty","h","middle","isFlipped","center","text","encoding","rangeExtent","toFixed","redrawRect","styles","attrs","a","resizeStarted","getResizeBounds","itmBounds","dx","dy","handles","downX","downY","selectAll","call","on","resizing","this","toChange","xRef","yRef","fs","floor","parseInt","fontSize","setProperties","resizeEnded","peers","getPeersInScene","peerPathData","clone","cnt","parentStyles","itms","union","redrawSelection","seg","vertex1","vertex2","redrawDirectSelection","cb","cellBounds","numCols","numRows","data","abs","rects","enter","append","merge","sourceEvent","stopPropagation","datum","o","exit","remove","redrawGridGaps","redrawDirectSelectPreview","visible","dir","newRE","getEncodedChannels","strokeWidth","stroke","fill","fontWeight","clickHeld","rectRegion","dragging","activeItem","itemX","itemY","hitTest","cg","sel","hit","dragItem","newX","newY","pathY","pathX","pathPosition","moved","EventLayer","onDoubleClick","children","child","SelectTool","onMouseDown","preventDefault","fieldType","pathHitTest","v","dataScope","getFieldValue","legend","button","RectTool","CircleTool","RingTool","DirectSelectTool","LineTool","onMouseMove","pos","min","itmInSelection","shiftKey","cx","cy","angle","atan2","PI","angleR","round","dist","sqrt","pow","cos","sin","lp","onMouseUp","m","newSel","concat","filter","fillColor","outerRadius","innerRadius","anchor","property","fontFamily","focus","TextTool","tools","getUsableTbls","dataTable","getOrientations","cmd","useDispatch","inputFile","useRef","useState","showRepeatModal","setShowRepeatModal","setCmd","tbls","setTbls","fields","setFields","orientations","setOrientations","joinMsg","setJoinMsg","switchTool","updatePreview","empty","clear","dataset","field","duplicate","strokeColor","addChild","coll","repeat","getUniqueFieldValues","vb","divide","orientation","densify","updateMsg","num","vals","msg","classed","evt","CustomEvent","bubbles","cancelable","dispatchEvent","canRepeat","canDivide","canDensify","redoStack","onClick","current","click","ref","accept","onChange","f","target","files","reader","FileReader","onload","loadScene","parse","result","resetStacks","readAsText","getDataTables","fname","Object","values","saveAs","Blob","svg","source","XMLSerializer","serializeToString","match","pop","title","getAttribute","usedFields","firstChild","keys","nonNumericFields","Modal","show","onShow","backdrop","keyboard","Header","Title","Body","Footer","Button","variant","reCreateRelatedAxes","headerClasses","classes","class","updatePropertyControl","propDef","val","sizeBound","positionBound","encodable","removeEncoding","info","anyItem","disabled","group","ct","na","params","paramDef","ori","vertexShapeUpdated","currentColor","setCurrentColor","currentColorPropDef","setCurrentColorPropDef","currentDataTable","setCurrentDataTable","pastLayouts","setPastLayouts","def","panel","setCategoricalValue","ctrl","l","unshift","find","getDefaultLayout","setNumericValue","parseFloat","isNaN","encode","guide","highlightAxis","createNumericControl","createStringControl","onInput","setStringValue","createBooleanControl","setBooleanValue","CustomToggle","React","forwardRef","href","createPropertyControl","Dropdown","Toggle","bsPrefix","Menu","Form","Group","Stack","direction","gap","Label","Select","defaultValue","changeScaleType","range","step","margin","float","createColorControl","createCategoryControl","getEncodableFields","scales","itmKey","encodings","encs","getFieldType","getReusableScales","Item","k","drop","as","onMouseEnter","onMouseLeave","disableAlpha","color","onChangeComplete","hex","enumerateLayers","list","level","getLayerId","classId","layers","forEach","index","lv","slice","substring","getScene","getPeers","getLayerLabel","activeTbl","setActiveTbl","dataScopeInfo","setDataScopeInfo","cols","useMemo","Cell","getRawValue","col","useTable","columns","hiddenColumns","useFilters","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","setAllFilters","getHeaderIcon","src","alt","filters","numTuples","getRowCount","tbl","csvFromString","loadDataset","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","row","getRowProps","cells","cell","getCellProps","setLegend","setColor","setValue","domain","_setRange","Authoring","setScene","spec","setSpec","setDatasets","setUndoStack","setRedoStack","body","backgroundColor","overflow","fetch","then","response","json","loader","load","loadJSON","url","Templating","exe","run","App","basename","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.43706040.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const canvasSlice = createSlice({\n  name: 'canvas',\n  initialState: {\n    selected: [],\n    directSelected: null,\n    directSelectPreview: null,\n    rectSelectRegion: {},\n    //item properties updated\n    itemUpdated: {},\n    //scale range or domain updated\n    scaleUpdated: {},\n    axisHandleVisible: false,\n    legendClicked: {},\n    dataItemJoined: {},\n    newItemCreated: {},\n    itemsDeleted: [],\n    undoStackChanged: {\"length\" : 0},\n    redoStackChanged: {\"length\" : 0}\n  },\n  reducers: {\n    select: (state, action) => {\n      state.selected = action.payload;\n    },\n    directSelect: (state, action) => {\n      state.directSelected = action.payload;\n    },\n    directSelectPreview: (state, action) => {\n      state.directSelectPreview = action.payload;\n    },\n    rectSelect: (state, action) => {\n      state.rectSelectRegion = action.payload;\n    },\n    draw: (state, action) => {\n      console.log(action);\n    },\n    updateItem: (state, action) => {\n      state.itemUpdated = action.payload;\n    },\n    updateScale: (state, action) => {\n      state.scaleUpdated = action.payload;\n    },\n    toggleAxisHandle: (state, action) => {\n      state.axisHandleVisible = action.payload;\n    },\n    customizeColorPalette: (state, action) => {\n      state.legendClicked = action.payload;\n    },\n    joinDataItem: (state, action) => {\n      state.dataItemJoined = action.payload;\n    },\n    createNewItem: (state, action) => {\n      state.newItemCreated = action.payload;\n    },\n    deleteItems: (state, action) => {\n      state.itemsDeleted = action.payload;\n    },\n    updateUndoStack: (state, action) => {\n      state.undoStackChanged = action.payload\n    },\n    updateRedoStack: (state, action) => {\n      state.redoStackChanged = action.payload\n    },\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { select, directSelect, directSelectPreview, rectSelect, draw, updateItem, updateScale, toggleAxisHandle, customizeColorPalette, joinDataItem, createNewItem, deleteItems, updateUndoStack, updateRedoStack } = canvasSlice.actions;\n\nexport default canvasSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\n\nexport const toolSlice = createSlice({\n  name: 'tool',\n  initialState: {\n    activeTool: \"Select\",\n  },\n  reducers: {\n    activateTool: (state, action) => {\n      state.activeTool = action.payload;\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { activateTool } = toolSlice.actions;\n\nexport default toolSlice.reducer;","import { configureStore } from '@reduxjs/toolkit'\nimport canvasSlice from './canvasSlice'\nimport toolSlice from './toolSlice'\n\nexport default configureStore({\n  reducer: {\n    canvas: canvasSlice,\n    tool: toolSlice\n  }\n})","const properties = {\n    // \"Peers\": {\n    //     \"Count\": {\"id\": \"sibling-count\", \"group\": \"Peers\", \"type\": \"numeric-range\", \"range\": [1, 100],\n    //         \"class\": [\"line-sibling-count-prop\", \"circle-sibling-count-prop\", \"rect-sibling-count-prop\", \"path-sibling-count-prop\", \"text-sibling-count-prop\", \"repeat-grid-sibling-count-prop\", \"partition-sibling-count-prop\", \"group-sibling-count-prop\"]},\n    //     \"Ordered By\": {\n    //         \"id\": \"peers-ordered-by\", \"group\": \"Peers\", \"type\": \"categorical\",\n    //         \"class\": [\"line-peers-ordered-by-prop\", \"circle-peers-ordered-by-prop\", \"rect-peers-ordered-by-prop\",\n    //             \"path-peers-ordered-by-prop\", \"text-peers-ordered-by-prop\", \"repeat-grid-peers-ordered-by-prop\",\n    //             \"partition-peers-ordered-by-prop\"],\n    //         \"options\": [{display:\"Data Source Order\", value: \"data-source-order\"}]\n    //     }\n    // },\n\n    \"Shape Position\": {\n        //need to add path-position-prop so that we can have \"scatterplots of paths\"\n        \"X\": {\"id\": \"x\", channel: \"x\", \"group\": \"Shape Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"pointText-prop\", \"path-prop\", \"polygon-prop\", \"image-prop\", \"group-prop\", \"area-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"y\", channel: \"y\", \"group\": \"Shape Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"pointText-prop\", \"path-prop\", \"polygon-prop\", \"image-prop\", \"group-prop\", \"area-prop\"], accessor: [\"y\"]},\n        \"Baseline\": {\"id\": \"baseline\", \"group\": \"Shape Position\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"area-prop\"], accessor: [\"baseline\"],\n            options: [{display:\"top\", value:'top'},\n            {display:\"middle\", value:'middle'},\n            {display:\"bottom\", value:'bottom'},\n            {display:\"left\", value:'left'},\n            {display:\"center\", value:'center'},\n            {display:\"right\", value:'right'}]\n        }\n    },\n\n    \"Segment Position\": {\n        \"X\": {\"id\": \"segmentX\", channel: \"x\", \"group\": \"Segment Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"segment-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"segmentY\", channel: \"y\", \"group\": \"Segment Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"segment-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Vertex Position\": {\n        \"X\": {\"id\": \"vxX\", channel: \"x\", \"group\": \"Vertex Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"vxY\", channel: \"y\", \"group\": \"Vertex Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Size\": {\n        \"Width\": {\"id\": \"width\", channel: \"width\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"rect-prop\", \"path-prop\", \"image-prop\", \"area-prop\"], accessor: [\"bounds\",\"width\"]},\n        \"Height\": {\"id\": \"height\", channel: \"height\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"rect-prop\", \"path-prop\", \"image-prop\", \"area-prop\"], accessor: [\"bounds\",\"height\"]},\n        \"Radius\": {\"id\": \"radius\", channel: \"radius\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"circle-prop\"], accessor: [\"radius\"]},\n        \"Inner Radius\": {\"id\": \"innerRadius\", channel: \"innerRadius\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"ring-prop\"], accessor: [\"innerRadius\"]},\n        \"Outer Radius\": {\"id\": \"outerRadius\", channel: \"outerRadius\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"ring-prop\"], accessor: [\"outerRadius\"]},\n        \"Angle\": {\"id\": \"angle\", channel: \"angle\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"pie-prop\"], accessor: [\"angle\"]},\n        \"Thickness\": {\"id\": \"thickness\", channel: \"thickness\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"ring-prop\"], accessor: [\"thickness\"]},\n        \"Area\": {\"id\": \"area\", channel: \"area\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"rect-prop\", \"circle-prop\"], accessor: [\"area\"]}\n    },\n\n    \"Text\": {\n        \"Content\": {\"id\": \"content\", channel: \"text\",  \"group\": \"Text\", \"type\": \"string\", \"encodable\": true, \"class\": [\"pointText-prop\"], accessor:[\"text\"]},\n        \"Font\": {\"id\": \"fontFamily\", channel: \"fontFamily\", \"group\": \"Text\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"pointText-prop\"], accessor:[\"fontFamily\"],\n            \"options\": [\n                {display:\"Arial\", value:\"Arial, sans-serif\"},\n                {display:\"Alegreya Sans\", value:\"'Alegreya Sans', sans-serif\"},\n                {display:\"Alegreya\", value:\"'Alegreya', serif\"},\n                {display:\"Calibri\", value:\"Calibri, sans-serif\"},\n                {display:\"Cambria\", value:\"Cambria, sans-serif\"},\n                {display:\"Chivo\", value:\"'Chivo', sans-serif\"},\n                {display:\"Comic Sans MS\", value:\"'Comic Sans MS', sans-serif\"},\n                {display:\"Consolas\", value:\"Consolas, monospace\"},\n                {display:\"Cormorant\", value:\"'Cormorant', serif\"},\n                {display:\"Courier New\", value:\"'Courier New', Courier, monospace\"},\n                {display:\"Eczar\", value:\"'Eczar', serif\"},\n                {display:\"Fira Sans\", value:\"'Fira Sans', sans-serif\"},\n                {display:\"Futura\", value:\"Futura, sans-serif\"},\n                {display:\"Georgia\", value:\"Georgia, serif\"},\n                {display:\"Helvetica Neue\", value:\"'HelveticaNeue', 'Helvetica Neue', 'HelveticaNeueRoman', 'HelveticaNeue-Roman', 'Helvetica Neue Roman', sans-serif\"},\n                {display:\"Impact\", value:\"Impact, Charcoal, sans-serif\"},\n                {display:\"Palatino\", value:\"Palatino, serif\"},\n                {display:\"Libre Franklin\", value:\"'Libre Franklin', sans-serif\"},\n                {display:\"Playfair Display\", value:\"'Playfair Display', serif\"},\n                {display:\"Playfair Display SC\", value:\"'Playfair Display SC', serif\"},\n                {display:\"Rubik\", value:\"'Rubik', sans-serif\"},\n                {display:\"Space Mono\", value:\"'Space Mono', monospace\"},\n                {display:\"Times New Roman\", value:\"'Times New Roman', TimesNewRoman, serif\"},\n                {display:\"Trebuchet MS\", value:\"'Trebuchet MS', sans-serif\"},\n                {display:\"Verdana\", value:\"Verdana, Geneva, sans-serif\"},\n                {display:\"Work Sans\", value:\"'Work Sans', sans-serif\"}\n            ]},\n        \"Color\": {\"id\": \"textColor\", channel: \"fillColor\", \"group\": \"Text\", \"type\": \"color\", \"encodable\": true, \"class\": [\"pointText-prop\"], accessor:[\"fillColor\"]},\n        \"Weight\": {\"id\": \"fontWeight\", channel: \"fontWeight\",  \"group\": \"Text\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"pointText-prop\"], accessor:[\"fontWeight\"], \"options\": [\n            {display: \"normal\", value: \"normal\"},\n            {display: \"bold\", value: \"bold\"}\n        ]},\n        \"Size (px)\": {\"id\": \"fontSize\", channel: \"fontSize\",  \"group\": \"Text\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"pointText-prop\"], accessor:[\"fontSize\"]},\n    },\n\n    \"Vertex Style\": {\n        \"Shape\": {\"id\": \"vxShape\", channel: \"shape\",  \"group\": \"Vertex Style\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"vertex-prop\"], accessor:[\"shape\"], \"options\": [\n            {display: \"none\", value: undefined},\n            {display: \"rectangle\", value: \"rect\"},\n            {display: \"circle\", value: \"circle\"}\n        ]},\n        \"Width\": {\"id\": \"vxWidth\", \"channel\": \"width\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"width\"]},\n        \"Height\": {\"id\": \"vxHeight\", \"channel\": \"height\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"height\"]},\n        \"Radius\": {\"id\": \"vxRadius\", \"channel\": \"radius\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"radius\"]},\n        \"Fill Color\": {\"id\": \"vxFillColor\", \"channel\": \"fillColor\", \"group\": \"Vertex Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"fillColor\"]},\n        \"Stroke Color\": {\"id\": \"vxStrokeColor\", \"channel\": \"strokeColor\", \"group\": \"Vertex Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"strokeColor\"]},\n        \"Stroke Width\": {\"id\": \"vxStrokeWidth\", \"channel\": \"strokeWidth\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"strokeWidth\"]},\n        \"Opacity\": {\"id\": \"vxOpacity\", \"channel\": \"opacity\", \"group\": \"Vertex Style\", \"type\": \"numeric-range\", \"encodable\": false, \"class\": [\"vertex-prop\"], \"range\": [0, 1], accessor: [\"opacity\"]},\n    },\n\n    \"Style\": {\n        // \"Descriptor\": {\"id\": \"collection-descriptor\", \"group\": \"Style\", \"type\": \"categorical\", \"class\": [\"collection-prop\", \"partition-prop\"], \"options\": [\n        //     {display:\"Show\", value:'Show'},{display:\"Hide\", value:'Hide'}\n        // ]},\n        \"Curve Mode\": {\"id\": \"curveMode\", \"channel\": \"curveMode\", \"group\": \"Style\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"path-prop\", \"area-prop\"], accessor: [\"curveMode\"],\n            \"options\": [\n                {\"display\": \"Natural\", value: \"natural\", parameters: []},\n                {\"display\": \"Basis\", value: \"basis\", parameters: []},\n                {\"display\": \"BumpX\", value: \"bumpX\", parameters: []},\n                {\"display\": \"BumpY\", value: \"bumpY\", parameters: []},\n                {\"display\": \"Linear\", value: \"linear\", parameters: []},\n                {\"display\": \"Step\", value: \"step\", parameters: []},\n                {\"display\": \"CatmullRom\", value: \"CatmullRom\", parameters: []},\n                {\"display\": \"Cardinal\", value: \"cardinal\", parameters: []}\n            ]\n        },\n        \"Fill Color\": {\"id\": \"fillColor\", \"channel\": \"fillColor\", \"group\": \"Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], accessor: [\"fillColor\"]},\n        \"Stroke Color\": {\"id\": \"strokeColor\", \"channel\": \"strokeColor\", \"group\": \"Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], accessor: [\"strokeColor\"]},\n        \"Stroke Width\": {\"id\": \"strokeWidth\", \"channel\": \"strokeWidth\", \"group\": \"Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], accessor: [\"strokeWidth\"]},\n        \"Opacity\": {\"id\": \"opacity\", \"channel\": \"opacity\", \"group\": \"Style\", \"type\": \"numeric-range\", \"encodable\": false, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], \"range\": [0, 1], accessor: [\"opacity\"]}\n\n    },\n\n    \"Canvas\": {\n        \"Background\": {\"id\": \"canvasFillColor\", \"group\": \"canvas\", \"type\": \"color\", \"encodable\": false, \"class\": [\"canvas-prop\"], \"accessor\": [\"fillColor\"]}\n    },\n\n    \"Collection Position\": {\n        \"X\": {\"id\": \"collectionX\", channel: \"x\", \"group\": \"Collection Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"collection-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"collectionY\", channel: \"y\", \"group\": \"Collection Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"collection-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Glyph Position\": {\n        \"X\": {\"id\": \"glyphX\", channel: \"x\", \"group\": \"Glyph Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"glyph-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"glyphY\", channel: \"y\", \"group\": \"Glyph Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"glyph-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Layout\": {\n        \"Type\": {\"id\": \"layoutType\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"collection-prop\", \"grid-prop\", \"stack-prop\", \"none-prop\"],\n            \"options\": [{display:\"Grid\", value:'grid', parameters: ['Num Rows', 'Num Columns', 'Row Gap', 'Column Gap', 'Horz Gravity', 'Vert Gravity']},\n                        {display:\"Stack\", value:'stack', parameters: ['Orientation', 'Horz Gravity', 'Vert Gravity']},\n                        {display:\"Pack\", value:'packing', parameters: []},\n                        {display:\"Treemap\", value:'treemap', parameters: []},\n                        {display:\"None\", value:'none', parameters: []}\n                        ]\n        },\n        \"Num Rows\": {\"id\": \"numRows\", \"group\": \"Layout\", \"type\": \"numeric-integer\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"numRows\"]},\n        \"Num Columns\": {\"id\": \"numCols\", \"group\": \"Layout\", \"type\": \"numeric-integer\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"numCols\"]},\n        \"Row Gap\": {\"id\": \"rowGap\", \"group\": \"Layout\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"rowGap\"]},\n        \"Column Gap\": {\"id\": \"colGap\", \"group\": \"Layout\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"colGap\"]},\n        \"Orientation\": {\"id\": \"orientation\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"stack-prop\", \"layout-prop\"], accessor: [\"orientation\"], \n            \"options\": [{\"display\": \"Horizontal\", value: \"horizontal\", parameters: []}, {\"display\": \"Vertical\", value: \"vertical\", parameters: []}]\n        },\n        \"Horz Gravity\": {\"id\": \"horzGravity\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"grid-prop\", \"stack-prop\", \"layout-prop\"], accessor: [\"horzCellAlignment\"], \n            \"options\": [{\"display\": \"Left\", value: \"left\", parameters: []}, {\"display\": \"Center\", value: \"center\", parameters: []}, {\"display\": \"Right\", value: \"right\", parameters: []}]\n        },\n        \"Vert Gravity\": {\"id\": \"vertGravity\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"grid-prop\", \"stack-prop\", \"layout-prop\"], accessor: [\"vertCellAlignment\"], \n            \"options\": [{\"display\": \"Top\", value: \"top\", parameters: []}, {\"display\": \"Middle\", value: \"middle\", parameters: []}, {\"display\": \"Bottom\", value: \"bottom\", parameters: []}]\n        },\n        //\"Gap\": {\"id\": \"gap\", \"group\": \"Layout\", \"type\": \"numeric\", \"class\": [\"partition-prop\"]},\n    },\n\n    \"Axis\": {\n        \"Include 0\": {id: \"includeZero\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"includeZero\"]},\n        \"Show Path\": {id: \"showPath\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"pathVisible\"]},\n        \"Show Ticks\": {id: \"showTicks\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"tickVisible\"]},\n        \"Orientation\": {\"id\": \"axisOrientation\", \"group\": \"axis\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"orientation\"],\n            \"options\": [{display:\"top\", value:'top'},\n                        {display:\"bottom\", value:'bottom'},\n                        {display:\"left\", value:'left'},\n                        {display:\"right\", value:'right'}]\n        },\n        \"Stroke Color\": {\"id\": \"axisStrokeColor\", \"group\": \"axis\", \"type\": \"color\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"strokeColor\"]},\n        \"Text Color\": {\"id\": \"axisTextColor\", \"group\": \"axis\", \"type\": \"color\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"textColor\"]},\n        \"Path Position\": {\"id\": \"pathPos\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"pathPosition\"]},\n        \"Tick Offset\": {\"id\": \"tickOffset\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"tickOffset\"]},\n        \"Tick Size\": {\"id\": \"tickSize\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"tickSize\"]},\n        \"Label Offset\": {\"id\": \"labelOffset\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"labelOffset\"]},\n        \"Label Format\": {\"id\": \"labelFormat\", \"group\": \"axis\", \"type\": \"string\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"labelFormat\"]},\n        \"Show Title\": {id: \"showTitle\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"showTitle\"]},\n    },\n\n    \"Legend\": {\n        // \"X\": {\"id\": \"legendX\", channel: \"x\", \"group\": \"legend\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"legend-prop\"], accessor: [\"x\"]},\n        // \"Y\": {\"id\": \"legendY\", channel: \"y\", \"group\": \"legend\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"legend-prop\"], accessor: [\"y\"]},\n        \"Text Color\": {\"id\": \"legendTextColor\", \"group\": \"legend\", \"type\": \"color\", \"encodable\": false, \"class\": [\"legend-prop\"], \"accessor\": [\"textColor\"]}\n    },\n\n    \"Gridlines\": {\n        \"Stroke Color\": {\"id\": \"gridlineStrokeColor\", \"group\": \"Gridlines\", \"type\": \"color\", \"encodable\": false, \"class\": [\"gridlines-prop\"], accessor: [\"strokeColor\"]},\n        \"Stroke Width\": {\"id\": \"gridlineStrokeWidth\", \"group\": \"Gridlines\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"gridlines-prop\"], accessor: [\"strokeWidth\"]}\n    },\n\n    \"Alignment in Cell\": {\n        \"Horizontal\": {\"id\": \"x-constraint\", \"group\": \"Float\", \"type\": \"categorical\", \"encodable\": false,\n            \"class\": [\"line-constraint-prop\", \"circle-constraint-prop\", \"rect-constraint-prop\", \"text-constraint-prop\",\"repeat-grid-constraint-prop\", \"partition-constraint-prop\"],\n            \"options\": [{display:\"Off\", value:'off'}, {display:\"Left\", value:'left'},{display:\"Center\", value:'center'},{display:\"Right\", value:'right'}]},\n        \"Vertical\": {\"id\": \"y-constraint\", \"group\": \"Float\", \"type\": \"categorical\", \"encodable\": false,\n            \"class\": [\"line-constraint-prop\", \"circle-constraint-prop\", \"rect-constraint-prop\", \"text-constraint-prop\",\"repeat-grid-constraint-prop\", \"partition-constraint-prop\"],\n            \"options\": [{display:\"Off\", value:'off'}, {display:\"Top\", value:'top'},{display:\"Middle\", value:'middle'},{display:\"Bottom\", value:'bottom'}]}\n    }\n};\n\nexport { properties }","import { properties } from \"./Defs\";\nimport * as atlas from \"atlas-vis\";\nimport store from \"./store\";\nimport { updateRedoStack, updateUndoStack } from \"./canvasSlice\";\n\nconst addToStack = (scene, datasets, stack, type) => {\n    let stackType = type ? type : \"undo\";\n    let scn = scene.toJSON();\n    for (let t of datasets) {\n        if (!(t.id in scn.tables)) {\n            scn.tables[t.id] = t.toJSON();\n        }\n    }\n    // let s = stack.slice();\n    // s.push(JSON.stringify(scn));\n    // setStack(s);\n    stack.push(JSON.stringify(scn));\n    // console.log(\"added to stack\", stackType, stack.length);\n    if (stackType === \"undo\")\n        store.dispatch(updateUndoStack({\"length\": stack.length}));\n    else if (stackType === \"redo\")\n        store.dispatch(updateRedoStack({\"length\": stack.length}));\n}\n\nconst getSVGPathData = (items, vxSize) => {\n    let d = \"\";\n    for (let i of items) {\n        if (i.getSVGPathData)\n            d += i.getSVGPathData();\n        else if (i.bounds) {\n            let b = i.bounds;\n            d += [\"M\", b.left, b.top].join(\" \");\n            d += [\"L\", b.right, b.top].join(\" \");\n            d += [\"L\", b.right, b.bottom].join(\" \");\n            d += [\"L\", b.left, b.bottom, \"Z\"].join(\" \");\n        } else if (i.type === \"vertex\") {\n            let size = Math.max(i.width, i.height, i.radius, vxSize);\n            d += [\"M\", i.x - size/2, i.y - size/2].join(\" \");\n            d += [\"L\", i.x + size/2, i.y - size/2].join(\" \");\n            d += [\"L\", i.x + size/2, i.y + size/2].join(\" \");\n            d += [\"L\", i.x - size/2, i.y + size/2, \"Z\"].join(\" \");\n        }\n    }\n    return d;\n}\n\n// const getPathVerticesData = (p, vertexSize) => {\n//     let d = \"\";\n//     for (let v of p.vertices) {\n//         let size = Math.max(v.width, v.height, v.radius, vertexSize);\n//         d += [\"M\", v.x - size/2, v.y - size/2].join(\" \");\n//         d += [\"L\", v.x + size/2, v.y - size/2].join(\" \");\n//         d += [\"L\", v.x + size/2, v.y + size/2].join(\" \");\n//         d += [\"L\", v.x - size/2, v.y + size/2, \"Z\"].join(\" \");\n//     }\n//     return d;\n// }\n\nconst getReusableScales = (fieldType, channel, scene) => {\n    let r = {};\n    for (let itmKey in scene.encodings) {\n        let encs = scene.encodings[itmKey];\n        for (let c in encs) {\n            let enc = encs[c];\n            if (canShareScale(c, channel) && enc.dataTable.getFieldType(enc.field) === fieldType) {\n                if (!(enc.scale.id in r))\n                    r[enc.scale.id] = [];\n                r[enc.scale.id].push(enc);\n            }   \n        }\n    }\n    return r;\n}\n\nconst getScaleType = (channel, selected, directSelected, scene) => {\n    let item;\n    if (selected.length >= 1) {\n        item = scene.getItem(selected[0]);\n    } else if (directSelected) {\n        item = scene.getItem(directSelected);\n    }\n    if (!item) return null;\n    let enc = scene.getEncodingByItem(item, channel);\n    if (!enc) return null;\n    return enc.scale.type;\n}\n\nconst canShareScale = (channel1, channel2) => {\n    const candidates = [[\"x\", \"width\"], [\"y\", \"height\"], [\"fillColor\", \"strokeColor\"]];\n    for (let c of candidates) {\n        if (c.indexOf(channel1) >= 0 && c.indexOf(channel2) >= 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst getDefaultCollectionLayout = (item, numItems) => {\n    let ar = item.bounds.width/item.bounds.height,\n        doubleGap = item.type === \"collection\" && item.layout && item.layout.type === \"grid\",\n        rowGap = doubleGap ? item.layout.rowGap * 2 : 5,\n        colGap = doubleGap ? item.layout.colGap * 2 : 5;\n    // if (numItems > 50) {\n    //     return atlas.layout(\"grid\", {\"numRows\": Math.floor(Math.sqrt(numItems)), \"rowGap\": rowGap, \"colGap\": colGap});\n    // } else {\n    if (ar > 2) {\n        return atlas.layout(\"grid\", {\"numCols\": 1, \"rowGap\": rowGap});\n    } else {\n        return atlas.layout(\"grid\", {\"numRows\": 1, \"colGap\": colGap});\n    }\n    //}\n}\n\nconst getPositionInScene = (clientX, clientY) => {\n    const rect = document.getElementById(\"canvas\").getBoundingClientRect();\n    return [clientX - rect.x, clientY - rect.y];\n}\n\nconst getPositionInWindow = (sceneX, sceneY) => {\n    const rect = document.getElementById(\"canvas\").getBoundingClientRect();\n    return [sceneX + rect.x, rect.y + sceneY];\n}\n\nconst getDefaultLayout = (layout) => {\n    switch (layout) {\n        case \"stack\":\n            return atlas.layout(\"stack\", {orientation: \"vertical\"});\n        case \"packing\":\n            return atlas.layout(\"packing\");\n        case \"none\":\n            return undefined;\n        case \"grid\":\n        default:\n            return atlas.layout(\"grid\", {numRows: 1});\n    }\n}\n\nconst getPropertyID = (itemType, prop) => {\n    switch (itemType) {\n        case \"vertex\":\n            return \"vx\" + prop.replace(/^\\w/, c => c.toUpperCase());;\n        case \"scene\":\n            return \"canvas\" + prop.replace(/^\\w/, c => c.toUpperCase());;\n        case \"collection\": \n        case \"segment\":\n        case \"legend\":\n            return itemType + prop.replace(/^\\w/, c => c.toUpperCase());\n        default:\n            return prop;\n    }\n}\n\nconst getPropertyDef = (itemType, prop) => {\n    const id = getPropertyID(itemType, prop);\n    for (let g in properties) {\n        for (let p in properties[g]) {\n            if (properties[g][p].id === id)\n                return properties[g][p];\n        }\n    }\n    return null;\n}\n\nexport {addToStack, getSVGPathData, getDefaultLayout, getScaleType, getReusableScales, getPositionInScene, getPositionInWindow, getPropertyID, getPropertyDef, getDefaultCollectionLayout};","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet pts = [], x = undefined, y = undefined;\n\nexport const mouseDown = (e, scene) => {\n    //const p = getPositionInScene(e.clientX, e.clientY);\n    //pts.push([p[0], p[1]]);\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    if (x !== undefined && y !== undefined) {\n        let dist = Math.sqrt(Math.pow(x - pts[0][0], 2) + Math.pow(y - pts[0][1], 2));\n        if (dist < 2 && pts.length > 2) {\n            pts.push([pts[0][0], pts[0][1]]);\n            finish(scene, datasets, renderer, undoStack);\n        } else {\n            pts.push([x, y]);\n            updateUI();\n        }\n    } else {\n        const p = getPositionInScene(e.clientX, e.clientY);\n        pts.push([p[0], p[1]]);\n    }\n    d3.select(\"#selectionUI\").select(\"#vertexPreview\").style(\"visibility\", \"hidden\");\n}\n\nexport const updateUI = () => {\n    let d = [\"M\", pts[0][0], pts[0][1]].join(\" \");\n    for (let i = 1; i < pts.length; i++) {\n        let vx = pts[i][0], vy = pts[i][1];\n        if (vx === pts[0][0] && vy === pts[0][1]) {\n            d += \"Z\";\n        } else {\n            d += [\"L\", pts[i][0], pts[i][1]].join(\" \");\n        }\n    }\n    if (x !== undefined && y !== undefined)\n        d += [\"L\", x, y].join(\" \");\n    d3.select(\"#polylineToolUI\").style(\"visibility\", \"visible\").style(\"fill\", \"none\").attr(\"d\", d);\n}\n\nexport const mouseMove = (e, scene) => {\n    if (pts.length === 0) return;\n    let p = getPositionInScene(e.clientX, e.clientY), lp = pts[pts.length-1];\n    if (e.shiftKey) {\n        let angle = Math.atan2(p[1] - lp[1], p[0] - lp[0]) * 180 / Math.PI,\n            angleR = Math.round(angle/45) * 45 * Math.PI/180, \n            dist = Math.sqrt(Math.pow(p[1] - lp[1], 2) + Math.pow(p[0] - lp[0], 2));\n        x = lp[0] + Math.cos(angleR) * dist;\n        y = lp[1] + Math.sin(angleR) * dist;\n    } else {\n        x = p[0];\n        y = p[1];\n    }\n    let dist = Math.sqrt(Math.pow(x - pts[0][0], 2) + Math.pow(y - pts[0][1], 2));\n    if (dist < 2 && pts.length > 2) {\n        d3.select(\"#selectionUI\").select(\"#vertexPreview\").attr(\"x\", pts[0][0] - 5).attr(\"y\", pts[0][1] - 5)\n            .attr(\"width\", 10).attr(\"height\", 10).style(\"visibility\", \"visible\");\n    } else {\n        d3.select(\"#selectionUI\").select(\"#vertexPreview\").style(\"visibility\", \"hidden\");\n    }\n    updateUI();\n}\n\nexport const finish = (scene, datasets, renderer, undoStack) => {\n    if (!pts || pts.length === 0) {\n        return;\n    }\n    updateUI();\n    d3.select(\"#polylineToolUI\").style(\"visibility\", \"hidden\");\n    if (pts.length > 1) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"path\", {vertices: pts});\n        store.dispatch(createNewItem(r.id));\n        //store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    pts = [];\n    x = undefined;\n    y = undefined;\n}","import React from \"react\";\nimport './css/Canvas.css';\nimport { connect } from \"react-redux\";\nimport { useEffect } from 'react';\nimport { deleteItems, select, updateItem } from \"./canvasSlice\";\nimport store from \"./store\";\nimport * as PolylineTool from \"./tools/PolylineTool\";\n\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    itemUpdated: state.canvas.itemUpdated,\n    scaleUpdated: state.canvas.scaleUpdated,\n    dataItemJoined: state.canvas.dataItemJoined,\n    itemsDeleted: state.canvas.itemsDeleted\n});\n\nfunction Canvas(props) {\n\n    useEffect(() => {\n        props.renderer.render(props.scene);\n    }, [props.scene, props.renderer, props.itemUpdated, props.scaleUpdated, props.dataItemJoined, props.itemsDeleted])\n\n    useEffect(() => {\n\n        const translateByKey = (x, y) => {\n            let s = store.getState().canvas.selected;\n            if (s && s.length > 0) {\n                let item = props.scene.getItem(s[0]);\n                if (item) {\n                    props.scene.translate(item, x, y);\n                    store.dispatch(updateItem({id: item.id, type: item.type, properties: {x: item.x, y: item.y}}));\n                }\n            }\n            let ds = store.getState().canvas.directSelected;\n            if (ds) {\n                let itm = props.scene.getItem(ds);\n                if (itm.parent.type === \"path\") {\n                    itm._doTranslate(x, y);\n                    store.dispatch(updateItem({id: itm.parent.id, type: itm.parent.type, properties: {x: itm.parent.x, y: itm.parent.y}}));\n                }\n            }\n        }\n\n        document.addEventListener('keydown', (e) => {\n            // e.preventDefault();\n            // e.stopPropagation();\n            switch(e.key) {\n                case \"Delete\": {\n                    let s = store.getState().canvas.selected;\n                    if (s && s.length > 0) {\n                        for (let i = s.length - 1; i >= 0; i--) {\n                            let item = props.scene.getItem(s[i]);\n                            if (item && item.parent === props.scene) {\n                                store.dispatch(select([]));\n                                props.scene.removeItem(item);\n                                store.dispatch(deleteItems([item].map(d => d.id)));\n                            }\n                        }\n                    }\n                    break;\n                }\n                case \"ArrowLeft\": {\n                    translateByKey(-5, 0);\n                    break;\n                }\n                case \"ArrowRight\": {\n                    translateByKey(5, 0);\n                    break;\n                }\n                case \"ArrowUp\": {\n                    translateByKey(0, -5);\n                    break;\n                }\n                case \"ArrowDown\": {\n                    translateByKey(0, 5);\n                    break;\n                }\n                case \"Escape\": {\n                    if (store.getState().tool.activeTool === \"Pen\") {\n                        PolylineTool.finish(props.scene, props.datasets, props.renderer, props.undoStack);\n                    }\n                    break;\n                }\n                default:\n                    break;\n            }\n        });\n    },[props.scene, props.datasets, props.renderer, props.undoStack])\n\n    switch(props.type) {\n        case \"canvas\":\n            return (\n                <canvas className=\"canvas\" id=\"canvas\"></canvas>\n            );\n        default:\n        case \"svg\":\n            return (\n                <svg className=\"canvas\" id=\"canvas\"></svg>\n            );\n    }\n}\n\nexport default connect(mapStateToProps)(Canvas);;","import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as d3 from 'd3';\nimport store from \"../store\";\nimport { updateItem, updateScale } from \"../canvasSlice\";\nimport { getSVGPathData } from \"../Util\";\nimport { getPeersInScene } from \"atlas-vis\";\n\nconst getHandlePosition = {\n    nw: (b) => ({x: b.left, y: b.top}),\n    n: (b) => ({x: b.x, y: b.top}),\n    ne: (b) => ({x: b.right, y: b.top}),\n    e: (b) => ({x: b.right, y: b.y}),\n    se: (b) => ({x: b.right, y: b.bottom}),\n    s: (b) => ({x: b.x, y: b.bottom}),\n    sw: (b) => ({x: b.left, y: b.bottom}),\n    w: (b) => ({x: b.left, y: b.y})\n}\n\nconst showAxisHandle = (scene, axis) => {\n    if (!axis) return;\n    const h = d3.select(\"#axisHandle\").style(\"visibility\", \"visible\");\n    h.select(\"rect\").call(d3.drag().on(\"drag\", function(e) {\n            e.sourceEvent.stopPropagation();\n            let dir = axis.isFlipped ? -1 : 1;\n            const scale = axis.encoding.scale;\n            if (axis.channel === \"x\" || axis.channel === \"width\") {\n                let newRE = scale.rangeExtent + e.dx * dir;\n                if (newRE <= 0) {\n                    if (scale.getEncodedChannels().indexOf(\"width\") < 0)\n                        scale.isFlipped = !scale.isFlipped;\n                    else\n                        return;\n                }\n                axis.encoding.scale.rangeExtent = newRE;\n            } else if (axis.channel === \"y\" || axis.channel === \"height\") {\n                let newRE = scale.rangeExtent - e.dy * dir;\n                if (newRE <= 0) {\n                    if (scale.getEncodedChannels().indexOf(\"height\") < 0)\n                        scale.isFlipped = !scale.isFlipped;\n                    else\n                        return;\n                }\n                axis.encoding.scale.rangeExtent = newRE;\n            }\n            store.dispatch(updateScale({id: axis.encoding.scale.id, type: axis.encoding.scale.type, axis: axis.id}));\n        }));\n    updateAxisHandlePosition(axis);\n}\n\nconst updateAxisHandlePosition = (axis) => {\n    if (!axis) return;\n    const h = d3.select(\"#axisHandle\");\n    let x1, y1, x2, y2, x, y, wd, ht, tx, ty;\n    switch (axis.channel) {\n        case \"x\":\n        case \"width\":\n            x1 = axis.bounds.left;\n            y1 = axis.bounds.middle;\n            x2 = axis.bounds.right;\n            y2 = axis.bounds.middle;\n            wd = 45;\n            ht = 16;\n            x = axis.isFlipped ? axis.bounds.left : axis.bounds.right - wd;\n            y = axis.bounds.middle - ht/2;\n            tx = x + 5;\n            ty = y + ht/2;\n            h.select(\"text\").style(\"writing-mode\", \"lr\")\n            break;\n        case \"y\":\n        case \"height\":\n            x1 = axis.bounds.center;\n            y1 = axis.bounds.top;\n            x2 = axis.bounds.center;\n            y2 = axis.bounds.bottom;\n            wd = 16;\n            ht = 45;\n            x = axis.bounds.center - wd/2;\n            y = axis.isFlipped ? axis.bounds.bottom - ht : axis.bounds.top;\n            tx = x1 + 3;\n            ty = y + 5;\n            h.select(\"text\").style(\"writing-mode\", \"tb\").style(\"glyph-orientation-vertical\", 0);\n            break;\n        default:\n            break;\n    }\n    h.select(\"line\").attr(\"x1\", x1).attr(\"x2\", x2).attr(\"y1\", y1).attr(\"y2\", y2);\n    h.select(\"rect\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", wd).attr(\"height\", ht).attr(\"rx\", 6).attr(\"ry\", 6);\n    h.select(\"text\").text(axis.encoding.scale.rangeExtent.toFixed(0) + \"px\").attr(\"x\", tx).attr(\"y\", ty);\n}\n\nconst hideAxisHandle = () => {\n    d3.select(\"#axisHandle\").style(\"visibility\", \"hidden\");\n}\n\nconst redrawRect = (b, styles, rect) => {\n    const attrs = {\n        \"x\": b.left,\n        \"y\": b.top, \n        \"width\": b.width,\n        \"height\": b.height\n    };\n    for (let a in attrs)\n        rect.attr(a, attrs[a]);\n    for (let s in styles)\n        rect.style(s, styles[s]);\n};\n\nconst redrawSelection = (selected, scene) => {\n    //clear selection first\n    d3.select(\"#selectionUI\").selectAll(\"circle\").style(\"visibility\", \"hidden\");\n    d3.select(\"#handleG\").style(\"visibility\", \"hidden\");\n    d3.selectAll(\".openGroup\").style(\"visibility\", \"hidden\");\n    d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n    d3.select(\"#selectPeerOutline\").style(\"visibility\", \"hidden\");\n    d3.select(\"#boundsOutline\").style(\"visibility\", \"hidden\");\n    \n    if (selected.length === 1) {\n        const itm = scene.getItem(selected[0]);\n        if (!itm) return;\n        //draw peer outline\n        let peers = getPeersInScene(itm);\n        if (peers.length > 1) {\n            let peerPathData = getSVGPathData(peers, 2);\n            d3.select(\"#selectPeerOutline\").style(\"visibility\", \"visible\").attr(\"d\", peerPathData);\n        }\n\n        //draw item outline\n        let styles, b;\n        if (itm.type === \"collection\" || itm.type === \"axis\" || itm.type === \"legend\") {\n            styles = {\"stroke\": \"#1ecb40\", \"stroke-dasharray\": \"5,5\", \"stroke-width\": 2, \"fill\": \"none\"};\n        } else {\n            styles = {\"stroke\": \"#1592e6\", \"stroke-dasharray\": \"none\", \"stroke-width\": 1.5,  \"fill\": \"none\"};\n        }\n        if (itm.type === \"legend\") {\n            b = itm.bounds.clone();\n            b.left -= 10;\n            b.top -= 10;\n            b.width += 20;\n            b.height += 20;\n        } else {\n            b = itm.bounds;\n        }\n        if (itm.type === \"path\" || itm.type === \"area\" || itm.type === \"polygon\" || itm.type === \"arc\" || itm.type === \"pie\") {\n            d3.select(\"#boundsOutline\").style(\"visibility\", \"hidden\");\n            d3.select(\"#pathOutline\").style(\"visibility\", \"visible\");\n            d3.select(\"#pathSegments\").attr(\"d\", itm.getSVGPathData());\n            d3.select(\"#pathVertices\").attr(\"d\", getSVGPathData(itm.vertices, 2));\n        } else {\n            d3.select(\"#boundsOutline\").style(\"visibility\", \"visible\");\n            d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n            //d3.select(\"#itemOutline\").style(\"visibility\", \"visible\");\n            redrawRect(b, styles, d3.select(\"#boundsOutline\"));\n        }\n\n        //draw parents\n        d3.selectAll(\".openGroup\").style(\"visibility\", \"hidden\");\n        let parent = itm.parent, cnt = 1;\n        const parentStyles = {\"stroke\": \"#1ecb40\", \"stroke-width\": 4, \"fill\": \"none\", \"opacity\": 0.15, \"visibility\": \"visible\"};\n        while (parent && parent.type !== \"scene\") {\n            redrawRect(parent.bounds, parentStyles, d3.select(\"#openGroup\"+cnt));\n            parent = parent.parent;\n            cnt += 1;\n        }\n\n        //draw handles\n        d3.select(\"#handleG\").style(\"visibility\", \"visible\");\n        const g = d3.select(\"#selectionUI\"), resizable = [\"rect\", \"circle\", \"line\", \"pointText\"];\n        if (resizable.indexOf(itm.type) < 0) {\n            g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n            return;\n        } \n        \n        for (let h of handles) {\n            let p = getHandlePosition[h](b);\n            g.select(\".\" + h).style(\"cursor\", h+\"-resize\").attr(\"cx\", p.x).attr(\"cy\", p.y).style(\"visibility\", \"visible\");\n        }\n\n        if (itm.type === \"line\") {\n            if (itm.bounds.width === 0) {\n                g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n                g.select(\".n\").style(\"visibility\", \"visible\");\n                g.select(\".s\").style(\"visibility\", \"visible\");\n            }\n            if (itm.bounds.height === 0) {\n                g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n                g.select(\".e\").style(\"visibility\", \"visible\");\n                g.select(\".w\").style(\"visibility\", \"visible\");\n            }\n        } else if (itm.type === \"pointText\") {\n            //todo: show se anchor\n            g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n            g.select(\".se\").style(\"visibility\", \"visible\");\n        } \n    } else if (selected.length > 1) {\n        const itms = selected.map(d => scene.getItem(d));\n        d3.select(\"#handleG\").style(\"visibility\", \"visible\");\n        let styles = {\"stroke\": \"#1592e6\", \"stroke-dasharray\": \"none\", \"stroke-width\": 1.5,  \"fill\": \"none\", \"visibility\": \"visible\"};\n        let bounds = itms[0].bounds.clone();\n        for (let i = 1; i < itms.length; i++)\n            bounds = bounds.union(itms[i].bounds);\n        redrawRect(bounds, styles, d3.select(\"#boundsOutline\"));\n        d3.select(\"#selectPeerOutline\").style(\"visibility\", \"hidden\");\n        d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n    }\n}\n\nconst redrawDirectSelection = (directSelected, scene) => {\n    d3.selectAll(\".directSelectPreview\").style(\"visibility\", \"hidden\");\n    if (directSelected) {\n        const itm = scene.getItem(directSelected);\n        if (!itm) {\n            d3.selectAll(\".directSelected\").style(\"visibility\", \"hidden\");\n            d3.select(\"#directSelectPeerOutline\").style(\"visibility\", \"hidden\");\n            return;\n        }\n        //draw peer outline\n        let peers = getPeersInScene(itm);\n        if (peers.length > 1) {\n            let peerPathData = getSVGPathData(peers, 4);\n            d3.select(\"#directSelectPeerOutline\").style(\"visibility\", \"visible\").attr(\"d\", peerPathData);\n        }\n\n        const styles = {\"stroke\": \"#1592e6\", \"stroke-width\": 2, \"fill\": \"none\", \"visibility\": \"visible\"};\n        if (itm.type === \"segment\") {\n            let seg = d3.select(\"#segment\").attr(\"x1\", itm.vertex1.x).attr(\"y1\", itm.vertex1.y)\n                        .attr(\"x2\", itm.vertex2.x).attr(\"y2\", itm.vertex2.y);\n            for (let s in styles)\n                seg.style(s, styles[s]);\n            d3.select(\"#vertex\").style(\"visibility\", \"hidden\");\n        } else {\n            let b = {left: itm.x - 2, top: itm.y - 2, width: 4, height: 4};\n            redrawRect(b, styles, d3.select(\"#vertex\"));\n            d3.select(\"#segment\").style(\"visibility\", \"hidden\");\n        } \n    } else {\n        d3.selectAll(\".directSelected\").style(\"visibility\", \"hidden\");\n        d3.select(\"#directSelectPeerOutline\").style(\"visibility\", \"hidden\");\n    }\n}\n\nconst redrawDirectSelectPreview = (directSelected, scene) => {\n    d3.selectAll(\".directSelectPreview\").style(\"visibility\", \"hidden\");\n    if (directSelected) {\n        const itm = scene.getItem(directSelected);\n        if (!itm) return;\n        const styles = {\"stroke\": \"#79AFE0\", \"stroke-width\": 2, \"fill\": \"none\", \"visibility\": \"visible\"};\n        if (itm.type === \"segment\") {\n            let seg = d3.select(\"#segmentPreview\").attr(\"x1\", itm.vertex1.x).attr(\"y1\", itm.vertex1.y)\n                        .attr(\"x2\", itm.vertex2.x).attr(\"y2\", itm.vertex2.y);\n            for (let s in styles)\n                seg.style(s, styles[s]);\n        } else {\n            let b = {left: itm.x - 3, top: itm.y - 3, width: 6, height: 6};\n            redrawRect(b, styles, d3.select(\"#vertexPreview\"));\n        } \n    }\n}\n\nconst redrawGridGaps = (selected, scene) => {\n    if (selected.length === 1) {\n        const itm = scene.getItem(selected[0]);\n        if (itm && itm.type === \"collection\" && itm.layout && itm.layout.type === \"grid\") {\n            const layout = itm.layout, cb = layout.cellBounds, numCols = layout.numCols, numRows = layout.numRows;\n            let data = [];// numRects = numCols + numRows - 2;\n            for (let i = 0; i < numCols - 1; i++) {\n                let x = layout.colGap < 0 ? cb[i].right + layout.colGap : cb[i].right;\n                data.push({x: x, y: cb[i].top, width: Math.abs(layout.colGap), height: itm.bounds.height, type: \"c\"});\n            }\n            for (let i = 0; i < numRows - 1; i++) {\n                let y = layout.rowGap < 0 ? cb[i * numCols].bottom + layout.rowGap : cb[i * numCols].bottom;\n                data.push({x: cb[0].left, y: y, width: itm.bounds.width, height: Math.abs(layout.rowGap), type: \"r\"});\n            }\n            let rects = d3.select(\"#gridGaps\").style(\"visibility\", \"visible\").selectAll(\"rect\").data(data);\n            rects.enter().append(\"rect\").merge(rects)\n                .attr(\"x\", d => d.x).attr(\"y\", d => d.y)\n                .attr(\"width\", d => d.width).attr(\"height\", d => d.height)\n                .style(\"fill\", \"pink\").style(\"opacity\", 0.2)\n                .style(\"cursor\", d => d.type === \"r\" ? \"ns-resize\" : \"ew-resize\")\n                .call(d3.drag().on(\"drag\", function(e) {\n                    e.sourceEvent.stopPropagation();\n                    const type = d3.select(this).datum().type;\n                    let o = {}, g = type === \"r\" ? \"rowGap\" : \"colGap\", d = type === \"r\" ? e.dy : e.dx;\n                    o[g] = itm.layout[g] + d;\n                    scene.setProperties(itm.layout, o);\n                    store.dispatch(updateItem({id: selected[0], type: itm.type, properties: o}));\n                }))\n                ;\n            rects.exit().remove();\n        } else {\n            d3.select(\"#gridGaps\").style(\"visibility\", \"hidden\");\n        }\n    } else {\n        d3.select(\"#gridGaps\").style(\"visibility\", \"hidden\");\n    }\n}\n\nvar resizeX, resizeY;\n\nconst resizeStarted = (e) => {\n    resizeX = e.x;\n    resizeY = e.y;\n};\n\nconst resizing = function(e, h, selected) {\n    let dx = e.x - resizeX, dy = e.y - resizeY;\n    let b = getResizeBounds(h, selected.bounds, dx, dy);\n    let g = d3.select(\"#handleG\");\n    d3.select(\"#boundsOutline\").attr(\"x\", b.left).attr(\"y\", b.top).attr(\"width\", b.width).attr(\"height\", b.height);\n    for (let h of handles) {\n        let p = getHandlePosition[h](b);\n        g.select(\".\" + h).attr(\"cx\", p.x).attr(\"cy\", p.y);\n    }\n};\n\nconst resizeEnded = function(e, h, selected, scene) {\n    let dx = e.x - resizeX, dy = e.y - resizeY;\n    let b = getResizeBounds(h, selected.bounds, dx, dy);\n    let toChange;\n    if (selected.type === \"rect\" || selected.type === \"line\") {\n        toChange = {width: b.width, height: b.height, xRef: (h.indexOf(\"e\") < 0 ? \"right\" : \"left\"), yRef: (h.indexOf(\"n\") < 0 ? \"top\" : \"bottom\")};\n    } else if (selected.type === \"circle\") {\n        toChange = {radius: Math.max(b.width, b.height)/2};\n    } else if (selected.type === \"pointText\") {\n        let fs = Math.floor(parseInt(selected.fontSize) * b.width/selected.bounds.width);\n        fs = Math.max(4, fs);\n        toChange = {\"fontSize\": fs+\"px\"}\n    }\n\n    if (toChange) {\n        scene.setProperties(selected, toChange);\n        store.dispatch(updateItem({id: selected.id, type: selected.type, properties: toChange}));\n    }\n};\n\nconst getResizeBounds = (h, itmBounds, dx, dy) => {\n    let b = {\n        top: itmBounds.top,\n        height: itmBounds.height,\n        left: itmBounds.left,\n        width: itmBounds.width\n    };\n\n    if (h.indexOf(\"s\") >= 0) {\n        if (dy < -itmBounds.height + 1)\n            dy = -itmBounds.height + 1;\n        b.height += dy;\n    } else if (h.indexOf(\"n\") >= 0) {\n        if (dy > itmBounds.height - 1)\n            dy = itmBounds.height - 1;\n        b.height -= dy;\n        b.top += dy;   \n    }\n\n    if (h.indexOf(\"e\") >= 0) {\n        if (dx < -itmBounds.width + 1)\n            dx = -itmBounds.width + 1;\n        b.width += dx;\n    } else if (h.indexOf(\"w\") >= 0) {\n        if (dx > itmBounds.width - 1)\n            dx = itmBounds.width - 1;\n        b.left += dx;\n        b.width -= dx;\n    }\n\n    b.right = b.left + b.width;\n    b.bottom = b.top + b.height;\n    b.x = (b.left + b.right)/2;\n    b.y = (b.top + b.bottom)/2;\n\n    return b;\n}\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    directSelected: state.canvas.directSelected,\n    directSelectPreview: state.canvas.directSelectPreview,\n    itemUpdated: state.canvas.itemUpdated,\n    axisHandleVisible: state.canvas.axisHandleVisible,\n    scaleUpdated: state.canvas.scaleUpdated,\n    rectSelectRegion: state.canvas.rectSelectRegion\n});\n\nconst handles = [\"nw\", \"n\", \"ne\", \"w\", \"sw\", \"s\", \"se\", \"e\"];\n\nfunction SelectionUI(props) {\n\n    useEffect(() => {\n        if (props.selected.length === 0) return;\n        let selected = props.scene.getItem(props.selected[0]);\n        d3.select(\"#selectionUI\").selectAll(\"circle\").style(\"stroke\", \"#1592e6\").style(\"fill\", \"white\")\n            .call(d3.drag().on(\"start\", resizeStarted).on(\"drag\", function(e) { resizing(e, d3.select(this).attr(\"class\"), selected) })\n            .on(\"end\", function(e) {\n                resizeEnded(e, d3.select(this).attr(\"class\"), selected, props.scene);\n            }))\n    }, [props.scene, props.selected]);\n\n    useEffect(() => {\n        redrawSelection(props.selected, props.scene);\n        redrawDirectSelection(props.directSelected, props.scene);\n        redrawGridGaps(props.selected, props.scene);\n    }, [props.scene, props.selected, props.directSelected, props.itemUpdated, props.scaleUpdated]);\n\n    useEffect(() => {\n        redrawDirectSelectPreview(props.directSelectPreview, props.scene);\n    }, [props.directSelectPreview, props.scene])\n\n    useEffect(() => {\n        if (props.axisHandleVisible.visible)\n            showAxisHandle(props.scene, props.scene.getItem(props.axisHandleVisible.axis));\n        else\n            hideAxisHandle();\n    }, [props.scene, props.axisHandleVisible]);\n\n    useEffect(() => {\n        if (props.rectSelectRegion.width === 0 || props.rectSelectRegion.height === 0)\n            d3.select(\"#rectSelectRegion\").style(\"visibility\", \"hidden\");\n        const styles = {\"stroke\": \"#ccc\", \"stroke-width\": 2, \"fill\": \"none\", \"stroke-dasharray\": \"5,5\", \"opacity\": 1, \"visibility\": \"visible\"};\n        redrawRect(props.rectSelectRegion, styles, d3.select(\"#rectSelectRegion\"));\n    }, [props.rectSelectRegion]);\n\n    useEffect(() => {\n        if (props.scaleUpdated.axis)\n            updateAxisHandlePosition(props.scene.getItem(props.scaleUpdated.axis));\n    }, [props.scene, props.scaleUpdated]);\n\n    return (\n        <g id=\"selectionUI\">\n            <rect id=\"openGroup1\" className=\"openGroup\"></rect>\n            <rect id=\"openGroup2\" className=\"openGroup\"></rect>\n            <rect id=\"openGroup3\" className=\"openGroup\"></rect>\n            <rect id=\"openGroup4\" className=\"openGroup\"></rect>\n            <path id=\"selectPeerOutline\" style={{\"stroke\": \"#60bdf0\", \"strokeWidth\": 1,  \"fill\": \"none\"}}></path>\n            <path id=\"directSelectPeerOutline\" style={{\"stroke\": \"#60bdf0\", \"strokeWidth\": 1,  \"fill\": \"none\"}}></path>\n            <rect id=\"boundsOutline\"></rect>\n            <g id=\"handleG\">\n                {handles.map(h => <circle key={h} className={h} r=\"4\"></circle>)}\n            </g>\n            <g id=\"axisHandle\">\n                <line style={{strokeWidth:\"2px\", stroke:\"#1ecb40\"}}></line>\n                <rect style={{fill:\"#1ecb40\"}}></rect>\n                <text style={{fill:\"white\", \"fontSize\": \"11px\", \"pointerEvents\": \"none\", fontWeight: \"bold\", \"alignmentBaseline\": \"middle\", \"dominantBaseline\": \"middle\"}}></text>\n            </g>\n            <g id=\"pathOutline\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": 2,  \"fill\": \"none\"}}>\n                <path id=\"pathSegments\"></path>\n                <path id=\"pathVertices\"></path>\n            </g>\n            <g id=\"gridGaps\">\n                <rect></rect>\n            </g>\n            <rect id=\"rectSelectRegion\"></rect>\n            <line id=\"segment\" className=\"directSelected\"></line>\n            <rect id=\"vertex\" className=\"directSelected\"></rect>\n            <line id=\"segmentPreview\" className=\"directSelectPreview\"></line>\n            <rect id=\"vertexPreview\" className=\"directSelectPreview\"></rect>\n        </g>\n    )\n}\n\nexport default connect(mapStateToProps)(SelectionUI);\nexport {showAxisHandle, hideAxisHandle};","import store from \"../store\";\nimport { getPositionInScene } from \"../Util\";\nimport * as atlas from \"atlas-vis\";\nimport { select, toggleAxisHandle, customizeColorPalette, rectSelect } from \"../canvasSlice\";\nimport { updateItem } from \"../canvasSlice\";\n\nvar clickHeld = false, rectRegion = false, dragging = false, activeItem = null, downX, downY, itemX = {}, itemY = {};\n\nexport const hitTest = (e, scene) => {\n    const p = getPositionInScene(e.clientX, e.clientY);\n    const cg = store.getState().canvas.selected;\n    //if nothing is selected, find target among scene's children\n    if (cg.length === 0) {\n        return atlas.hitTest(scene, p[0], p[1]);\n    }\n    const sel = scene.getItem(cg[0]);\n    if (sel.type === \"axis\" || sel.type === \"legend\") {\n        return atlas.hitTest(scene, p[0], p[1]);\n    } else {\n        //if selected is leaf, find target among its parent's children\n        //this is useful for selecting a sibling of the current selection\n        let itm = sel.parent;\n        while (itm) {\n            let hit = atlas.hitTest(itm, p[0], p[1]);\n            if (hit) return hit;\n            else itm = itm.parent;\n        }\n        return null;\n    }\n}\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    downX = e.clientX;\n    downY = e.clientY;\n    let itm = hitTest(e, scene);\n    if (itm !== null && itm.type === \"legend\") {\n        if (itm.channel.indexOf(\"Color\") > 0 && itm.fieldType === \"string\") {\n            const p = getPositionInScene(e.clientX, e.clientY);\n            const mark = itm.pathHitTest(p[0], p[1]);\n            if (mark !== null) {\n                //customize categorical color mapping\n                const v = mark.dataScope.getFieldValue(\"category\");\n                store.dispatch(customizeColorPalette({legend: itm.id, value: v}));\n                return;\n            }\n        }\n    }\n\n    store.dispatch(customizeColorPalette({legend: null, value: null}));\n    activeItem = itm;\n    if (itm === null && e.button === 0) {\n        rectRegion = true;\n    } else if (itm !== null) {\n        itemX[itm.id] = itm.type === \"axis\" && (itm.channel === \"y\" || itm.channel === \"height\") ? itm.pathX : itm.x;\n        itemY[itm.id] = itm.type === \"axis\" && (itm.channel === \"x\" || itm.channel === \"width\") ? itm.pathY : itm.y;\n    }\n}\n\nconst dragItem = (item, scene, newX, newY, dx, dy) => {\n    if (item.type === \"axis\") {\n        if (item.channel === \"x\" || item.channel === \"width\") {\n            item.pathY = newY;\n        } else if (item.channel === \"y\" || item.channel === \"height\") {\n            item.pathX = newX;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: {pathPosition: item.pathPosition}}));\n    } else {\n        scene.translate(item, dx, dy);\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: {x: item.x, y: item.y}}));\n    }\n}\n\nexport const mouseMove = (e, scene, renderer) => {\n\n    if (!clickHeld) { //hovering\n        const item = hitTest(e, scene);\n        if (item && item.type === \"axis\" && item.encoding) {\n            store.dispatch(toggleAxisHandle({axis: item.id, visible: true}));\n        } else {\n            store.dispatch(toggleAxisHandle({visible: false}));\n        }\n        return;\n    }\n \n    //clickHeld\n    if (rectRegion) { //rect select\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: wd, height: ht}));\n    } else { //dragging\n        let sel = store.getState().canvas.selected, itmInSelection = sel.indexOf(activeItem.id) >= 0;;\n        if (sel.length === 0 || !itmInSelection) {\n            store.dispatch(select([activeItem.id]));\n            dragging = true;\n            dragItem(activeItem, scene, itemX[activeItem.id] + e.clientX - downX, itemY[activeItem.id] + e.clientY - downY, itemX[activeItem.id] + e.clientX - downX - activeItem.x, itemY[activeItem.id] + e.clientY - downY - activeItem.y);\n        } else if (itmInSelection) {\n            dragging = true;\n            for (let s of store.getState().canvas.selected) {\n                const item = scene.getItem(s);\n                dragItem(item, scene, itemX[item.id] + e.clientX - downX, itemY[item.id] + e.clientY - downY, itemX[item.id] + e.clientX - downX - item.x, itemY[item.id] + e.clientY - downY - item.y);\n            }\n        } \n        \n        // const s1 = store.getState().canvas.selected[0];\n        // if (!s1) return;\n    }\n}\n\nexport const mouseUp = (e, scene) => {\n    if (rectRegion) {\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: 0, height: 0}));\n        let r = {left: left, top: top, width: wd, height: ht, right: left + wd, bottom: top + ht};\n        let itms = atlas.rectHitTest(scene, r).map(d => d.id);\n        for (let m of itms) {\n            const itm = scene.getItem(m);\n            itemX[itm.id] = itm.type === \"axis\" && (itm.channel === \"y\" || itm.channel === \"height\") ? itm.pathX : itm.x;\n            itemY[itm.id] = itm.type === \"axis\" && (itm.channel === \"x\" || itm.channel === \"width\") ? itm.pathY : itm.y;\n        }\n        store.dispatch(select(itms));\n    } else if (!dragging) { //not dragging\n        if (activeItem === null)\n            store.dispatch(select([]));\n        else {\n            let sel = store.getState().canvas.selected, newSel;\n            let itmInSelection = sel.indexOf(activeItem.id) >= 0;\n            if (e.shiftKey && !itmInSelection) {\n                newSel = sel.concat(activeItem.id);\n            } else if (e.shiftKey && itmInSelection) {\n                newSel = sel.filter(d => d !== activeItem.id);\n                itemX[activeItem.id] = activeItem.type === \"axis\" && (activeItem.channel === \"y\" || activeItem.channel === \"height\") ? activeItem.pathX : activeItem.x;\n                itemY[activeItem.id] = activeItem.type === \"axis\" && (activeItem.channel === \"x\" || activeItem.channel === \"width\") ? activeItem.pathY : activeItem.y;\n            } else {\n                newSel = [activeItem.id];\n            }\n            store.dispatch(select(newSel));\n        }\n    }\n    \n    // else if (store.getState().canvas.selected.length > 0){\n    //     let item = scene.getItem(store.getState().canvas.selected[0]);\n    //     if (item === null && !dragging) {\n    //         store.dispatch(select([]));\n    //     }\n    // }\n    // let sel = store.getState().canvas.selected;\n    // let itmInSelection = sel.indexOf(itm.id) >= 0;\n    // if (e.shiftKey) {\n    //     store.dispatch(select(sel.concat(itm.id)));\n    // } else {\n    //     store.dispatch(select([itm.id]));\n    // }\n\n    clickHeld = false;\n    rectRegion = false;\n    dragging = false;\n    activeItem = null;\n    // itemX = {};\n    // itemY = {};\n}\n\nexport const doubleClick = (e, scene) => {\n    const cg = store.getState().canvas.selected;\n    if (cg.length> 0) {\n        const itm = scene.getItem(cg[0]);\n        if (itm && itm.type !== \"axis\" && itm.type !== \"legend\" && itm.children && itm.children.length > 0) {\n            const p = getPositionInScene(e.clientX, e.clientY);\n            let child = atlas.hitTest(itm, p[0], p[1]);\n            if (child) {\n                store.dispatch(select([child.id]));\n            }\n        }\n    }\n}","import * as atlas from \"atlas-vis\";\nimport { getPositionInScene } from \"../Util\";\nimport store from \"../store\";\nimport { directSelect, directSelectPreview, rectSelect, toggleAxisHandle } from \"../canvasSlice\";\n\nvar downX, downY, clickHeld = false;\n\nexport const mouseDown = (e, scene) => {\n    const p = getPositionInScene(e.clientX, e.clientY);\n    const item = atlas.inMarkHitTest(scene, p[0], p[1], 4);\n    if (!item) {\n        downX = e.clientX;\n        downY = e.clientY;\n        clickHeld = true;\n    }\n}\n\nexport const mouseUp = (e, scene, renderer) => {\n    if (clickHeld) {\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: 0, height: 0}));\n        let r = {left: left, top: top, width: wd, height: ht, right: left + wd, bottom: top + ht};\n        let itm = atlas.inMarkRectHitTest(scene, r, 2);\n        store.dispatch(directSelect(itm ? itm.id : null));\n        clickHeld = false;\n    } else {\n        const p = getPositionInScene(e.clientX, e.clientY);\n        const item = atlas.inMarkHitTest(scene, p[0], p[1], 4);\n        store.dispatch(directSelect(item ? item.id : null));\n    }\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) {\n        const p = getPositionInScene(e.clientX, e.clientY);\n        const itm = atlas.hitTest(scene, p[0], p[1]);\n        if (itm && itm.type === \"axis\" && itm.encoding) {\n            store.dispatch(toggleAxisHandle({axis: itm.id, visible: true}));\n        } else {\n            store.dispatch(toggleAxisHandle({visible: false}));\n                // const item = atlas.inMarkHitTest(scene, p[0], p[1], 4);\n                // store.dispatch(directSelectPreview(item ? item.id : null));\n        }\n\n        const item = atlas.inMarkHitTest(scene, p[0], p[1], 4);\n        store.dispatch(directSelectPreview(item ? item.id : null));\n\n        // const leafItem = atlas.hitTestAll(scene, p[0], p[1]);\n        // if (leafItem && leafItem.type === \"path\" && !store.getState().canvas.directSelected) {\n        //     d3.select(\"#pathOutline\").style(\"visibility\", \"visible\");\n        //     d3.select(\"#pathSegments\").attr(\"d\", leafItem.getSVGPathData());\n        //     d3.select(\"#pathVertices\").attr(\"d\", getSVGPathData(leafItem.vertices, 2));\n        // } else {\n        //     d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n        // }\n    } else {\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: wd, height: ht}));\n    }\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, downX, downY, moved = false;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let rect = d3.select(\"#rectToolUI\");\n    rect.style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"rect\", {left: parseInt(rect.attr(\"x\")), top: parseInt(rect.attr(\"y\")), \n                width: parseInt(rect.attr(\"width\")), height: parseInt(rect.attr(\"height\"))});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY);\n    let x1 = downX, x2 = p[0], y1 = downY, y2 = p[1];\n    let x, y, width, height;\n    x = Math.min(x1, x2);\n    y = Math.min(y1, y2);\n    width = Math.abs(x1 - x2);\n    height = Math.abs(y1 - y2);\n    if (e.shiftKey) {\n        width = Math.min(width, height);\n        height = width;\n        x = x1 < x2 ? x1 : x1 - width;\n        y = y1 < y2 ? y1 : y1 - height;\n    }\n    d3.select(\"#rectToolUI\").style(\"visibility\", \"visible\").attr(\"x\", x).attr(\"y\", y)\n        .attr(\"width\", width).attr(\"height\", height);\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, moved = false, downX, downY;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let c = d3.select(\"#circleToolUI\");\n    c.style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"circle\", {x: parseInt(c.attr(\"cx\")), y: parseInt(c.attr(\"cy\")), \n                radius: parseInt(c.attr(\"r\")), fillColor: \"none\"});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY);\n    let x1 = downX, x2 = p[0], y1 = downY, y2 = p[1];\n    let cx = (x1 + x2)/2, cy = (y1 + y2)/2, r = Math.min(Math.abs(x1 - x2)/2, Math.abs(y1 - y2)/2);\n    d3.select(\"#circleToolUI\").style(\"visibility\", \"visible\").attr(\"cx\", cx).attr(\"cy\", cy)\n        .attr(\"r\", r);\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, moved = false, downX, downY;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let c = d3.select(\"#ringToolOuterUI\");\n    c.style(\"visibility\", \"hidden\");\n    d3.select(\"#ringToolInnerUI\").style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"ring\", {x: parseInt(c.attr(\"cx\")), y: parseInt(c.attr(\"cy\")), \n                outerRadius: parseInt(c.attr(\"r\")), innerRadius: parseInt(c.attr(\"r\")) * 2/3, fillColor: \"none\"});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY);\n    let x1 = downX, x2 = p[0], y1 = downY, y2 = p[1];\n    let cx = (x1 + x2)/2, cy = (y1 + y2)/2, r = Math.min(Math.abs(x1 - x2)/2, Math.abs(y1 - y2)/2);\n    d3.select(\"#ringToolOuterUI\").style(\"visibility\", \"visible\").attr(\"cx\", cx).attr(\"cy\", cy)\n        .attr(\"r\", r);\n    d3.select(\"#ringToolInnerUI\").style(\"visibility\", \"visible\").attr(\"cx\", cx).attr(\"cy\", cy)\n        .attr(\"r\", r * 2/3);\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, moved = false, downX, downY;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let c = d3.select(\"#lineToolUI\");\n    c.style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"line\", {x1: parseInt(c.attr(\"x1\")), y1: parseInt(c.attr(\"y1\")), \n            x2: parseInt(c.attr(\"x2\")), y2: parseInt(c.attr(\"y2\"))});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY), x2, y2;\n    if (e.shiftKey) {\n        let angle = Math.atan2(p[1] - downY, p[0] - downX) * 180 / Math.PI,\n            angleR = Math.round(angle/45) * 45 * Math.PI/180, \n            dist = Math.sqrt(Math.pow(p[1] - downY, 2) + Math.pow(p[0] - downX, 2));\n        x2 = downX + Math.cos(angleR) * dist;\n        y2 = downY + Math.sin(angleR) * dist;\n    } else {\n        x2 = p[0];\n        y2 = p[1];\n    }\n    d3.select(\"#lineToolUI\").style(\"visibility\", \"visible\").attr(\"x1\", downX).attr(\"y1\", downY)\n            .attr(\"x2\", x2).attr(\"y2\", y2);\n}","import store from './store';\nimport SelectionUI from \"./tools/SelectionUI\";\nimport * as SelectTool from \"./tools/SelectTool\";\nimport * as DirectSelectTool from \"./tools/DirectSelectTool\";\nimport * as RectTool from \"./tools/RectTool\";\nimport * as CircleTool from \"./tools/CircleTool\";\nimport * as RingTool from \"./tools/RingTool\";\nimport * as LineTool from \"./tools/LineTool\";\nimport * as PolylineTool from \"./tools/PolylineTool\";\nimport * as TextTool from \"./tools/TextTool\";\n\nexport default function EventLayer(props) {\n\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.mouseDown(e, props.scene);\n                break;\n            case \"Rect\":\n                RectTool.mouseDown(e, props.scene);\n                break;\n            case \"Ellipse\":\n                CircleTool.mouseDown(e, props.scene);\n                break;\n            case \"Ring\":\n                RingTool.mouseDown(e, props.scene);\n                break;\n            case \"DirectSelect\":\n                DirectSelectTool.mouseDown(e, props.scene);\n                break;\n            case \"Line\":\n                LineTool.mouseDown(e, props.scene);\n                break;\n            case \"Pen\":\n                PolylineTool.mouseDown(e, props.scene);\n                break;\n            default:\n                break;\n        }\n    };\n\n    // const handleMouseDown = useCallback((e) => {\n    //     console.log(\"mouse down\", e);\n    // }, []);\n\n    const handleMouseMove = (e) => {\n        e.preventDefault();\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.mouseMove(e, props.scene, props.renderer);\n                break;\n            case \"Rect\":\n                RectTool.mouseMove(e, props.scene);\n                break;\n            case \"Ellipse\":\n                CircleTool.mouseMove(e, props.scene);\n                break;\n            case \"Ring\":\n                RingTool.mouseMove(e, props.scene);\n                break;\n            case \"DirectSelect\":\n                DirectSelectTool.mouseMove(e, props.scene);\n                break;\n            case \"Line\":\n                LineTool.mouseMove(e, props.scene);\n                break;\n            case \"Pen\":\n                PolylineTool.mouseMove(e, props.scene);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleMouseUp = (e) => {\n        e.preventDefault();\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.mouseUp(e, props.scene);\n                break;\n            case \"Rect\":\n                RectTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Ellipse\":\n                CircleTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Ring\":\n                RingTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Line\":\n                LineTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"DirectSelect\":\n                DirectSelectTool.mouseUp(e, props.scene);\n                break;\n            case \"Pen\":\n                PolylineTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Text\":\n                TextTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleDoubleClick = (e) => {\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.doubleClick(e, props.scene);\n                break;\n            default:\n                break;\n        }\n    };\n\n    return (\n        <svg\n            id=\"evtLayer\"\n            className=\"canvas\"\n            onDoubleClick={handleDoubleClick}\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n        >\n            <SelectionUI scene={props.scene} renderer={props.renderer}></SelectionUI>\n            <rect id=\"rectToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></rect>\n            <circle id=\"circleToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></circle>\n            <line id=\"lineToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\"}}></line>\n            <path id=\"polylineToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\"}}></path>\n            <circle id=\"ringToolOuterUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></circle>\n            <circle id=\"ringToolInnerUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></circle>\n        </svg>\n    )\n\n}","import * as d3 from 'd3';\nimport { createNewItem } from '../canvasSlice';\nimport store from '../store';\nimport { addToStack, getPositionInScene } from '../Util';\nimport * as atlas from \"atlas-vis\";\n\nexport const mouseDown = (e, scene) => {\n\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    const p = getPositionInScene(e.clientX, e.clientY);\n    let item = atlas.hitTest(scene, p[0], p[1]);\n    if (!item && d3.select(\"#textElement\").style(\"visibility\") === \"visible\") {\n        d3.select(\"#textElement\").style(\"visibility\", \"hidden\");\n        renderer.render(scene);\n        return;\n    }\n    if (!item || item.type !== \"pointText\") {\n        addToStack(scene, datasets, undoStack);\n        item = scene.mark(\"text\", {x: e.clientX, y: e.clientY, text: \"\", anchor: [\"left\", \"top\"]});\n        store.dispatch(createNewItem(item.id));\n        renderer.render(scene);\n    }\n    //show editing input\n    d3.select(\"#textElement\").style(\"visibility\", \"visible\").style(\"left\", item.bounds.left+\"px\").style(\"top\", (item.bounds.top - 1)+\"px\")\n        .property(\"value\", item.text).style(\"font-family\", item.fontFamily)\n        .style(\"font-size\", item.fontSize+\"px\").style(\"font-weight\", item.fontWeight).style(\"height\", item.bounds.height)\n        .on(\"input\", (e) => { item.text = d3.select(\"#textElement\").property(\"value\")});\n    document.getElementById(\"textElement\").focus();\n}","import './css/ToolBar.css';\nimport { useDispatch } from \"react-redux\";\nimport { activateTool } from './toolSlice';\nimport { connect } from \"react-redux\";\nimport { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { canDensify, canDivide, canRepeat } from 'atlas-vis';\nimport { Button, Modal } from \"react-bootstrap\";\nimport * as atlas from \"atlas-vis\";\nimport { addToStack, getDefaultCollectionLayout } from './Util';\nimport store from \"./store\";\nimport { select, joinDataItem, directSelect, updateUndoStack, updateRedoStack } from \"./canvasSlice\";\nimport {saveAs} from \"file-saver\";\n\nconst tools = [\"Select\", \"DirectSelect\", \"Line\", \"Rect\", \"Ellipse\", \"Ring\", \"Pen\", \"Text\"];\n\nconst mapStateToProps = state => ({\n    activeTool: state.tool.activeTool,\n    selected: state.canvas.selected,\n    undoStackChanged: state.canvas.undoStackChanged,\n    redoStackChanged: state.canvas.redoStackChanged\n});\n\nconst renderer = atlas.renderer(\"svg\", \"preview\")\n    const scn = atlas.scene();\n\n// const drawPreview = (selectedItem, cmd, dataset, field) => {\n//     if (d3.select(\"#preview\").empty())\n//         return;\n//     scn.removeAll();\n//     if (selectedItem && cmd && field && dataset) {\n//         let item = selectedItem.duplicate();\n//         scn.addChild(item);\n//         if (cmd === \"Repeat\") {\n//             let coll = scn.repeat(item, dataset, {field: field, layout: getDefaultCollectionLayout(item.bounds, dataset.getUniqueFieldValues(field).length)});\n//             let vb = [coll.bounds.left, coll.bounds.top, coll.bounds.width, coll.bounds.height].join(\" \");\n//             d3.select(\"#preview\").attr(\"viewBox\", vb);\n//         }\n//         renderer.clear();\n//         renderer.render(scn);\n//     }\n// }\n\nconst getUsableTbls = (item, datasets) => {\n    let t = {};\n    if (!item) return t;\n    if (item.dataScope) {\n        t[item.dataScope.dataTable.id] = item.dataScope.dataTable;\n    } else {\n        for (let d of datasets) {\n            t[d.id] = d;\n        }\n    }\n    return t;\n}\n\nconst getOrientations = function(type, cmd) {\n    if (cmd === \"Divide\") {\n        switch (type) {\n            case \"rect\":\n                return [\"horizontal\", \"vertical\"];\n            case \"circle\":\n                return [\"angular\", \"radial\"];\n            case \"ring\":\n                return [\"angular\"];\n            case \"pie\":\n                return [\"radial\"];\n            default:\n                return [\"horizontal\", \"vertical\"];\n        }\n    } else if (cmd === \"Densify\") {\n        return [\"horizontal\", \"vertical\"];\n    }\n}\n\nfunction ToolBar(props) {\n\n    const dispatch = useDispatch();\n    const inputFile = useRef(null);\n\n    const [showRepeatModal, setShowRepeatModal] = useState(false);\n    //const [selectedItem, setSelectedItem] = useState(null);\n    // const [datasetId, setDatasetId] = useState(null);\n    //const [dataset, setDataset] = useState(undefined);\n    const [cmd, setCmd] = useState(null);\n    const [tbls, setTbls] = useState({});\n    const [fields, setFields] = useState([]);\n    const [orientations, setOrientations] = useState([]);\n    const [joinMsg, setJoinMsg] = useState(\"\");\n    \n    const doJoin = () => {\n        setShowRepeatModal(false);\n        addToStack(props.scene, props.datasets, props.undoStack);\n        if (cmd === \"Repeat\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n                field = d3.select(\"#fieldSelect\").property(\"value\");\n            let layout = getDefaultCollectionLayout(item, dataset.getUniqueFieldValues(field).length);\n            let coll = props.scene.repeat(item, dataset, {field: field, layout: layout});\n            if (layout.numCols === 1) {\n                props.scene.axis(\"y\", field, {item: item});\n            } else if (layout.numRows === 1) {\n                props.scene.axis(\"x\", field, {item: item});\n            }\n            props.scene.reCreateRelatedAxes(coll);\n            store.dispatch(select([coll.id]));\n            store.dispatch(joinDataItem({}));\n        } else if (cmd === \"Divide\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n                field = d3.select(\"#fieldSelect\").property(\"value\"), \n                o = d3.select(\"#orientationSelect\").property(\"value\");\n            let coll = props.scene.divide(item, dataset, {field: field, orientation: o});\n            store.dispatch(select([coll.id]));\n            store.dispatch(joinDataItem({}));\n        } else if (cmd === \"Densify\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n                field = d3.select(\"#fieldSelect\").property(\"value\"), \n                o = d3.select(\"#orientationSelect\").property(\"value\");\n            let itm = props.scene.densify(item, dataset, {field: field, orientation: o});\n            store.dispatch(select([itm.id]));\n            store.dispatch(joinDataItem({}));\n        }\n    }\n\n    const switchTool = (t) => {\n        d3.select(\"#textElement\").style(\"visibility\", \"hidden\");\n        props.renderer.render(props.scene);\n        switch (t) {\n            case \"Rect\":\n            case \"Ellipse\":\n            case \"Line\":\n            case \"Ring\":\n            case \"Pen\":\n                dispatch(directSelect(null));\n                dispatch(select([]));\n                d3.select(\"#evtLayer\").style(\"cursor\", \"crosshair\");\n                break;\n            case \"Select\":\n                // dispatch(select([]));\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                dispatch(directSelect(null));\n                break;\n            case \"DirectSelect\":\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                dispatch(select([]));\n                break;\n            default:\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                break;\n        }\n        dispatch(activateTool(t));\n    }\n\n    const repeatBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Repeat\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        let t = getUsableTbls(item, props.datasets);\n        // let options = d3.select(\"#datasetSelect\").selectAll(\"option\").data(Object.values(t));\n        // options.enter().append(\"option\").merge(options).property(\"key\", d => d.id).text(d => d.name);\n        // options.exit().remove();\n        setTbls(t);\n        let usedFields = item.firstChild && item.firstChild.dataScope ? item.firstChild.dataScope.fields: [], \n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const divideBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Divide\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        setOrientations(getOrientations(item.type, \"Divide\"));\n        let t = getUsableTbls(item, props.datasets);\n        setTbls(t);\n        let usedFields = item.dataScope ? item.dataScope.fields: [],\n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const densifyBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Densify\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        setOrientations(getOrientations(item.type, \"Densify\"));\n        let t = getUsableTbls(item, props.datasets);\n        setTbls(t);\n        let usedFields = item.dataScope ? item.dataScope.fields: [],\n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const exportSVG = (e) => {\n        let svg = document.getElementById(\"canvas\");\n        var serializer = new XMLSerializer();\n        var source = serializer.serializeToString(svg);\n\n        //add name spaces.\n        if(!source.match(/^<svg[^>]+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)){\n            source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        }\n        if(!source.match(/^<svg[^>]+\"http:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)){\n            source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n        }\n\n        //add xml declaration\n        source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n        let tbls = props.scene.getDataTables();\n        let fname = (Object.values(tbls).length > 0) ? Object.values(tbls)[0].name + \".svg\" : \"visualization.svg\";\n        saveAs(new Blob([source], {\"type\":\"text/plain;charset=utf-8\"}), fname);\n    }\n\n    const saveScene = (e) => {\n        let tbls = props.scene.getDataTables();\n        let fname = (Object.values(tbls).length > 0) ? Object.values(tbls)[0].name + \".alscn\" : \"visualization.alscn\";\n        let scn = JSON.stringify(props.scene.toJSON());\n        saveAs(new Blob([scn], {\"type\":\"text/plain;charset=utf-8\"}), fname);\n    }\n\n    const fileChanged = function(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        let f = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = function() {\n            props.loadScene(JSON.parse(reader.result));\n            props.resetStacks();\n        }\n        reader.readAsText(f);\n    }\n\n    const undo = (e) => {\n        // console.log(\"undoing\", props.undoStack.length);\n        if (props.undoStack.length === 0) return;\n        addToStack(props.scene, props.datasets, props.redoStack, \"redo\");\n\n        let scn = props.undoStack.pop();\n        props.loadScene(JSON.parse(scn));\n        // console.log(\"finished undo\", props.undoStack.length);\n        store.dispatch(updateUndoStack({length: props.undoStack.length}));\n    }\n\n    const redo = (e) => {\n        if (props.redoStack.length === 0) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n\n        let scn = props.redoStack.pop();\n        props.loadScene(JSON.parse(scn));\n        store.dispatch(updateRedoStack({length: props.redoStack.length}));\n        //props.setRedoStack(props.redoStack.slice());\n    }\n\n    const openScene = (e) => {\n        inputFile.current.click();\n    }\n\n    const updatePreview = () => {\n        if (d3.select(\"#preview\").empty())\n            return;\n        scn.clear();\n        let selected = props.scene.getItem(props.selected[0]),\n            dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n            field = d3.select(\"#fieldSelect\").property(\"value\");\n        if (selected && cmd && field && dataset) {\n            let item = selected.duplicate();\n            if (item.fillColor === \"none\")\n                item.fillColor = \"#f5f5f5\";\n            item.strokeColor = \"#222\";\n            scn.addChild(item);\n            if (cmd === \"Repeat\") {\n                let coll = scn.repeat(item, dataset, {field: field, layout: getDefaultCollectionLayout(item, dataset.getUniqueFieldValues(field).length)});\n                let vb = [coll.bounds.left - 2, coll.bounds.top - 2, coll.bounds.width + 4, coll.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            } else if (cmd === \"Divide\") {\n                item.strokeWidth = Math.max(item.strokeWidth, 1);\n                let o = d3.select(\"#orientationSelect\").property(\"value\");\n                let coll = scn.divide(item, dataset, {field: field, orientation: o});\n                let vb = [coll.bounds.left - 2, coll.bounds.top - 2, coll.bounds.width + 4, coll.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            } else if (cmd === \"Densify\") {\n                item.strokeWidth = Math.max(item.strokeWidth, 1);\n                let o = d3.select(\"#orientationSelect\").property(\"value\");\n                let itm = scn.densify(item, dataset, {field: field, orientation: o});\n                scn.setProperties(itm, {\"vxShape\": \"rect\", \"vxWidth\": 4, \"vxHeight\": 4, \"vxStrokeColor\": \"#1592e6\", \"vxStrokeWidth\": 1});\n                let vb = [itm.bounds.left - 2, itm.bounds.top - 2, itm.bounds.width + 4, itm.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            }\n            renderer.clear();\n            renderer.render(scn);\n        }\n    }\n\n    const updateMsg = () => {\n        if (props.selected.length === 0 || !cmd) {\n            setJoinMsg(\"\");\n            return;\n        }\n        let selected = props.scene.getItem(props.selected[0]),\n            dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n            field = d3.select(\"#fieldSelect\").property(\"value\");\n        let vals = dataset.getUniqueFieldValues(field), num, msg = \"\";\n        if (selected.dataScope) {\n            num = selected.dataScope.getUniqueFieldValues(field).length;\n        } else {\n            num = vals.length;\n        }\n        if (cmd === \"Repeat\") {\n            msg = [num, selected.type + \"s\", \"will be created,\"].join(\" \");\n        } else if (cmd === \"Divide\") {\n            msg = [\"Divide the\", selected.type, \"into\", num, \"parts,\"].join(\" \");\n        } else if (cmd === \"Densify\") {\n            if (selected.type === \"rect\") {\n                let o = d3.select(\"#orientationSelect\").property(\"value\");\n                msg = [\"Densify the\", o === \"horizontal\" ? \"top/bottom side\" : \"left/right side\", \"of the rect with\", num, \"vertices,\"].join(\" \");\n            } else {\n                msg = [\"Densify the\", selected.type, \"with\", num, \"vertices, one for each\"].join(\" \");\n            }\n        }\n        d3.select(\"#msg\").text(msg);\n    }\n\n    useEffect(() => {\n        d3.selectAll(\".iconBtn\").classed(\"active\", false);\n        d3.select(\"#\"+props.activeTool+\"Btn\").classed(\"active\", true);\n    }, [props.activeTool]);\n\n    //manually trigger change event because repopulating options does not fire change event\n    useEffect(() => {\n        let fs = document.getElementById(\"fieldSelect\");\n        if (fs) {\n            // let evt = document.createEvent(\"Event\");\n            // evt.initEvent('change', true, false);\n            let evt = new CustomEvent('change', {bubbles: true, cancelable: false});\n            fs.dispatchEvent(evt);\n        }\n    }, [fields])\n\n    useEffect(() => {\n        if (props.selected.length === 0) {\n            d3.select(\"#repeatBtn\").property(\"disabled\", true);\n            d3.select(\"#divideBtn\").property(\"disabled\", true);\n            d3.select(\"#densifyBtn\").property(\"disabled\", true);\n            return;    \n        }\n        let item = props.scene.getItem(props.selected[0]);\n        d3.select(\"#repeatBtn\").property(\"disabled\", !item || !canRepeat(item) || props.datasets.length === 0);\n        d3.select(\"#divideBtn\").property(\"disabled\", !item || !canDivide(item) || props.datasets.length === 0);\n        d3.select(\"#densifyBtn\").property(\"disabled\", !item || !canDensify(item) || props.datasets.length === 0);\n    }, [props.selected, props.scene, props.datasets]);\n\n    useEffect(() => {\n        d3.select(\"#undoBtn\").property(\"disabled\", props.undoStackChanged.length <= 0);\n    }, [props.undoStackChanged]);\n\n    useEffect(() => {\n       d3.select(\"#redoBtn\").property(\"disabled\", props.redoStackChanged.length <= 0);\n    }, [props.redoStackChanged]);\n\n    useEffect(() => {\n        d3.select(\"#undoBtn\").property(\"disabled\", props.undoStack.length <= 0);\n        d3.select(\"#redoBtn\").property(\"disabled\", props.redoStack.length <= 0);\n    }, [props.undoStack, props.redoStack])\n\n    return (\n        <div>\n            <div className=\"myToolBar\">\n                <div className=\"myBtnGroup\">\n                    <button key=\"open\" className=\"myTextBtn\" id=\"openBtn\" onClick={openScene}>Open</button>\n                    <input type='file' id='scnFile' ref={inputFile} style={{display: 'none'}} accept=\".alscn\" onChange={fileChanged}/>\n                    <button key=\"save\" className=\"myTextBtn\" id=\"saveBtn\" onClick={saveScene}>Save</button>\n                    <button key=\"export\" className=\"myTextBtn\" id=\"exportBtn\" onClick={exportSVG}>Export</button>\n                </div>\n                <div className=\"myBtnGroup\">\n                    <button key=\"undo\" className=\"myTextBtn\" id=\"undoBtn\" onClick={undo}>Undo</button>\n                    <button key=\"redo\" className=\"myTextBtn\" id=\"redoBtn\" onClick={redo}>Redo</button>\n                </div>\n                <div className=\"myBtnGroup\">\n                    {tools.map(t => <button key={t} className=\"iconBtn\" title={t} id={t+\"Btn\"} tool={t} onClick={(e) => switchTool(e.target.getAttribute(\"tool\"))}></button>)}\n                </div>\n                <div className=\"myBtnGroup\">\n                    <button key=\"repeat\" className=\"myTextBtn\" id=\"repeatBtn\" onClick={repeatBtnClicked}>Repeat</button>\n                    <button key=\"divide\" className=\"myTextBtn\" id=\"divideBtn\" onClick={divideBtnClicked}>Divide</button>\n                    <button key=\"densify\" className=\"myTextBtn\" id=\"densifyBtn\" onClick={densifyBtnClicked}>Densify</button>\n                </div>\n            </div>\n            <Modal show={showRepeatModal} onShow={(e)=>{updatePreview();updateMsg();}}  backdrop=\"static\" keyboard={false}>\n                <Modal.Header>\n                <Modal.Title>{cmd}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <div style={{\"clear\": \"both\", \"marginBottom\": \"10px\"}}>\n                    <div id=\"msg\" style={{\"clear\": \"both\", \"marginBottom\": \"7px\", \"display\": \"block\"}}>{joinMsg}</div>\n                    one for each <select id=\"fieldSelect\" onChange={(e)=>{updatePreview();updateMsg();}} style={{\"marginLeft\": \"8px\"}}>\n                        {fields.map(o => <option value={o} key={o}>{o === \"atlas_rowId\" ? \"row of data\" : o}</option>)}\n                    </select>\n                    <div style={{\"marginTop\": \"12px\", \"clear\": \"left\"}}>from dataset \n                        <select id=\"datasetSelect\" onChange={(e) => {setFields(tbls[e.target.value].nonNumericFields);}} style={{\"marginLeft\": \"7px\"}}>\n                            {Object.values(tbls).map( o => <option value={o.id} key={o.id}>{o.name}</option>)}\n                        </select>\n                    </div>\n                    <div style={{\"marginTop\": \"15px\", \"display\": cmd === \"Repeat\" || (cmd === \"Densify\" && props.selected[0] && props.scene.getItem(props.selected[0]).type !== \"rect\") ? \"none\" : \"block\"}}>\n                        Orientation \n                        <select id=\"orientationSelect\" onChange={(e)=>{updatePreview()}} style={{\"marginLeft\": \"7px\"}}>\n                            {orientations.map(o => <option value={o} key={o}>{o}</option>)}\n                        </select>\n                    </div>\n                </div>\n                <svg id=\"preview\" style={{\"width\": \"470px\", \"height\": \"180px\", \"border\": \"solid 0px #ddd\", \"padding\": \"5px\"}}></svg>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={(e) => {setShowRepeatModal(false)}}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={doJoin}>OK</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n\n}\n\nexport default connect(mapStateToProps)(ToolBar);\n","import './css/Inspector.css';\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { properties } from './Defs';\nimport { addToStack, getDefaultLayout, getPropertyDef, getReusableScales, getScaleType } from './Util';\nimport { SketchPicker } from 'react-color';\nimport store from './store';\nimport { createNewItem, toggleAxisHandle, updateItem } from './canvasSlice';\nimport { Dropdown, Form, Stack } from 'react-bootstrap';\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    directSelected: state.canvas.directSelected,\n    itemUpdated: state.canvas.itemUpdated\n});\n\nconst headerClasses = {};\nfor (let g in properties ) {\n    let classes = [];\n    for (let prop in properties[g]) {\n        for (let c of properties[g][prop].class) {\n            if (classes.indexOf(c) < 0)\n                classes.push(c);\n        }\n    }\n    headerClasses[g] = classes;\n}\n\nconst updatePropertyControl = (propDef, item, scene) => {\n\n    d3.select(\"#\" + propDef.id).style(\"padding-left\", \"3px\");\n    d3.select(\"#\" + propDef.id + \"ScaleBtn\").style(\"display\", \"none\");\n\n    if (propDef.accessor) {\n        let val = item;\n\n        for (let a of propDef.accessor)\n            val = val[a];\n\n        if (propDef.type === \"numeric\")\n            val = val.toFixed(1);\n        \n        if (propDef.type === \"color\") {\n            d3.select(\"#\" + propDef.id).style(\"background\", val).property(\"value\", val);\n        } else if (propDef.type === \"boolean\") {\n            d3.select(\"#\" + propDef.id).property(\"checked\", val);    \n        } else {\n            d3.select(\"#\" + propDef.id).property(\"value\", val).property(\"disabled\", propDef.channel === \"area\");\n        }\n    }\n\n    //check if bound to data\n    if (propDef.channel) {\n        let enc;\n        if (propDef.channel === \"width\" || propDef.channel === \"height\" || propDef.channel === \"area\" || propDef.channel === \"radius\") {\n            enc = scene.sizeBound(item, propDef.channel);\n        } else if (propDef.channel === \"x\" || propDef.channel === \"y\") {\n            enc = scene.positionBound(item, propDef.channel);\n        } else {\n            enc = scene.getEncodingByItem(item, propDef.channel);\n        }\n        let encodable = item.type === \"segment\" ? item.parent.dataScope : item.type === \"vertex\" ? item.parent.dataScope || item.dataScope : item.dataScope;\n        if (enc) {\n            if (enc.channel === propDef.channel) {\n                d3.select(\"#\" + propDef.id).property(\"value\", enc.field).property(\"disabled\", true).style(\"pointer-events\", \"none\");\n                d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"inline-block\")\n                    .on(\"click\", function(e){\n                        scene.removeEncoding(enc);\n                        let o = {};\n                        o[enc.channel] = true;\n                        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n                    });\n                d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"none\");\n                if (propDef.type === \"numeric\" && [\"linear\", \"sqrt\", \"log\", \"power\"].indexOf(enc.scale.type) >= 0) {\n                    d3.select(\"#\" + propDef.id).style(\"padding-left\", \"23px\");\n                    d3.select(\"#\" + propDef.id + \"ScaleBtn\").style(\"display\", \"inline-block\");\n                }\n            } else {\n                let info = (enc.anyItem.type === \"vertex\" || enc.anyItem.type === \"segment\")? \"[see \" + enc.anyItem.type + \"]\" : \"[see \" + enc.channel + \"]\";\n                d3.select(\"#\" + propDef.id).property(\"value\", info).property(\"disabled\", true).style(\"pointer-events\", \"none\");\n                d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"none\");\n                d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"none\");\n            }\n        } else if (encodable) {\n            let disabled = (propDef.group === \"Segment Position\" || propDef.group === \"Vertex Position\");\n            d3.select(\"#\" + propDef.id).property(\"disabled\", disabled).style(\"pointer-events\", \"all\");\n            d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"none\");\n            d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"inline-block\");\n        } else {\n            let disabled = (propDef.group === \"Segment Position\" || propDef.group === \"Vertex Position\");\n            d3.select(\"#\" + propDef.id).property(\"disabled\", disabled).style(\"pointer-events\", \"all\");\n            d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"none\");\n            d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"none\");\n        }\n    }\n\n    if (propDef.id === \"layoutType\") {\n        const layout = item.layout ? item.layout.type : \"none\";\n        d3.select(\"#\" + propDef.id).property(\"value\", layout);\n        d3.selectAll(\".layout-prop\").style(\"display\", \"none\");\n        d3.selectAll(\".\" + layout + \"-prop\").style(\"display\", \"inline-block\");\n        let options = d3.select(\"#\"+propDef.id).selectAll(\"option\");\n        let ct = item.firstChild.type, na = [];\n        if (ct === \"rect\") {\n            na.push(\"packing\");\n            if (!scene.getEncodingByItem(item.firstChild, \"area\")) {\n                na.push(\"treemap\");\n            }\n        } else if (ct === \"circle\") {\n            na.push(\"treemap\");\n        } else if (ct === \"collection\") {\n            na = na.concat([\"packing\", \"treemap\"]);\n        } //TODO: handle other item types\n        \n        options.property(\"disabled\", function(d, i) {\n            const v = d3.select(this).property(\"value\");\n            return na.indexOf(v) >= 0;\n        })\n        \n        const params = propDef.options.filter(d => d.value === layout)[0].parameters;\n        for (const p of params) {\n            const paramDef = properties[\"Layout\"][p];\n            let v = item.layout[paramDef.accessor[0]];\n            if (paramDef.type === \"numeric-integer\")\n                v = v.toFixed(0);\n            else if (paramDef.type === \"numeric\")\n                v = v.toFixed(1);\n            //handle layout parameter controls\n            d3.select(\"#\" + paramDef.id).property(\"value\", v);\n            d3.select(\"#\" + paramDef.id + \"ScaleBtn\").style(\"display\", \"none\");\n        }\n    }\n\n    if (propDef.id === \"axisOrientation\") {\n        let options = d3.select(\"#\"+propDef.id).selectAll(\"option\");\n        if (item.channel === \"x\" || item.channel === \"width\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"top\" && v !== \"bottom\";\n            })\n        } else if (item.channel === \"y\" || item.channel === \"height\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"left\" && v !== \"right\";\n            })\n        } else {\n            options.property(\"disabled\", true);\n        }\n    }\n\n    if (propDef.id === \"baseline\") {\n        let options = d3.select(\"#\"+propDef.id).selectAll(\"option\");\n        let ori = item.orientation;\n        if (ori === \"horizontal\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"top\" && v!== \"middle\" && v !== \"bottom\";\n            })\n        } else if (ori === \"vertical\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"left\" && v!== \"center\" && v !== \"right\";\n            })\n        } else {\n            options.property(\"disabled\", true);\n        }\n    }\n\n    if (propDef.id === \"vxShape\") {\n        vertexShapeUpdated();\n    }\n}\n\nconst vertexShapeUpdated = () => {\n    let v = d3.select(\"#vxShape\").property(\"value\");\n    if (v === \"rect\") {\n        d3.select(\"#vxRadius_row\").style(\"display\", \"none\");\n        d3.select(\"#vxWidth_row\").style(\"display\", \"inline-block\");\n        d3.select(\"#vxHeight_row\").style(\"display\", \"inline-block\");\n    } else if (v === \"circle\") {\n        d3.select(\"#vxRadius_row\").style(\"display\", \"inline-block\");\n        d3.select(\"#vxWidth_row\").style(\"display\", \"none\");\n        d3.select(\"#vxHeight_row\").style(\"display\", \"none\");\n    }\n}\n\nfunction Inspector(props) {\n    // const dispatch = useDispatch();\n    const [currentColor, setCurrentColor] = useState(\"#fff\");\n    const [currentColorPropDef, setCurrentColorPropDef] = useState(null);\n    const [currentDataTable, setCurrentDataTable] = useState(null);\n    const [pastLayouts, setPastLayouts] = useState({});\n\n    useEffect(() => {\n        setPastLayouts({});\n    }, [props.scene]);\n\n    useEffect(() => {\n        if (currentColorPropDef === null) {\n            d3.select(\"#colorPicker\").style(\"display\", \"none\");\n            return;\n        }\n        let item = currentColorPropDef.id === \"canvasFillColor\" ? props.scene : \n                    props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : \n                        props.directSelected ? props.scene.getItem(props.directSelected) : null;\n        if (item === null) return;\n        let c = item[currentColorPropDef.accessor];\n        setCurrentColor(c ? c : \"#fff\");\n        d3.select(\"#colorPicker\").style(\"display\", \"block\");\n    }, [currentColorPropDef, props.scene, props.selected, props.directSelected]);\n\n    useEffect(() => {\n        if (currentColorPropDef === null) {\n            return;\n        }\n        d3.select(\"#\" + currentColorPropDef.id).style(\"background\", currentColor).property(\"value\", currentColor);\n        if (currentColorPropDef.id === \"canvasFillColor\") {\n            props.scene[currentColorPropDef.accessor] = currentColor;\n        } else if (props.selected.length > 0) {\n            let item = props.scene.getItem(props.selected[0]);\n            if (item.type === \"axis\" || item.type === \"gridlines\" || item.type === \"legend\") {\n                item[currentColorPropDef.accessor] = currentColor;\n            } else {\n                let prop = {};\n                prop[currentColorPropDef.accessor] = currentColor;\n                props.scene.setProperties(item, prop);\n            }\n        } else if (props.directSelected) {\n            let item = props.scene.getItem(props.directSelected);\n            let prop = {};\n            prop[currentColorPropDef.accessor] = currentColor;\n            props.scene.setProperties(item, prop);\n        }\n        props.renderer.render(props.scene);\n    }, [currentColor, currentColorPropDef, props.scene, props.selected, props.directSelected, props.renderer]);\n\n    useEffect(() => {\n        if (!props.itemUpdated.id || props.itemUpdated.source === \"inspector\") return;\n        const item = props.scene.getItem(props.itemUpdated.id);\n        if (item === undefined) return;\n        for (let prop in props.itemUpdated.properties) {\n            const def = getPropertyDef(item.type, prop);\n            if (def)\n                updatePropertyControl(def, item, props.scene);\n        }\n    }, [props.scene, props.itemUpdated])\n\n    useEffect(() => {\n        let type, selected = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : undefined;\n        if (!selected) {\n            type = \"canvas\";\n            selected = props.scene;\n            setCurrentDataTable(null);\n        } else {\n            //selected = props.scene.getItem(props.selected[0]);\n            type = selected.type;\n            let item = props.scene.getItem(props.selected[0]);\n            if (item.dataScope)\n                setCurrentDataTable(item.dataScope.dataTable);\n            else\n                setCurrentDataTable(null);\n        }\n        let panel = d3.select(\".propertyPanel\");\n        panel.selectAll(\".propertyGroupHeader\").style(\"display\", \"none\");\n        panel.selectAll(\".propertyRow\").style(\"display\", \"none\");\n        //if (props.selected.length === 1) {\n        if (selected) {\n            panel.selectAll(\".\" + type + \"-prop\").style(\"display\", \"inline-block\");\n            for (let g in properties) {\n                for (let prop in properties[g]) {\n                    if (properties[g][prop].class.indexOf(type + \"-prop\") >= 0)\n                        updatePropertyControl(properties[g][prop], selected, props.scene);\n                }\n            }\n        }\n    }, [props.scene, props.selected]);\n\n    useEffect(() => {\n        if (!props.directSelected) {\n            setCurrentDataTable(null);\n        } else {\n            let item = props.scene.getItem(props.directSelected);\n            if (item.dataScope)\n                setCurrentDataTable(item.dataScope.dataTable);\n            else if (item.parent.dataScope)\n                setCurrentDataTable(item.parent.dataScope.dataTable);\n            else\n                setCurrentDataTable(null);\n        }\n        let panel = d3.select(\".propertyPanel\");\n        panel.selectAll(\".propertyGroupHeader\").style(\"display\", \"none\");\n        panel.selectAll(\".propertyRow\").style(\"display\", \"none\");\n        if (props.directSelected) {\n            let ds = props.scene.getItem(props.directSelected), type = ds.type;\n            panel.selectAll(\".\" + type + \"-prop\").style(\"display\", \"inline-block\");\n            for (let g in properties) {\n                for (let prop in properties[g]) {\n                    if (properties[g][prop].class.indexOf(type + \"-prop\") >= 0)\n                        updatePropertyControl(properties[g][prop], ds, props.scene);\n                }\n            }\n        }\n    }, [props.scene, props.directSelected]);\n\n    const setCategoricalValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        let val = ctrl.property(\"value\");\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        if (item === undefined) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        const o = {};\n        //TODO: handle layout properties in o properly for dispatch\n        switch (attr.id) {\n            case \"axisOrientation\":\n                item[attr.accessor[0]] = val;\n                o[attr.accessor[0]] = val;\n                break;\n            case \"orientation\":\n            case \"horzGravity\":\n            case \"vertGravity\":\n                o[attr.accessor[0]] = val;\n                props.scene.setProperties(item.layout, o);\n                props.scene.reCreateRelatedAxes(item);\n                break;\n            case \"layoutType\":\n                o[\"layout\"] = val;\n                let l;\n                if (!(item.id in pastLayouts))\n                    pastLayouts[item.id] = [];\n                pastLayouts[item.id].unshift(item.layout);\n                if (pastLayouts[item.id].length > 0) {\n                    l = pastLayouts[item.id].find(d => d && d.type === val);\n                }\n                if (!l)\n                    l = getDefaultLayout(val);\n                props.scene.setProperties(item, {\"layout\": l});\n                //props.scene.reCreateRelatedAxes(item);\n                updatePropertyControl(attr, item, props.scene);\n                break;\n            case \"vxShape\":\n                o[attr.accessor[0]] = val;\n                props.scene.setProperties(item, o);\n                vertexShapeUpdated();\n                break;\n            default:\n                o[attr.accessor[0]] = val;\n                props.scene.setProperties(item, o);\n                break;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const setBooleanValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let val = ctrl.property(\"checked\");\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        item[attr.accessor[0]] = val;\n        const o = {};\n        o[attr.accessor[0]] = val;\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const setStringValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        let val = ctrl.property(\"value\");\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        addToStack(props.scene, props.datasets, props.undoStack);\n        const o = {};\n        switch (attr.id) {\n            case \"labelFormat\":\n                o[attr.accessor[0]] = val;\n                item[attr.accessor[0]] = val;\n                break;\n            default:\n                break;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const setNumericValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        let val = parseFloat(ctrl.property(\"value\"));\n        if (isNaN(val)) return;\n        if (attr.id !== \"rowGap\" && attr.id !== \"colGap\" && val < 0) return;\n        if (attr.type === \"numeric-integer\") {\n            val = parseInt(val);\n        }\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        addToStack(props.scene, props.datasets, props.undoStack);\n        const o = {};\n        switch (attr.id) {\n            case \"strokeWidth\":\n            case \"width\":\n            case \"height\":\n            case \"area\":\n            case \"fontSize\":\n            case \"vxWidth\":\n            case \"vxHeight\":\n            case \"vxRadius\":\n            case \"vxOpacity\":\n            case \"vxStrokeWidth\":\n            case \"opacity\":\n            case \"radius\":\n            case \"innerRadius\":\n            case \"outerRadius\":\n                o[attr.channel] = val;\n                props.scene.setProperties(item, o);\n                break;\n            case \"rowGap\":\n            case \"colGap\":\n            case \"numRows\":\n            case \"numCols\":\n                if (item.layout) {\n                    o[attr.id] = val;\n                    props.scene.setProperties(item.layout, o);\n                }\n                break;\n            case \"tickOffset\":\n            case \"labelOffset\":\n            case \"tickSize\":\n            case \"pathPos\":\n            case \"gridlineStrokeWidth\":\n                o[attr.accessor[0]] = val;\n                item[attr.accessor[0]] = val;\n                break;\n            case \"x\":\n            case \"collectionX\":\n            case \"glyphX\":\n                props.scene.translate(item, val - item.x, 0);\n                break;\n            case \"y\":\n            case \"collectionY\":\n            case \"glyphY\":\n                props.scene.translate(item, 0, val - item.y);\n                break;\n            default:\n                break;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const encode = (f, c, scale) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        if ((c === \"x\" || c === \"y\") && item.type !== \"area\" && item.parent.type === \"collection\" && item.parent.layout) {\n            props.scene.setProperties(item.parent, {\"layout\": undefined});\n        }\n        props.scene.encode(item, {field: f, channel: c, scale: scale});\n        let guide;\n        if (!scale) {\n            if (c.indexOf(\"Color\") > 0) {\n                guide = props.scene.legend(c, f);\n            } else if (c === \"width\" || c === \"height\" || c === \"x\" || c === \"y\") {\n                guide = props.scene.axis(c, f, {item: item});\n            }\n        } else {\n            props.scene.reCreateRelatedAxes(item);\n        }\n        \n        const o = {};\n        o[c] = \"encoded\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n        if (guide)\n            store.dispatch(createNewItem(guide.id));\n    }\n\n    const highlightAxis = (scale, show) => {\n        for (let c of props.scene.children) {\n            if (c.type === \"axis\" && c.encoding) {\n                if (c.encoding.scale === scale) {\n                    store.dispatch(toggleAxisHandle({axis: c.id, visible: show}));\n                    return;\n                }\n            }\n        }\n    }\n\n    const createNumericControl = (attr) => {\n        return <input id={attr.id} onChange={(e) => setNumericValue(attr)}></input>;\n        //return <div><button className=\"scaleBtn\" id={attr.id+\"ScaleBtn\"}></button><input id={attr.id} onChange={(e) => setNumericValue(attr)}></input></div>\n    }\n\n    const createStringControl = (attr) => {\n        return <input type=\"text\" id={attr.id} onInput={(e) => setStringValue(attr)}></input>\n    }\n\n    const createColorControl = (attr) => {\n        return <input id={attr.id} onClick={(e) => {setCurrentColorPropDef(attr);e.stopPropagation();}}></input>\n    }\n\n    const createCategoryControl = (attr) => {\n        return <select id={attr.id} onChange={(e) => setCategoricalValue(attr)}>{attr.options.map( o => <option value={o.value} key={o.display}>{o.display}</option>)}</select>\n    }\n\n    const createRangeControl = (attr) => {\n        return (\n            <div className=\"propertySliderDiv\">\n                <input type=\"range\" min={attr.range[0]} max={attr.range[1]} step={(attr.range[1] - attr.range[0])/10} className=\"propertySlider\" id={attr.id} onChange={(e) => setNumericValue(attr)}></input>\n                <div className=\"propertySliderMarks\"> \n                    <div style={{margin: 0, float: \"left\"}}>{attr.range[0]}</div>\n                    <div style={{margin: 0, float: \"right\"}}>{attr.range[1]}</div>\n                </div>\n            </div>\n        )\n    }\n\n    const createBooleanControl = (propDef) => {\n        return (\n            <input type=\"checkbox\" id={propDef.id} onChange={(e) => setBooleanValue(propDef)}></input>\n        )\n    }\n\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n        <button className='dropdown-item dropdown-toggle encodeFields' href=\"\" ref={ref}\n            // onMouseEnter={(e) => onClick(e)}\n            onClick={(e) => {\n                e.preventDefault();\n                onClick(e);\n            }}\n        >\n          {\"  \" + children}\n        </button>\n    ));\n\n    const changeScaleType = (channel, type) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let enc = props.scene.getEncodingByItem(item, channel);\n        if (!enc) return;\n        enc.scale.type = type;\n        props.scene.reCreateRelatedAxes(item);\n        \n        const o = {};\n        o[channel] = \"scaleType\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n    }\n\n    const createPropertyControl = (prop, propDef) => {\n        let classes = \"propertyRow \" + propDef.class.join(\" \");\n        return (\n        <tr className={classes} key={prop} id={propDef.id+\"_row\"}>\n            <td className= \"propertyName\">{prop}</td>\n            <td className=\"propertyInput\">\n            <Dropdown id={propDef.id+\"ScaleBtn\"} className=\"scaleBtnDiv\">\n                <Dropdown.Toggle className=\"scaleBtn\" variant=\"link\" bsPrefix=\"p-0\">\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"scaleMenu\">\n                    <div>\n                    <Form>\n                        <Form.Group style={{\"margin\": \"0 10px 0 10px\"}}>\n                            <Stack direction=\"horizontal\" gap={1}>\n                                <Form.Label style={{\"width\": \"125px\", \"marginTop\": \"7px\", \"fontWeight\": \"bold\"}}>Scale type</Form.Label>\n                                <Form.Select defaultValue={getScaleType(propDef.channel, props.selected, props.directSelected, props.scene)} onChange={(e) => changeScaleType(propDef.channel, e.target.value)} size=\"sm\">\n                                    <option value=\"linear\">Linear</option>\n                                    <option value=\"log\">Log</option>\n                                    <option value=\"sqrt\">Square Root</option>\n                                    <option value=\"power\">Power (2)</option>\n                                </Form.Select>\n                            </Stack>\n                        </Form.Group>\n                    </Form>\n                    </div>\n                </Dropdown.Menu>\n            </Dropdown>\n            {(function(){\n                switch(propDef.type) {\n                    case \"numeric\":\n                    case \"numeric-integer\":\n                        return createNumericControl(propDef);\n                    case \"numeric-range\":\n                        return createRangeControl(propDef);\n                    case \"color\":\n                        return createColorControl(propDef);\n                    case \"categorical\":\n                        return createCategoryControl(propDef);\n                    case \"boolean\":\n                        return createBooleanControl(propDef);\n                    case \"string\":\n                        return createStringControl(propDef);\n                    default:\n                        return createNumericControl(propDef);\n                }\n            })()}\n            </td>\n            {propDef.encodable ? (<td>\n                <button className=\"unencodeBtn\" id={propDef.id+\"UnencodeBtn\"}></button>\n                <Dropdown id={propDef.id+\"EncodeBtn\"}>\n                    <Dropdown.Toggle className=\"encodeBtn\" variant=\"link\" bsPrefix=\"p-0\">\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        {currentDataTable === null ? []: \n                            currentDataTable.getEncodableFields(propDef.channel).map((f, i) => {\n                                let scales = getReusableScales(currentDataTable.getFieldType(f), propDef.channel, props.scene);\n                                if (Object.keys(scales).length === 0) {\n                                    return (\n                                        <Dropdown.Item className=\"encodeFields\" key={f}\n                                            onClick={(e) => {encode(f, propDef.channel)}}>\n                                            {f}\n                                        </Dropdown.Item> \n                                    )\n                                } else {\n                                    let options = [];\n                                    for (let k in scales) {\n                                        options.push({fields: scales[k].map(d => d.field).join(\"/\"), scale: scales[k][0].scale})\n                                    }\n                                    return (\n                                        // <Dropdown.Item onMouseEnter={(e) => {console.log(f, propDef.channel)}} className=\"encodeFields\" key={f} eventKey={f}>{f}</Dropdown.Item>\n                                        <Dropdown id={propDef.id+\"_scale_\"+f} key={propDef.id+\"_scale_\"+f} drop='start'>\n                                            <Dropdown.Toggle as={CustomToggle} bsPrefix=\"p-0\">\n                                                {f}\n                                            </Dropdown.Toggle>\n                                            <Dropdown.Menu>\n                                                {[null].concat(options).map((enc, i) => {\n                                                    if (enc === null) {\n                                                        return (\n                                                        <Dropdown.Item className=\"encodeFields\" key={\"new\"+i}\n                                                            onClick={(e) => {encode(f, propDef.channel)}}\n                                                        >\n                                                        Create new scale\n                                                        </Dropdown.Item>);\n                                                    } else {\n                                                        return (\n                                                        <Dropdown.Item className=\"encodeFields\" key={enc.scale.id+\"_\"+i}\n                                                            onClick={(e) => {encode(f, propDef.channel, enc.scale)}}\n                                                            onMouseEnter={(e) => {highlightAxis(enc.scale, true)}}\n                                                            onMouseLeave={(e) => {highlightAxis(enc.scale, false)}}\n                                                        >\n                                                        {\"Merge with \" + enc.fields}\n                                                        </Dropdown.Item>);\n                                                    }\n                                                })}\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                    )\n                                }\n                            }\n                            )}\n                    </Dropdown.Menu>\n                </Dropdown>\n                </td>)\n                            : <td></td>\n            }\n        </tr>)\n    }\n\n    return (\n        <div>\n            {/* <div className=\"rightPanel\" onClick={(e) => setCurrentColorPropDef(null)}> */}\n                <div className=\"propertyPanel\" onClick={(e) => setCurrentColorPropDef(null)} style={{\"overflow\": \"visible\"}}>\n                    {Object.keys(properties).map(g => \n                    <div key={g}>\n                        <span className={headerClasses[g].concat([\"propertyGroupHeader\"]).join(\" \")}>{g}</span>\n                        <table>\n                            <tbody>\n                            {Object.keys(properties[g]).map(p => createPropertyControl(p, properties[g][p]))}\n                            </tbody>\n                        </table>\n                    </div>)}\n                </div>\n            {/* </div> */}\n            <div id=\"colorPicker\">\n                <SketchPicker disableAlpha={true} color={currentColor} onChangeComplete={e => setCurrentColor(e.hex)}/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default connect(mapStateToProps)(Inspector);","import './css/LayerView.css';\nimport { connect } from \"react-redux\";\nimport { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport store from \"./store\";\nimport { directSelect, select } from \"./canvasSlice\";\nimport { activateTool } from './toolSlice';\n\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    dataItemJoined: state.canvas.dataItemJoined,\n    newItemCreated: state.canvas.newItemCreated,\n    itemsDeleted: state.canvas.itemsDeleted\n});\n\nconst left = 20, offset = 25, lineHt = 25, top = 20;\n\nconst enumerateLayers = (item, list, level) => {\n    list.push({item: item, level: level});\n    if (item.children) {\n        switch (item.type) {\n            case \"collection\":\n                enumerateLayers(item.firstChild, list, level+1);\n                break;\n            case \"axis\":\n            case \"legend\":\n            case \"gridlines\":\n                break;\n            default:\n                for (let i = item.children.length - 1; i >= 0; i--) {\n                    enumerateLayers(item.children[i], list, level+1);\n                }\n                break;\n        }\n    }\n};\n\nconst getLayerLabel = (item) => {\n    if (item.type === \"axis\") {\n        return item.channel.substring(0, 1).toUpperCase() + item.channel.substring(1) + \" axis: \" + item.field;  \n    }\n    let l = item.type.substring(0, 1).toUpperCase() + item.type.substring(1);\n    if (item.dataScope) {\n        let peers = item.getScene().getPeers(item);\n        if (peers.length > 1)\n            l += \" (\" + peers.length + \")\";\n        let fields = item.dataScope.fields;\n        if (item.parent && item.parent.type === \"collection\" && item.parent.dataScope) {\n            fields = fields.filter(d => item.parent.dataScope.fields.indexOf(d) < 0);\n        }\n        let d = fields.join(\", \");\n        if (d === \"atlas_rowId\")\n            d = \"row ID\";\n        if (d !== \"\")\n            l += \": \" + d;\n    }\n    return l;\n};\n\nconst getLayerId = (item) => {\n    switch (item.type) {\n        case \"axis\":\n        case \"legend\":\n            return item.id;\n        default:\n            if (item.classId)\n                return item.classId;\n            else\n                return item.id;\n    }\n}\n\nfunction LayerView(props) {\n\n    useEffect(() => {\n        const layers = [];\n        enumerateLayers(props.scene, layers, -1);\n        layers.forEach((d, i) => d.index = i);\n        const lv = d3.select(\".layerView\");\n        lv.selectAll('*').remove();\n        lv.append(\"text\").text(\"Layers\").style(\"font-weight\", \"bold\").attr(\"class\", \"layerText\")\n            .attr(\"x\", 20).attr(\"y\", 16);\n        let g = lv.selectAll(\".layer\").data(layers.slice(1)).enter().append(\"g\").attr(\"class\", \"layer\");\n        \n        g.append(\"rect\").attr(\"class\", \"layerRow\").attr(\"id\", d => getLayerId(d.item))\n            .attr(\"x\", 0).attr(\"y\", d => top + lineHt * d.index - 3)\n            .attr(\"width\", 260).attr(\"height\", lineHt)\n            .on(\"click\", (e, d) => {\n                store.dispatch(directSelect(null));\n                store.dispatch(activateTool(\"Select\"));\n                store.dispatch(select([d.item.id]));\n            });\n        g.append(\"image\").attr(\"class\", \"layerIcon\")\n            .attr(\"x\", d => left + offset * d.level).attr(\"y\", d => top + lineHt * d.index + 2)\n            .attr(\"href\", d => \"/v2/icons/\"+d.item.type + \".png\");\n        g.append(\"text\").attr(\"class\", \"layerText\")\n            .attr(\"x\", d => left + offset * d.level + 22).attr(\"y\", d => top + lineHt * d.index + 1)\n            .text(d => getLayerLabel(d.item));\n    }, [props.scene, props.dataItemJoined, props.newItemCreated, props.itemsDeleted]);\n\n    useEffect(() => {\n        d3.selectAll(\".layerRow\").classed(\"layerSelected\", false);\n        if (props.selected.length > 0) {\n            let itm = props.scene.getItem(props.selected[0]);\n            if (!itm) return;\n            d3.select(\".layerView\").select(\"#\"+getLayerId(itm)).classed(\"layerSelected\", true);\n        }\n    }, [props.scene, props.selected]);\n\n    return (\n        <svg className=\"layerView\">\n        </svg>\n    );\n}\n\nexport default connect(mapStateToProps)(LayerView);","import { connect } from \"react-redux\";\nimport './css/DataPanel.css';\nimport {useState, useEffect, useMemo, useRef } from 'react';\nimport { useFilters, useTable } from \"react-table\";\nimport { csvFromString } from \"atlas-vis\";\nimport { addToStack } from \"./Util\";\n\n\nfunction DataPanel (props) {\n\n    const [activeTbl, setActiveTbl] = useState(null);\n    const [dataScopeInfo, setDataScopeInfo] = useState(null);\n    const inputFile = useRef(null);\n\n    const cols = useMemo(() => {\n        if (activeTbl === null) return [{Header: \" \", accessor: \" \"}];\n        else {\n            let fields = activeTbl.fields;\n            let result = [];\n            for (let f of fields) {\n                //if (f === \"atlas_rowId\") continue;\n                result.push({\n                    Header: f === \"atlas_rowId\" ? \"Row ID\" : f,\n                    accessor: f,\n                    filter: \"equals\",\n                    Cell: ({value}) => activeTbl.getRawValue(f, value)\n                })\n            }\n            return result;\n        }\n    }, [activeTbl])\n\n    const data = useMemo(() => {\n        if (activeTbl === null) return [{col: 1}];\n        else {\n            return activeTbl.data;\n        }\n    }, [activeTbl])\n\n    const initState = { hiddenColumns: ['atlas_rowId'] };\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        setFilter,\n        setAllFilters,\n    } = useTable({columns: cols, data: data, initialState: initState}, useFilters);\n\n    const importData = function() {\n        inputFile.current.click();\n    }\n\n    const fileChanged = function(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        let f = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = function() {\n            addToStack(props.scene, props.datasets, props.undoStack);\n            let tbl = csvFromString(reader.result, f.name);\n            let ds = props.datasets.slice();\n            ds.push(tbl);\n            props.loadDataset(ds);\n            setActiveTbl(tbl);\n            // console.log(\"data imported\", props.selected);\n        }\n        if (f)\n            reader.readAsText(f);\n    }\n\n    const getHeaderIcon = function(field) {\n        if (!activeTbl)\n            return <span></span>;\n        switch (activeTbl.getFieldType(field)) {\n            case \"string\":\n                return <img src=\"v2/icons/string.png\" alt=\"(string) \" width=\"20px\" height=\"10px\" style={{\"margin\":\"0 4px 2px 0\"}}></img>;\n            case \"date\":\n                return <img src=\"v2/icons/date.png\" alt=\"(date) \" width=\"15px\" style={{\"margin\":\"0 3px 2px 0\"}}></img>;\n            default:\n                return <img src=\"v2/icons/number.png\" alt=\"(number) \" width=\"12px\" height=\"12px\" style={{\"margin\":\"0 2px 3px 0\"}}></img>;\n        }\n    }\n\n    useEffect(() => {\n        if (!props.datasets || props.datasets.length === 0) {\n            setActiveTbl(null);\n            setAllFilters([]);\n            setDataScopeInfo(null);\n            return;\n        }\n        if (props.selected.length === 0 && !props.directSelected) {\n            setActiveTbl(props.datasets[0]);\n            setAllFilters([]);\n            setDataScopeInfo(null);\n        } else if (props.selected.length > 0) {\n            const item = props.scene.getItem(props.selected[0]);\n            if (!item) {\n                setActiveTbl(props.datasets[0]);\n                setAllFilters([]);\n                setDataScopeInfo(null);\n            }\n            if (item.dataScope) {\n                setActiveTbl(item.dataScope.dataTable);\n                const filters = item.dataScope.filters;\n                for (let f in filters) {\n                    setFilter(f, filters[f]);\n                }\n                setDataScopeInfo(\"Selected \" + item.type + \" has \" + item.dataScope.numTuples +  \" attached data rows\");\n            } else {\n                setActiveTbl(null);\n                setAllFilters([]);\n                setDataScopeInfo(\"Selected \" + item.type + \" has no attached data\");\n            } \n        } else if (props.directSelected) {\n            const itm = props.scene.getItem(props.directSelected);\n            if (!itm) {\n                setActiveTbl(props.datasets[0]);\n                setAllFilters([]);\n                setDataScopeInfo(null);\n            }\n            if (itm.dataScope) {\n                setActiveTbl(itm.dataScope.dataTable);\n                const filters = itm.dataScope.filters;\n                for (let f in filters) {\n                    setFilter(f, filters[f]);\n                }\n                setDataScopeInfo(\"Selected \" + itm.type + \" has \" + itm.dataScope.numTuples +  \" attached data rows\");\n            } else {\n                setActiveTbl(null);\n                setAllFilters([]);\n                setDataScopeInfo(\"Selected \" + itm.type + \" has no attached data\");\n            } \n\n        }\n    }, [props.selected, props.directSelected, props.scene, props.datasets, setAllFilters, setFilter]);\n\n    return (\n        <div id=\"dataPanel\">\n            <div id=\"datasetInfo\">\n                {props.datasets.map(d => \n                <div className={activeTbl && activeTbl.id === d.id ? \"activeTableTab\" : \"tableTab\"} key={d.id} onClick={(e) => setActiveTbl(d)}>\n                    {d.name + \" (\" + d.getRowCount() + \" rows)\"}\n                </div>)}\n                <button id=\"csvBtn\" onClick={importData}>Import Data</button>\n                <input type='file' id='file' ref={inputFile} style={{display: 'none'}} accept=\".csv\" onChange={fileChanged}/>\n            </div>\n            <div id=\"dataScopeInfo\" style={{display: dataScopeInfo ? \"block\" : \"none\"}}>\n                {dataScopeInfo ? dataScopeInfo : \"\"}\n            </div>\n            <div id=\"tableDiv\">\n                <table id=\"dataTable\" {...getTableProps()}>\n                        <thead>\n                            {// Loop over the header rows\n                                headerGroups.map(headerGroup => (\n                                    // Apply the header row props\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\n                                        {// Loop over the headers in each row\n                                            headerGroup.headers.map(column => (\n                                                // Apply the header cell props\n                                                <th {...column.getHeaderProps()}>\n                                                    {getHeaderIcon(column.Header)}\n                                                    {// Render the header\n                                                        column.render('Header')\n                                                    }\n                                                </th>\n                                            ))}\n                                    </tr>\n                                ))}\n                        </thead>\n                        {/* Apply the table body props */}\n                        <tbody {...getTableBodyProps()}>\n                            {// Loop over the table rows\n                                rows.map(row => {\n                                    // Prepare the row for display\n                                    prepareRow(row)\n                                    return (\n                                        // Apply the row props\n                                        <tr {...row.getRowProps()}>\n                                            {// Loop over the rows cells\n                                                row.cells.map(cell => {\n                                                    // Apply the cell props\n                                                    return (\n                                                        <td {...cell.getCellProps()}>\n                                                            {// Render the cell contents\n                                                                cell.render('Cell')}\n                                                        </td>\n                                                    )\n                                                })}\n                                        </tr>\n                                    )\n                                })}\n                        </tbody>\n                    </table> \n            </div>\n            \n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    directSelected: state.canvas.directSelected\n});\n\nexport default connect(mapStateToProps)(DataPanel);","import { useEffect, useState } from 'react';\nimport { SketchPicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport './css/InteractiveLegend.css';\n\nconst mapStateToProps = state => ({\n    legendClicked: state.canvas.legendClicked,\n});\n\nfunction InteractiveLegend(props) {\n\n    const [legend, setLegend] = useState(null);\n    const [color, setColor] = useState(\"#fff\");\n    const [value, setValue] = useState(null);\n    \n    useEffect(() => {\n        const l = props.legendClicked.legend, v = props.legendClicked.value;\n        if (l && v) {\n            d3.select(\"#legendColorPicker\").style(\"visibility\", \"visible\");\n            setLegend(props.scene.getItem(l));\n            setValue(v);\n            setColor(props.scene.getItem(l).encoding.scale.map(v));\n        } else {\n            d3.select(\"#legendColorPicker\").style(\"visibility\", \"hidden\");\n        }\n    }, [props.legendClicked, props.scene])\n    \n    const changeCompleted = (c, e) => {\n        setColor(c.hex);\n        const domain = legend.encoding.scale.domain, range = [];\n        for (let d of domain) {\n            if (d === value)\n                range.push(c.hex);\n            else\n                range.push(legend.encoding.scale.map(d));\n        }\n        legend.encoding.scale._setRange(range);\n        props.renderer.render(props.scene);\n    }\n\n    return (\n        <div id=\"legendColorPicker\">\n            <SketchPicker disableAlpha={true} color={color} onChangeComplete={changeCompleted}/>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps)(InteractiveLegend);","import Canvas from './Canvas';\nimport { useEffect, useState } from 'react';\nimport * as atlas from \"atlas-vis\";\nimport EventLayer from './EventLayer';\nimport ToolBar from './ToolBar';\nimport Inspector from './Inspector';\nimport LayerView from './LayerView';\nimport DataPanel from './DataPanel';\nimport './css/App.css';\nimport store from \"./store\";\nimport { directSelect, select, toggleAxisHandle } from \"./canvasSlice\";\nimport InteractiveLegend from './InteractiveLegend';\n\nfunction Authoring(props) {\n\n  const [renderer] = useState(atlas.renderer(\"svg\", \"canvas\"));\n  const [scene, setScene] = useState(atlas.scene());\n  const [spec, setSpec] = useState(\"\");\n  const [datasets, setDatasets] = useState([]);\n  const [undoStack, setUndoStack] = useState([]); \n  const [redoStack, setRedoStack] = useState([]); \n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#ddd\";\n    document.body.style.overflow = \"hidden\";\n  }, [])\n\n  useEffect(() => {\n    if (spec) {\n      fetch(\"v2/scenes/\" + spec + \".alscn\")\n      .then(response => response.json())\n      .then(result => {\n        loadScene(result);\n      });\n    }\n  }, [spec]);\n\n  useEffect(() => {\n    store.dispatch(toggleAxisHandle({visible: false}));\n    store.dispatch(select([]));\n    store.dispatch(directSelect(null));\n    renderer.clear();\n    renderer.render(scene);\n  }, [renderer, scene]);\n\n  const loadScene = (json) => {\n    let loader = atlas.sceneLoader();\n    let scn = loader.load(json);\n    setScene(scn);\n    setDatasets(Object.values(loader.tables));\n    //setDatasets(Object.values(scn.getDataTables()));\n  }\n\n  const demos = [\n    \"Rect\",\n    \"BarChartHorz\",\n    \"BarChartVert\",\n    \"BoxPlot\",\n    \"BulletChart\",\n    \"DivergingBarChart\",\n    \"GanttChart\",\n    \"GroupedBarChart\",\n    \"HeatMap\",\n    \"Histogram\",\n    \"MosaicPlot\",\n    \"StackedBarChart\",\n    \"TowerChart\",\n    \"Treemap\",\n    \"WaffleChart\",\n    \"WaterfallChart\",\n    \"BubblePlot\",\n    \"CirclePacking\",\n    \"DotPlot\",\n    \"DoughnutChart\",\n    \"PieChart\",\n    \"RadialBarChart\",\n    \"Scatterplot\",\n    \"Sunburst\",\n    \"BumpChart\",\n    \"ConnectedScatterPlot\",\n    \"DumbbellChart\",\n    \"LineGraph\",\n    \"LineGraph2\",\n    \"LollipopChart\",\n    \"MultiLineGraph\",\n    \"ParallelCoordinates\",\n    \"RangeChart\",\n    \"SlopeGraph\",\n    \"StringlineChart\",\n    \"AreaChart\",\n    \"DensityPlot\",\n    \"RadarChart\",\n    \"RidgelinePlot\",\n    \"RoseChart\",\n    \"StackedAreaChart\",\n    \"StellarChart\",\n    \"StreamGraph\",\n    \"ViolinPlot\",\n    \"Isotype\",\n    \"GridAreaChart\",\n    \"MultipleBarCharts\",\n    \"MultipleBoxPlots\",\n    \"MultiplePieCharts\",\n    \"ScatterplotMatrix\",\n    \"Sparklines\",\n    \"GridStackedAreaChart\",\n    \"MultipleViolinPlots\"\n  ]\n\n  // const loadDataset = (d) => {\n  //   setDatasets(datasets.concat([d]));\n  // }\n\n  const resetStacks = () => {\n    setUndoStack([]);\n    setRedoStack([]);\n  }\n\n  return (\n    <div style={{overflow: \"hidden\"}}>\n      <Canvas scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} redoStack={redoStack} type=\"svg\"></Canvas>\n      <EventLayer scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} redoStack={redoStack}></EventLayer>\n      <div id=\"specList\" style={{display: 'none'}}>\n        <ul>\n          {demos.map(d => <li key={d} onClick={(e) => setSpec(d)}>{d}</li>)}\n        </ul>\n      </div>\n      <DataPanel scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} loadDataset={setDatasets}></DataPanel>\n      <LayerView scene={scene} renderer={renderer}></LayerView>\n      <ToolBar scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} redoStack={redoStack} resetStacks={resetStacks} loadScene={loadScene}></ToolBar>\n      <Inspector scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack}></Inspector>\n      <InteractiveLegend scene={scene} renderer={renderer}></InteractiveLegend>\n      <input type=\"text\" id=\"textElement\" style={{\"visibility\": 'hidden', \"position\": \"absolute\"}}></input>\n    </div>\n  )\n}\n\nexport default Authoring;\n","import Canvas from './Canvas';\nimport { useEffect, useState } from 'react';\nimport * as atlas from \"atlas-vis\";\nimport EventLayer from './EventLayer';\nimport ToolBar from './ToolBar';\nimport Inspector from './Inspector';\nimport LayerView from './LayerView';\nimport DataPanel from './DataPanel';\nimport './css/App.css';\nimport store from \"./store\";\nimport { select } from \"./canvasSlice\";\n\nfunction Templating(props) {\n    const renderer = atlas.renderer(\"svg\", \"canvas\");\n    const [scene, setScene] = useState(atlas.scene());\n    const [spec, setSpec] = useState('BarChartHorz');\n  \n    useEffect(() => {\n      document.body.style.backgroundColor = \"#ddd\";\n      document.body.style.overflow = \"hidden\";\n    }, [])\n  \n    useEffect(() => {\n      loadScene(\"specs/\" + spec + \".json\");\n    }, [spec]);\n  \n    useEffect(() => {\n      renderer.clear();\n      renderer.render(scene);\n    }, [renderer, scene]);\n  \n    const loadScene = async (url) => {\n      const spec = await loadJSON(url);\n      let exe = atlas.specExecutor();\n      let scene = await exe.run(spec);\n      store.dispatch(select([]));\n      setScene(scene);\n    }\n  \n    const demos = [\n      \"BarChartHorz\",\n      \"BarChartVert\",\n      \"BoxPlot\",\n      \"BulletChart\",\n      \"DivergingBarChart\",\n      \"GanttChart\",\n      \"GroupedBarChart\",\n      \"HeatMap\",\n      \"Histogram\",\n      \"MosaicPlot\",\n      \"StackedBarChart\",\n      \"TowerChart\",\n      \"Treemap\",\n      \"WaffleChart\",\n      \"WaterfallChart\"\n    ]\n  \n    return (\n      <div style={{overflow: \"hidden\"}}>\n        <Canvas scene={scene} renderer={renderer} type=\"svg\"></Canvas>\n        <EventLayer scene={scene} renderer={renderer}></EventLayer>\n        <div id=\"specList\">\n          <ul>\n            {demos.map(d => <li key={d} onClick={(e) => setSpec(d)}>{d}</li>)}\n          </ul>\n        </div>\n        <DataPanel scene={scene} renderer={renderer}></DataPanel>\n        <LayerView scene={scene} renderer={renderer}></LayerView>\n        <Inspector scene={scene} renderer={renderer}></Inspector>\n        <ToolBar></ToolBar>\n      </div>\n    )\n}\n\nasync function loadJSON(url) {\n    const response = await fetch(url);\n    const text = await response.text();\n    let json = JSON.parse(text);\n    return json;\n  }\n\nexport default Templating;","import './css/App.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Authoring from './Authoring';\nimport Templating from './Templating';\n\nfunction App(props) {\n  return (\n    <Router basename={'/v2'}>\n      <div>\n        <Routes>\n          <Route path = \"/\" element={<Authoring/>}/>\n          <Route path = \"/reuse\" element={<Templating/>}/>\n        </Routes>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/bootstrap.min.css';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}