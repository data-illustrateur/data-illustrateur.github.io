{"version":3,"sources":["canvasSlice.js","toolSlice.js","store.js","Defs.js","Util.js","tools/PolylineTool.js","Canvas.js","tools/SelectionUI.js","tools/SelectTool.js","tools/DirectSelectTool.js","tools/RectTool.js","tools/CircleTool.js","tools/RingTool.js","tools/LineTool.js","EventLayer.js","tools/TextTool.js","ToolBar.js","Inspector.js","LayerView.js","DataPanel.js","InteractiveLegend.js","Authoring.js","Templating.js","App.js","reportWebVitals.js","index.js"],"names":["canvasSlice","createSlice","name","initialState","selected","directSelected","directSelectPreview","rectSelectRegion","itemUpdated","scaleUpdated","axisHandleVisible","legendClicked","dataItemJoined","newItemCreated","itemsDeleted","undoStackChanged","redoStackChanged","zoomLevel","panDelta","reducers","select","state","action","payload","directSelect","rectSelect","draw","console","log","updateItem","updateScale","toggleAxisHandle","customizeColorPalette","joinDataItem","createNewItem","deleteItems","updateUndoStack","updateRedoStack","setZoomLevel","pan","actions","toolSlice","activeTool","activateTool","configureStore","reducer","canvas","tool","properties","channel","accessor","options","display","value","undefined","parameters","id","divergingColorSchemes","sequentialColorSchemes","addToStack","scene","datasets","stack","type","stackType","scn","toJSON","t","tables","push","JSON","stringify","store","dispatch","length","getSVGPathData","items","vxSize","d","i","bounds","b","left","top","join","right","bottom","size","Math","max","width","height","radius","x","y","getAggregator","item","getItem","enc","getEncodingByItem","aggregator","getScheme","scale","scheme","getScaleType","canShareScale","channel1","channel2","c","indexOf","getDefaultCollectionLayout","numItems","ar","doubleGap","layout","rowGap","colGap","msc","getPositionInScene","clientX","clientY","svg","document","getElementById","pt","createSVGPoint","svgP","matrixTransform","getScreenCTM","inverse","getPropertyDef","itemType","prop","replace","toUpperCase","getPropertyID","g","p","pts","updateUI","vx","vy","d3","style","attr","finish","renderer","undoStack","r","mark","vertices","render","connect","resizeX","resizeY","props","useEffect","s","vb","bbox","node","getBoundingClientRect","wd","ht","parseInt","split","vbArr","map","translateByKey","getState","visible","pathY","pathX","pathPosition","translate","ds","itm","parent","_doTranslate","addEventListener","e","key","removeItem","PolylineTool","ctrlKey","metaKey","preventDefault","z","min","resetViewBox","className","getHandlePosition","nw","n","ne","se","sw","w","axisHandlePosition","updateAxisHandlePosition","axis","x1","y1","x2","y2","tx","ty","h","middle","isFlipped","center","text","encoding","rangeExtent","toFixed","redrawRect","styles","rect","attrs","a","resizeStarted","findItemToSnap","o","pos","children","filter","candidates","anchors","anchor","sort","abs","getResizeBounds","ex","ey","itmBounds","hc","vc","dx","dy","handles","downX","downY","selectAll","call","on","resizing","this","toChange","xRef","yRef","fs","floor","fontSize","setProperties","resizeEnded","peers","getPeersInScene","peerPathData","clone","cnt","parentStyles","itms","union","redrawSelection","seg","vertex1","vertex2","redrawDirectSelection","cb","cellBounds","numCols","numRows","topCellTop","leftCellLeft","data","rects","enter","append","merge","sourceEvent","stopPropagation","datum","exit","remove","redrawGridGaps","redrawDirectSelectPreview","dir","newRE","getEncodedChannels","autoUpdateTicks","strokeWidth","stroke","fill","fontWeight","strokeDasharray","clickHeld","rectRegion","dragging","activeItem","itemX","itemY","hitTest","cg","sel","hit","dragItem","newX","newY","moved","EventLayer","deltaX","deltaY","onDoubleClick","child","SelectTool","onMouseDown","fieldType","pathHitTest","v","dataScope","getFieldValue","legend","button","RectTool","CircleTool","RingTool","DirectSelectTool","LineTool","onMouseMove","itmInSelection","shiftKey","cx","cy","angle","atan2","PI","angleR","round","dist","sqrt","pow","cos","sin","lp","onMouseUp","m","newSel","concat","fillColor","outerRadius","innerRadius","property","fontFamily","focus","TextTool","tools","arrangements","getUsableTbls","dataTable","getOrientations","cmd","useDispatch","inputFile","useRef","useState","showRepeatModal","setShowRepeatModal","setCmd","tbls","setTbls","fields","setFields","orientations","setOrientations","joinMsg","setJoinMsg","switchTool","updatePreview","empty","clear","dataset","field","duplicate","strokeColor","addChild","dups","glyph","coll","repeat","getUniqueFieldValues","divide","orientation","densify","classify","firstChild","layout2","updateMsg","num","vals","msg","classed","evt","CustomEvent","bubbles","cancelable","dispatchEvent","selectors","canRepeat","canDivide","canDensify","canClassify","canAlign","redoStack","onClick","current","click","ref","accept","onChange","f","target","files","reader","FileReader","onload","loadScene","parse","result","resetStacks","readAsText","getDataTables","fname","Object","values","saveAs","Blob","source","XMLSerializer","serializeToString","match","pop","title","getAttribute","usedFields","keys","nonNumericFields","toLowerCase","newPos","forEach","doAlign","Modal","show","onShow","backdrop","keyboard","Header","Title","Body","Footer","Button","variant","sels","reCreateRelatedAxes","headerClasses","classes","class","updatePropertyControl","propDef","val","sizeBound","positionBound","encodable","removeEncoding","info","anyItem","disabled","group","ct","na","params","paramDef","childrenOrder","ori","vertexShapeUpdated","currentColor","setCurrentColor","currentColorPropDef","setCurrentColorPropDef","currentDataTable","setCurrentDataTable","pastLayouts","setPastLayouts","def","panel","setCategoricalValue","ctrl","l","unshift","find","getDefaultLayout","setNumericValue","parseFloat","isNaN","encode","guide","firstVertex","lastVertex","highlightAxis","createNumericControl","createStringControl","onInput","setStringValue","createBooleanControl","setBooleanValue","CustomToggle","React","forwardRef","href","createPropertyControl","Dropdown","Toggle","bsPrefix","Menu","Form","Group","Stack","direction","gap","Label","Select","changeScaleType","aggr","changeAggregator","reCreateRelatedLegends","changeScheme","range","step","margin","float","createColorControl","createCategoryControl","getEncodableFields","scales","itmKey","encodings","encs","getFieldType","getReusableScales","Item","k","Set","drop","as","onMouseEnter","onMouseLeave","htmlFor","src","alt","checked","toggleOrder","disableAlpha","color","onChangeComplete","hex","enumerateLayers","list","level","getLayerId","classId","layers","index","lv","slice","substring","getScene","getPeers","getLayerLabel","activeTbl","setActiveTbl","dataScopeRows","setDataScopeRows","dataScopeInfo","setDataScopeInfo","useSearchParams","queryParameters","urlDataset","setUrlDataset","importDataset","useCallback","string","dname","tbl","csvFromString","loadDataset","err","warn","get","fetch","then","response","cols","useMemo","Cell","getRawValue","col","useTable","columns","hiddenColumns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","getHeaderIcon","immerable","tuples","numTuples","getRowCount","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","row","getRowProps","cells","cell","getCellProps","setLegend","setColor","setValue","domain","_setRange","Authoring","setScene","setDatasets","setUndoStack","setRedoStack","body","backgroundColor","overflow","proj","json","loader","load","loadJSON","url","Templating","spec","setSpec","exe","run","window","onbeforeunload","event","returnValue","App","basename","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.4baedb58.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const canvasSlice = createSlice({\n  name: 'canvas',\n  initialState: {\n    selected: [],\n    directSelected: null,\n    directSelectPreview: null,\n    rectSelectRegion: {},\n    //item properties updated\n    itemUpdated: {},\n    //scale range or domain updated\n    scaleUpdated: {},\n    axisHandleVisible: false,\n    legendClicked: {},\n    dataItemJoined: {},\n    newItemCreated: {},\n    itemsDeleted: [],\n    undoStackChanged: {\"length\" : 0},\n    redoStackChanged: {\"length\" : 0},\n    zoomLevel: 100,\n    panDelta: {\"x\": 0, \"y\": 0}\n  },\n  reducers: {\n    select: (state, action) => {\n      state.selected = action.payload;\n    },\n    directSelect: (state, action) => {\n      state.directSelected = action.payload;\n    },\n    directSelectPreview: (state, action) => {\n      state.directSelectPreview = action.payload;\n    },\n    rectSelect: (state, action) => {\n      state.rectSelectRegion = action.payload;\n    },\n    draw: (state, action) => {\n      console.log(action);\n    },\n    updateItem: (state, action) => {\n      state.itemUpdated = action.payload;\n    },\n    updateScale: (state, action) => {\n      state.scaleUpdated = action.payload;\n    },\n    toggleAxisHandle: (state, action) => {\n      state.axisHandleVisible = action.payload;\n    },\n    customizeColorPalette: (state, action) => {\n      state.legendClicked = action.payload;\n    },\n    joinDataItem: (state, action) => {\n      state.dataItemJoined = action.payload;\n    },\n    createNewItem: (state, action) => {\n      state.newItemCreated = action.payload;\n    },\n    deleteItems: (state, action) => {\n      state.itemsDeleted = action.payload;\n    },\n    updateUndoStack: (state, action) => {\n      state.undoStackChanged = action.payload;\n    },\n    updateRedoStack: (state, action) => {\n      state.redoStackChanged = action.payload;\n    },\n    setZoomLevel: (state, action) => {\n      state.zoomLevel = action.payload;\n    },\n    pan: (state, action) => {\n      state.panDelta = action.payload;\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { select, directSelect, directSelectPreview, rectSelect, draw, updateItem, updateScale, toggleAxisHandle, customizeColorPalette, joinDataItem, createNewItem, deleteItems, updateUndoStack, updateRedoStack, setZoomLevel, pan } = canvasSlice.actions;\n\nexport default canvasSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\n\nexport const toolSlice = createSlice({\n  name: 'tool',\n  initialState: {\n    activeTool: \"Select\",\n  },\n  reducers: {\n    activateTool: (state, action) => {\n      state.activeTool = action.payload;\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { activateTool } = toolSlice.actions;\n\nexport default toolSlice.reducer;","import { configureStore } from '@reduxjs/toolkit'\nimport canvasSlice from './canvasSlice'\nimport toolSlice from './toolSlice'\n\nexport default configureStore({\n  reducer: {\n    canvas: canvasSlice,\n    tool: toolSlice\n  }\n})","const properties = {\n    // \"Peers\": {\n    //     \"Count\": {\"id\": \"sibling-count\", \"group\": \"Peers\", \"type\": \"numeric-range\", \"range\": [1, 100],\n    //         \"class\": [\"line-sibling-count-prop\", \"circle-sibling-count-prop\", \"rect-sibling-count-prop\", \"path-sibling-count-prop\", \"text-sibling-count-prop\", \"repeat-grid-sibling-count-prop\", \"partition-sibling-count-prop\", \"group-sibling-count-prop\"]},\n    //     \"Ordered By\": {\n    //         \"id\": \"peers-ordered-by\", \"group\": \"Peers\", \"type\": \"categorical\",\n    //         \"class\": [\"line-peers-ordered-by-prop\", \"circle-peers-ordered-by-prop\", \"rect-peers-ordered-by-prop\",\n    //             \"path-peers-ordered-by-prop\", \"text-peers-ordered-by-prop\", \"repeat-grid-peers-ordered-by-prop\",\n    //             \"partition-peers-ordered-by-prop\"],\n    //         \"options\": [{display:\"Data Source Order\", value: \"data-source-order\"}]\n    //     }\n    // },\n\n    \"Shape Position\": {\n        //need to add path-position-prop so that we can have \"scatterplots of paths\"\n        \"X\": {\"id\": \"x\", channel: \"x\", \"group\": \"Shape Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"pointText-prop\", \"path-prop\", \"polygon-prop\", \"image-prop\", \"group-prop\", \"area-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"y\", channel: \"y\", \"group\": \"Shape Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"pointText-prop\", \"path-prop\", \"polygon-prop\", \"image-prop\", \"group-prop\", \"area-prop\"], accessor: [\"y\"]},\n        \"Baseline\": {\"id\": \"baseline\", \"group\": \"Shape Position\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"area-prop\"], accessor: [\"baseline\"],\n            options: [{display:\"top\", value:'top'},\n            {display:\"middle\", value:'middle'},\n            {display:\"bottom\", value:'bottom'},\n            {display:\"left\", value:'left'},\n            {display:\"center\", value:'center'},\n            {display:\"right\", value:'right'}]\n        }\n    },\n\n    \"Segment Position\": {\n        \"X\": {\"id\": \"segmentX\", channel: \"x\", \"group\": \"Segment Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"segment-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"segmentY\", channel: \"y\", \"group\": \"Segment Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"segment-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Vertex Position\": {\n        \"X\": {\"id\": \"vxX\", channel: \"x\", \"group\": \"Vertex Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"vxY\", channel: \"y\", \"group\": \"Vertex Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Size\": {\n        \"Width\": {\"id\": \"width\", channel: \"width\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"rect-prop\", \"path-prop\", \"image-prop\", \"area-prop\"], accessor: [\"bounds\",\"width\"]},\n        \"Height\": {\"id\": \"height\", channel: \"height\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"rect-prop\", \"path-prop\", \"image-prop\", \"area-prop\"], accessor: [\"bounds\",\"height\"]},\n        \"Radius\": {\"id\": \"radius\", channel: \"radius\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"circle-prop\"], accessor: [\"radius\"]},\n        \"Inner Radius\": {\"id\": \"innerRadius\", channel: \"innerRadius\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"pie-prop\", \"ring-prop\"], accessor: [\"innerRadius\"]},\n        \"Outer Radius\": {\"id\": \"outerRadius\", channel: \"outerRadius\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"pie-prop\", \"ring-prop\"], accessor: [\"outerRadius\"]},\n        \"Angle\": {\"id\": \"angle\", channel: \"angle\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"pie-prop\"], accessor: [\"angle\"]},\n        \"Thickness\": {\"id\": \"thickness\", channel: \"thickness\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"pie-prop\", \"ring-prop\"], accessor: [\"thickness\"]},\n        \"Area\": {\"id\": \"area\", channel: \"area\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"rect-prop\", \"circle-prop\"], accessor: [\"area\"]}\n    },\n\n    \"Text\": {\n        \"Content\": {\"id\": \"content\", channel: \"text\",  \"group\": \"Text\", \"type\": \"string\", \"encodable\": true, \"class\": [\"pointText-prop\"], accessor:[\"text\"]},\n        \"Font\": {\"id\": \"fontFamily\", channel: \"fontFamily\", \"group\": \"Text\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"pointText-prop\"], accessor:[\"fontFamily\"],\n            \"options\": [\n                {display:\"Arial\", value:\"Arial, sans-serif\"},\n                {display:\"Alegreya Sans\", value:\"'Alegreya Sans', sans-serif\"},\n                {display:\"Alegreya\", value:\"'Alegreya', serif\"},\n                {display:\"Calibri\", value:\"Calibri, sans-serif\"},\n                {display:\"Cambria\", value:\"Cambria, sans-serif\"},\n                {display:\"Chivo\", value:\"'Chivo', sans-serif\"},\n                {display:\"Comic Sans MS\", value:\"'Comic Sans MS', sans-serif\"},\n                {display:\"Consolas\", value:\"Consolas, monospace\"},\n                {display:\"Cormorant\", value:\"'Cormorant', serif\"},\n                {display:\"Courier New\", value:\"'Courier New', Courier, monospace\"},\n                {display:\"Eczar\", value:\"'Eczar', serif\"},\n                {display:\"Fira Sans\", value:\"'Fira Sans', sans-serif\"},\n                {display:\"Futura\", value:\"Futura, sans-serif\"},\n                {display:\"Georgia\", value:\"Georgia, serif\"},\n                {display:\"Helvetica Neue\", value:\"'HelveticaNeue', 'Helvetica Neue', 'HelveticaNeueRoman', 'HelveticaNeue-Roman', 'Helvetica Neue Roman', sans-serif\"},\n                {display:\"Impact\", value:\"Impact, Charcoal, sans-serif\"},\n                {display:\"Palatino\", value:\"Palatino, serif\"},\n                {display:\"Libre Franklin\", value:\"'Libre Franklin', sans-serif\"},\n                {display:\"Playfair Display\", value:\"'Playfair Display', serif\"},\n                {display:\"Playfair Display SC\", value:\"'Playfair Display SC', serif\"},\n                {display:\"Rubik\", value:\"'Rubik', sans-serif\"},\n                {display:\"Space Mono\", value:\"'Space Mono', monospace\"},\n                {display:\"Times New Roman\", value:\"'Times New Roman', TimesNewRoman, serif\"},\n                {display:\"Trebuchet MS\", value:\"'Trebuchet MS', sans-serif\"},\n                {display:\"Verdana\", value:\"Verdana, Geneva, sans-serif\"},\n                {display:\"Work Sans\", value:\"'Work Sans', sans-serif\"}\n            ]},\n        \"Color\": {\"id\": \"textColor\", channel: \"fillColor\", \"group\": \"Text\", \"type\": \"color\", \"encodable\": true, \"class\": [\"pointText-prop\"], accessor:[\"fillColor\"]},\n        \"Weight\": {\"id\": \"fontWeight\", channel: \"fontWeight\",  \"group\": \"Text\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"pointText-prop\"], accessor:[\"fontWeight\"], \"options\": [\n            {display: \"normal\", value: \"normal\"},\n            {display: \"bold\", value: \"bold\"}\n        ]},\n        \"Size (px)\": {\"id\": \"fontSize\", channel: \"fontSize\",  \"group\": \"Text\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"pointText-prop\"], accessor:[\"fontSize\"]},\n        \"Horz Anchor\": {\"id\": \"horzAnchor\", channel: \"horzAnchor\",  \"group\": \"Text\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"pointText-prop\"], accessor:[\"horzAnchor\"], \"options\": [\n            {display: \"left\", value: \"left\"},\n            {display: \"center\", value: \"center\"},\n            {display: \"right\", value: \"right\"}\n        ]},\n        \"Vert Anchor\": {\"id\": \"vertAnchor\", channel: \"vertAnchor\",  \"group\": \"Text\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"pointText-prop\"], accessor:[\"vertAnchor\"], \"options\": [\n            {display: \"top\", value: \"top\"},\n            {display: \"middle\", value: \"middle\"},\n            {display: \"bottom\", value: \"bottom\"}\n        ]},\n    },\n\n    \"Vertex Style\": {\n        \"Shape\": {\"id\": \"vxShape\", channel: \"shape\",  \"group\": \"Vertex Style\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"vertex-prop\"], accessor:[\"shape\"], \"options\": [\n            {display: \"none\", value: undefined},\n            {display: \"rectangle\", value: \"rect\"},\n            {display: \"circle\", value: \"circle\"}\n        ]},\n        \"Width\": {\"id\": \"vxWidth\", \"channel\": \"width\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"width\"]},\n        \"Height\": {\"id\": \"vxHeight\", \"channel\": \"height\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"height\"]},\n        \"Radius\": {\"id\": \"vxRadius\", \"channel\": \"radius\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"radius\"]},\n        \"Fill Color\": {\"id\": \"vxFillColor\", \"channel\": \"fillColor\", \"group\": \"Vertex Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"fillColor\"]},\n        \"Stroke Color\": {\"id\": \"vxStrokeColor\", \"channel\": \"strokeColor\", \"group\": \"Vertex Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"strokeColor\"]},\n        \"Stroke Width\": {\"id\": \"vxStrokeWidth\", \"channel\": \"strokeWidth\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"strokeWidth\"]},\n        \"Opacity\": {\"id\": \"vxOpacity\", \"channel\": \"opacity\", \"group\": \"Vertex Style\", \"type\": \"numeric-range\", \"encodable\": false, \"class\": [\"vertex-prop\"], \"range\": [0, 1], accessor: [\"opacity\"]},\n    },\n\n    \"Style\": {\n        // \"Descriptor\": {\"id\": \"collection-descriptor\", \"group\": \"Style\", \"type\": \"categorical\", \"class\": [\"collection-prop\", \"partition-prop\"], \"options\": [\n        //     {display:\"Show\", value:'Show'},{display:\"Hide\", value:'Hide'}\n        // ]},\n        \"Curve Mode\": {\"id\": \"curveMode\", \"channel\": \"curveMode\", \"group\": \"Style\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"path-prop\", \"area-prop\"], accessor: [\"curveMode\"],\n            \"options\": [\n                {\"display\": \"Natural\", value: \"natural\", parameters: []},\n                {\"display\": \"Basis\", value: \"basis\", parameters: []},\n                {\"display\": \"BumpX\", value: \"bumpX\", parameters: []},\n                {\"display\": \"BumpY\", value: \"bumpY\", parameters: []},\n                {\"display\": \"Linear\", value: \"linear\", parameters: []},\n                {\"display\": \"Step\", value: \"step\", parameters: []},\n                {\"display\": \"CatmullRom\", value: \"CatmullRom\", parameters: []},\n                {\"display\": \"Cardinal\", value: \"cardinal\", parameters: []}\n            ]\n        },\n        \"Fill Color\": {\"id\": \"fillColor\", \"channel\": \"fillColor\", \"group\": \"Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], accessor: [\"fillColor\"]},\n        \"Stroke Color\": {\"id\": \"strokeColor\", \"channel\": \"strokeColor\", \"group\": \"Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], accessor: [\"strokeColor\"]},\n        \"Stroke Width\": {\"id\": \"strokeWidth\", \"channel\": \"strokeWidth\", \"group\": \"Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], accessor: [\"strokeWidth\"]},\n        \"Opacity\": {\"id\": \"opacity\", \"channel\": \"opacity\", \"group\": \"Style\", \"type\": \"numeric-range\", \"encodable\": false, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], \"range\": [0, 1], accessor: [\"opacity\"]}\n\n    },\n\n    \"Canvas\": {\n        \"Background\": {\"id\": \"canvasFillColor\", \"group\": \"canvas\", \"type\": \"color\", \"encodable\": false, \"class\": [\"canvas-prop\"], \"accessor\": [\"fillColor\"]}\n    },\n\n    \"Collection Properties\": {\n        \"X\": {\"id\": \"collectionX\", channel: \"x\", \"group\": \"collection\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"collection-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"collectionY\", channel: \"y\", \"group\": \"collection\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"collection-prop\"], accessor: [\"y\"]},\n        \"Children Order\": {\"id\": \"childrenOrder\", \"group\": \"collection\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"collection-prop\"], accessor: [\"childrenOrder\", \"field\"],\n            \"options\": [{display:\"Default\", value:'default', parameters: []}]\n        }        \n    },\n\n    \"Glyph Position\": {\n        \"X\": {\"id\": \"glyphX\", channel: \"x\", \"group\": \"Glyph Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"glyph-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"glyphY\", channel: \"y\", \"group\": \"Glyph Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"glyph-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Layout\": {\n        \"Type\": {\"id\": \"layoutType\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"collection-prop\", \"grid-prop\", \"stack-prop\", \"none-prop\"],\n            \"options\": [{display:\"Grid\", value:'grid', parameters: ['Num Rows', 'Num Columns', 'Row Gap', 'Column Gap', 'Horz Gravity', 'Vert Gravity', 'Direction']},\n                        {display:\"Stack\", value:'stack', parameters: ['Orientation', 'Horz Gravity', 'Vert Gravity']},\n                        {display:\"Pack\", value:'packing', parameters: []},\n                        {display:\"Treemap\", value:'treemap', parameters: []},\n                        {display:\"None\", value:'none', parameters: []}\n                        ]\n        },\n        \"Num Rows\": {\"id\": \"numRows\", \"group\": \"Layout\", \"type\": \"numeric-integer\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"numRows\"]},\n        \"Num Columns\": {\"id\": \"numCols\", \"group\": \"Layout\", \"type\": \"numeric-integer\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"numCols\"]},\n        \"Row Gap\": {\"id\": \"rowGap\", \"group\": \"Layout\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"rowGap\"]},\n        \"Column Gap\": {\"id\": \"colGap\", \"group\": \"Layout\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"colGap\"]},\n        \"Orientation\": {\"id\": \"orientation\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"stack-prop\", \"layout-prop\"], accessor: [\"orientation\"], \n            \"options\": [{\"display\": \"Horizontal\", value: \"horizontal\", parameters: []}, {\"display\": \"Vertical\", value: \"vertical\", parameters: []}]\n        },\n        \"Horz Gravity\": {\"id\": \"horzGravity\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"grid-prop\", \"stack-prop\", \"layout-prop\"], accessor: [\"horzCellAlignment\"], \n            \"options\": [{\"display\": \"Left\", value: \"left\", parameters: []}, {\"display\": \"Center\", value: \"center\", parameters: []}, {\"display\": \"Right\", value: \"right\", parameters: []}]\n        },\n        \"Vert Gravity\": {\"id\": \"vertGravity\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"grid-prop\", \"stack-prop\", \"layout-prop\"], accessor: [\"vertCellAlignment\"], \n            \"options\": [{\"display\": \"Top\", value: \"top\", parameters: []}, {\"display\": \"Middle\", value: \"middle\", parameters: []}, {\"display\": \"Bottom\", value: \"bottom\", parameters: []}]\n        },\n        \"Direction\": {\"id\": \"direction\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"direction\"], \n            \"options\": [{\"display\": \"Left to Right, Bottom to Top\", value: 'l2r_b2t', parameters: []}, \n                        {\"display\": \"Left to Right, Top to Bottom\", value: 'l2r_t2b', parameters: []}, \n                        {\"display\": \"Right to Left, Bottom to Top\", value: 'r2l_b2t', parameters: []},\n                        {\"display\": \"Right to Left, Top to Bottom\", value: 'r2l_t2b', parameters: []}, \n                        {\"display\": \"Bottom to Top, Left to Right\", value: 'b2t_l2r', parameters: []}, \n                        {\"display\": \"Top to Bottom, Left to Right\", value: 't2b_l2r', parameters: []}, \n                        {\"display\": \"Bottom to Top, Right to Left\", value: 'b2t_r2l', parameters: []},\n                        {\"display\": \"Top to Bottom, Right to Left\", value: 't2b_r2l', parameters: []}\n                    ]\n        } \n        //\"Gap\": {\"id\": \"gap\", \"group\": \"Layout\", \"type\": \"numeric\", \"class\": [\"partition-prop\"]},\n    },\n\n    \"Axis\": {\n        \"Include 0\": {id: \"includeZero\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"includeZero\"]},\n        \"Show Path\": {id: \"showPath\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"pathVisible\"]},\n        \"Show Ticks\": {id: \"showTicks\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"tickVisible\"]},\n        \"Orientation\": {\"id\": \"axisOrientation\", \"group\": \"axis\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"orientation\"],\n            \"options\": [{display:\"top\", value:'top'},\n                        {display:\"bottom\", value:'bottom'},\n                        {display:\"left\", value:'left'},\n                        {display:\"right\", value:'right'}]\n        },\n        \"Stroke Color\": {\"id\": \"axisStrokeColor\", \"group\": \"axis\", \"type\": \"color\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"strokeColor\"]},\n        \"Text Color\": {\"id\": \"axisTextColor\", \"group\": \"axis\", \"type\": \"color\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"textColor\"]},\n        \"Path Position\": {\"id\": \"pathPos\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"pathPosition\"]},\n        \"Tick Offset\": {\"id\": \"tickOffset\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"tickOffset\"]},\n        \"Tick Size\": {\"id\": \"tickSize\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"tickSize\"]},\n        \"Label Offset\": {\"id\": \"labelOffset\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"labelOffset\"]},\n        \"Label Format\": {\"id\": \"labelFormat\", \"group\": \"axis\", \"type\": \"string\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"labelFormat\"]},\n        \"Label Rotation\": {\"id\": \"labelRotation\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"labelRotation\"]},\n        \"Show Title\": {id: \"showTitle\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"showTitle\"]},\n    },\n\n    \"Legend\": {\n        // \"X\": {\"id\": \"legendX\", channel: \"x\", \"group\": \"legend\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"legend-prop\"], accessor: [\"x\"]},\n        // \"Y\": {\"id\": \"legendY\", channel: \"y\", \"group\": \"legend\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"legend-prop\"], accessor: [\"y\"]},\n        \"Text Color\": {\"id\": \"legendTextColor\", \"group\": \"legend\", \"type\": \"color\", \"encodable\": false, \"class\": [\"legend-prop\"], \"accessor\": [\"textColor\"]},\n        \"Orientation\": {\"id\": \"legendOrientation\", \"group\": \"legend\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"legend-prop\"], \"accessor\": [\"orientation\"],\n                        \"options\": [{display:\"Horizontal\", value:'horizontal'}, {display:\"Vertical\", value:'vertical'}]}\n    },\n\n    \"Gridlines\": {\n        \"Stroke Color\": {\"id\": \"gridlineStrokeColor\", \"group\": \"Gridlines\", \"type\": \"color\", \"encodable\": false, \"class\": [\"gridlines-prop\"], accessor: [\"strokeColor\"]},\n        \"Stroke Width\": {\"id\": \"gridlineStrokeWidth\", \"group\": \"Gridlines\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"gridlines-prop\"], accessor: [\"strokeWidth\"]}\n    }\n\n    // \"Alignment in Cell\": {\n    //     \"Horizontal\": {\"id\": \"x-constraint\", \"group\": \"Float\", \"type\": \"categorical\", \"encodable\": false,\n    //         \"class\": [\"line-constraint-prop\", \"circle-constraint-prop\", \"rect-constraint-prop\", \"text-constraint-prop\",\"repeat-grid-constraint-prop\", \"partition-constraint-prop\"],\n    //         \"options\": [{display:\"Off\", value:'off'}, {display:\"Left\", value:'left'},{display:\"Center\", value:'center'},{display:\"Right\", value:'right'}]},\n    //     \"Vertical\": {\"id\": \"y-constraint\", \"group\": \"Float\", \"type\": \"categorical\", \"encodable\": false,\n    //         \"class\": [\"line-constraint-prop\", \"circle-constraint-prop\", \"rect-constraint-prop\", \"text-constraint-prop\",\"repeat-grid-constraint-prop\", \"partition-constraint-prop\"],\n    //         \"options\": [{display:\"Off\", value:'off'}, {display:\"Top\", value:'top'},{display:\"Middle\", value:'middle'},{display:\"Bottom\", value:'bottom'}]}\n    // }\n};\n\nconst divergingColorSchemes = {\n    \"interpolateBrBG\": \"BrownBlueGreen\",\n    \"interpolatePRGn\": \"PurpleGreen\",\n    \"interpolatePiYG\": \"PinkYellowGreen\",\n    \"interpolatePuOr\": \"PurpleOrange\",\n    \"interpolateRdBu\": \"RedBlue\",\n    \"interpolateRdGy\": \"RedGrey\",\n    \"interpolateRdYlBu\": \"RedYellowBlue\",\n    \"interpolateRdYlGn\": \"RedYellowGreen\",\n    \"interpolateSpectral\": \"Spectral\"\n};\n\nconst sequentialColorSchemes = {\n    \"interpolateTurbo\": \"Turbo\",\n    \"interpolateViridis\": \"Viridis\",\n    \"interpolateInferno\": \"Inferno\",\n    \"interpolateMagma\": \"Magma\",\n    \"interpolatePlasma\": \"Plasma\",\n    \"interpolateCividis\": \"Cividis\",\n    \"interpolateWarm\": \"Warm\",\n    \"interpolateCool\": \"Cool\",\n    \"interpolateCubehelixDefault\": \"CubehelixDefault\",\n    \"interpolateBuGn\": \"Blue-Green\",\n    \"interpolateBuPu\": \"Blue-Purple\",\n    \"interpolateGnBu\": \"Green-Blue\",\n    \"interpolateOrRd\": \"Orange-Red\",\n    \"interpolatePuBuGn\": \"Purple-Blue-Green\",\n    \"interpolatePuBu\": \"Purple-Blue\",\n    \"interpolatePuRd\": \"Purple-Red\",\n    \"interpolateRdPu\": \"Red-Purple\",\n    \"interpolateYlGnBu\": \"Yellow-Green-Blue\",\n    \"interpolateYlGn\": \"Yellow-Green\",\n    \"interpolateYlOrBr\": \"Yellow-Orange-Brown\",\n    \"interpolateYlOrRd\": \"Yellow-Orange-Red\" \n};\n\nexport { properties, divergingColorSchemes, sequentialColorSchemes }","import { properties } from \"./Defs\";\nimport * as msc from \"mascot-vis\";\nimport store from \"./store\";\nimport { updateRedoStack, updateUndoStack } from \"./canvasSlice\";\n\nconst addToStack = (scene, datasets, stack, type) => {\n    let stackType = type ? type : \"undo\";\n    let scn = scene.toJSON();\n    for (let t of datasets) {\n        if (!(t.id in scn.tables)) {\n            scn.tables[t.id] = t.toJSON();\n        }\n    }\n    // let s = stack.slice();\n    // s.push(JSON.stringify(scn));\n    // setStack(s);\n    stack.push(JSON.stringify(scn));\n    // console.log(\"added to stack\", stackType, stack.length);\n    if (stackType === \"undo\")\n        store.dispatch(updateUndoStack({\"length\": stack.length}));\n    else if (stackType === \"redo\")\n        store.dispatch(updateRedoStack({\"length\": stack.length}));\n}\n\nconst getSVGPathData = (items, vxSize) => {\n    let d = \"\";\n    for (let i of items) {\n        if (i.getSVGPathData)\n            d += i.getSVGPathData();\n        else if (i.bounds) {\n            let b = i.bounds;\n            d += [\"M\", b.left, b.top].join(\" \");\n            d += [\"L\", b.right, b.top].join(\" \");\n            d += [\"L\", b.right, b.bottom].join(\" \");\n            d += [\"L\", b.left, b.bottom, \"Z\"].join(\" \");\n        } else if (i.type === \"vertex\") {\n            let size = Math.max(i.width, i.height, i.radius, vxSize);\n            d += [\"M\", i.x - size/2, i.y - size/2].join(\" \");\n            d += [\"L\", i.x + size/2, i.y - size/2].join(\" \");\n            d += [\"L\", i.x + size/2, i.y + size/2].join(\" \");\n            d += [\"L\", i.x - size/2, i.y + size/2, \"Z\"].join(\" \");\n        }\n    }\n    return d;\n}\n\n// const getPathVerticesData = (p, vertexSize) => {\n//     let d = \"\";\n//     for (let v of p.vertices) {\n//         let size = Math.max(v.width, v.height, v.radius, vertexSize);\n//         d += [\"M\", v.x - size/2, v.y - size/2].join(\" \");\n//         d += [\"L\", v.x + size/2, v.y - size/2].join(\" \");\n//         d += [\"L\", v.x + size/2, v.y + size/2].join(\" \");\n//         d += [\"L\", v.x - size/2, v.y + size/2, \"Z\"].join(\" \");\n//     }\n//     return d;\n// }\n\nconst getReusableScales = (fieldType, channel, scene) => {\n    let r = {};\n    for (let itmKey in scene.encodings) {\n        let encs = scene.encodings[itmKey];\n        for (let c in encs) {\n            let enc = encs[c];\n            if (canShareScale(c, channel) && enc.dataTable.getFieldType(enc.field) === fieldType) {\n                if (!(enc.scale.id in r))\n                    r[enc.scale.id] = [];\n                r[enc.scale.id].push(enc);\n            }   \n        }\n    }\n    return r;\n}\n\nconst getAggregator = (channel, selected, directSelected, scene) => {\n    if (!channel) return null;\n    let item;\n    if (selected.length >= 1) {\n        item = scene.getItem(selected[0]);\n    } else if (directSelected) {\n        item = scene.getItem(directSelected);\n    }\n    if (!item) return null;\n    //if (!item.dataScope) return null;\n    //if (item.dataScope.numTuples === 1) return null; \n    let enc = scene.getEncodingByItem(item, channel);\n    if (!enc) return null;\n    return enc.aggregator;\n}\n\nconst getScheme = (channel, selected, directSelected, scene) => {\n    let item;\n    if (selected.length >= 1) {\n        item = scene.getItem(selected[0]);\n    } else if (directSelected) {\n        item = scene.getItem(directSelected);\n    }\n    if (!item) return null; \n    let enc = scene.getEncodingByItem(item, channel);\n    if (!enc) return null;\n    return enc.scale.scheme;\n}\n\nconst getScaleType = (channel, selected, directSelected, scene) => {\n    let item;\n    if (selected.length >= 1) {\n        item = scene.getItem(selected[0]);\n    } else if (directSelected) {\n        item = scene.getItem(directSelected);\n    }\n    if (!item) return null;\n    let enc = scene.getEncodingByItem(item, channel);\n    if (!enc) return null;\n    return enc.scale.type;\n}\n\nconst canShareScale = (channel1, channel2) => {\n    const candidates = [[\"x\", \"width\"], [\"y\", \"height\"], [\"fillColor\", \"strokeColor\"]];\n    for (let c of candidates) {\n        if (c.indexOf(channel1) >= 0 && c.indexOf(channel2) >= 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst getDefaultCollectionLayout = (item, numItems) => {\n    let ar = item.bounds.width/item.bounds.height,\n        doubleGap = item.type === \"collection\" && item.layout && item.layout.type === \"grid\",\n        rowGap = doubleGap ? item.layout.rowGap * 3 : 5,\n        colGap = doubleGap ? item.layout.colGap * 3 : 5;\n    // if (numItems > 50) {\n    //     return msc.layout(\"grid\", {\"numRows\": Math.floor(Math.sqrt(numItems)), \"rowGap\": rowGap, \"colGap\": colGap});\n    // } else {\n    if (ar > 2) {\n        return msc.layout(\"grid\", {\"numCols\": 1, \"rowGap\": rowGap});\n    } else {\n        return msc.layout(\"grid\", {\"numRows\": 1, \"colGap\": colGap});\n    }\n    //}\n}\n\nconst getPositionInScene = (clientX, clientY) => {\n    // const rect = document.getElementById(\"canvas\").getBoundingClientRect();\n    // return [clientX - rect.x, clientY - rect.y];\n    const svg = document.getElementById('canvas');\n    const pt = svg.createSVGPoint();\n    pt.x = clientX;\n    pt.y = clientY;\n    const svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\n    return [svgP.x, svgP.y];\n}\n\nconst getPositionInWindow = (sceneX, sceneY) => {\n    const rect = document.getElementById(\"canvas\").getBoundingClientRect();\n    return [sceneX + rect.x, rect.y + sceneY];\n}\n\nconst getDefaultLayout = (layout) => {\n    switch (layout) {\n        case \"stack\":\n            return msc.layout(\"stack\", {orientation: \"vertical\"});\n        case \"packing\":\n            return msc.layout(\"packing\");\n        case \"none\":\n            return undefined;\n        case \"grid\":\n        default:\n            return msc.layout(\"grid\", {numRows: 1});\n    }\n}\n\nconst getPropertyID = (itemType, prop) => {\n    switch (itemType) {\n        case \"vertex\":\n            return \"vx\" + prop.replace(/^\\w/, c => c.toUpperCase());;\n        case \"scene\":\n            return \"canvas\" + prop.replace(/^\\w/, c => c.toUpperCase());;\n        case \"collection\": \n        case \"segment\":\n        case \"legend\":\n            return itemType + prop.replace(/^\\w/, c => c.toUpperCase());\n        default:\n            return prop;\n    }\n}\n\nconst getPropertyDef = (itemType, prop) => {\n    const id = getPropertyID(itemType, prop);\n    for (let g in properties) {\n        for (let p in properties[g]) {\n            if (properties[g][p].id === id)\n                return properties[g][p];\n        }\n    }\n    return null;\n}\n\nexport {addToStack, getSVGPathData, getDefaultLayout, getScaleType, getAggregator, getScheme, getReusableScales, getPositionInScene, getPositionInWindow, getPropertyID, getPropertyDef, getDefaultCollectionLayout};","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet pts = [], x = undefined, y = undefined;\n\nexport const mouseDown = (e, scene) => {\n    //const p = getPositionInScene(e.clientX, e.clientY);\n    //pts.push([p[0], p[1]]);\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    if (x !== undefined && y !== undefined) {\n        let dist = Math.sqrt(Math.pow(x - pts[0][0], 2) + Math.pow(y - pts[0][1], 2));\n        if (dist < 2 && pts.length > 2) {\n            pts.push([pts[0][0], pts[0][1]]);\n            finish(scene, datasets, renderer, undoStack);\n        } else {\n            pts.push([x, y]);\n            updateUI();\n        }\n    } else {\n        const p = getPositionInScene(e.clientX, e.clientY);\n        pts.push([p[0], p[1]]);\n    }\n    d3.select(\"#selectionUI\").select(\"#vertexPreview\").style(\"visibility\", \"hidden\");\n}\n\nexport const updateUI = () => {\n    let d = [\"M\", pts[0][0], pts[0][1]].join(\" \");\n    for (let i = 1; i < pts.length; i++) {\n        let vx = pts[i][0], vy = pts[i][1];\n        if (vx === pts[0][0] && vy === pts[0][1]) {\n            d += \"Z\";\n        } else {\n            d += [\"L\", pts[i][0], pts[i][1]].join(\" \");\n        }\n    }\n    if (x !== undefined && y !== undefined)\n        d += [\"L\", x, y].join(\" \");\n    d3.select(\"#polylineToolUI\").style(\"visibility\", \"visible\").style(\"fill\", \"none\").attr(\"d\", d);\n}\n\nexport const mouseMove = (e, scene) => {\n    if (pts.length === 0) return;\n    let p = getPositionInScene(e.clientX, e.clientY), lp = pts[pts.length-1];\n    if (e.shiftKey) {\n        let angle = Math.atan2(p[1] - lp[1], p[0] - lp[0]) * 180 / Math.PI,\n            angleR = Math.round(angle/45) * 45 * Math.PI/180, \n            dist = Math.sqrt(Math.pow(p[1] - lp[1], 2) + Math.pow(p[0] - lp[0], 2));\n        x = lp[0] + Math.cos(angleR) * dist;\n        y = lp[1] + Math.sin(angleR) * dist;\n    } else {\n        x = p[0];\n        y = p[1];\n    }\n    let dist = Math.sqrt(Math.pow(x - pts[0][0], 2) + Math.pow(y - pts[0][1], 2));\n    if (dist < 2 && pts.length > 2) {\n        d3.select(\"#selectionUI\").select(\"#vertexPreview\").attr(\"x\", pts[0][0] - 5).attr(\"y\", pts[0][1] - 5)\n            .attr(\"width\", 10).attr(\"height\", 10).style(\"visibility\", \"visible\");\n    } else {\n        d3.select(\"#selectionUI\").select(\"#vertexPreview\").style(\"visibility\", \"hidden\");\n    }\n    updateUI();\n}\n\nexport const finish = (scene, datasets, renderer, undoStack) => {\n    if (!pts || pts.length === 0) {\n        return;\n    }\n    updateUI();\n    d3.select(\"#polylineToolUI\").style(\"visibility\", \"hidden\");\n    if (pts.length > 1) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"path\", {vertices: pts});\n        store.dispatch(createNewItem(r.id));\n        //store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    pts = [];\n    x = undefined;\n    y = undefined;\n}","import React from \"react\";\nimport './css/Canvas.css';\nimport { connect } from \"react-redux\";\nimport { useEffect } from 'react';\nimport { deleteItems, select, setZoomLevel, toggleAxisHandle, updateItem } from \"./canvasSlice\";\nimport store from \"./store\";\nimport * as PolylineTool from \"./tools/PolylineTool\";\nimport * as d3 from 'd3';\nimport { activateTool } from \"./toolSlice\";\n\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    itemUpdated: state.canvas.itemUpdated,\n    scaleUpdated: state.canvas.scaleUpdated,\n    dataItemJoined: state.canvas.dataItemJoined,\n    itemsDeleted: state.canvas.itemsDeleted,\n    zoomLevel: state.canvas.zoomLevel,\n    panDelta: state.canvas.panDelta\n});\n\nfunction Canvas(props) {\n\n    useEffect(() => {\n        props.renderer.render(props.scene);\n    }, [props.scene, props.renderer, props.itemUpdated, props.scaleUpdated, props.dataItemJoined, props.itemsDeleted])\n\n    useEffect(() => {\n        if (!props.zoomLevel) return;\n        let svgs = [\"#canvas\", \"#evtLayer\"];\n        for (let s of svgs) {\n            let svg = d3.select(s), vb = svg.attr(\"viewBox\"), \n                bbox = svg.node().getBoundingClientRect(), wd = bbox.width, ht = bbox.height;\n            let left = vb? parseInt(vb.split(\" \")[0]) : 0, top = vb? parseInt(vb.split(\" \")[1]) : 0;\n            svg.attr(\"viewBox\", [left, top, left + wd*100/props.zoomLevel, top + ht*100/props.zoomLevel].join(\" \"));\n        }\n    }, [props.zoomLevel])\n\n    const resetViewBox = () => {\n        let svgs = [\"#canvas\", \"#evtLayer\"];\n        for (let s of svgs) {\n            let svg = d3.select(s),\n                bbox = svg.node().getBoundingClientRect(), wd = bbox.width, ht = bbox.height;\n            svg.attr(\"viewBox\", [0, 0, wd, ht].join(\" \"));\n        }\n    }\n\n    useEffect(() => {\n        if (!props.panDelta) return;\n        let svgs = [\"#canvas\", \"#evtLayer\"];\n        for (let s of svgs) {\n            let svg = d3.select(s), vb = svg.attr(\"viewBox\"),\n                bbox = svg.node().getBoundingClientRect(), wd = bbox.width, ht = bbox.height;\n            let vbArr = vb ? vb.split(\" \").map(d => parseInt(d)) : [0, 0, wd, ht];\n            svg.attr(\"viewBox\", [vbArr[0] + props.panDelta.x, vbArr[1] + props.panDelta.y, vbArr[2], vbArr[3]].join(\" \"));\n        }\n    }, [props.panDelta])\n\n    useEffect(() => {\n\n        const translateByKey = (x, y) => {\n            let s = store.getState().canvas.selected;\n            if (s && s.length > 0) {\n                let item = props.scene.getItem(s[0]);\n                if (item && item.type === \"axis\") {\n                    store.dispatch(toggleAxisHandle({visible: false}));\n                    if (item.channel === \"x\" || item.channel === \"width\") {\n                        item.pathY = item.pathY + y;\n                    } else if (item.channel === \"y\" || item.channel === \"height\") {\n                        item.pathX = item.pathX + x;\n                    }\n                    store.dispatch(updateItem({id: item.id, type: item.type, properties: {pathPosition: item.pathPosition}}));\n                } else if (item) {\n                    props.scene.translate(item, x, y);\n                    store.dispatch(updateItem({id: item.id, type: item.type, properties: {x: item.x, y: item.y}}));\n                }\n            }\n            let ds = store.getState().canvas.directSelected;\n            if (ds) {\n                let itm = props.scene.getItem(ds);\n                if (itm.parent.type === \"path\") {\n                    itm._doTranslate(x, y);\n                    store.dispatch(updateItem({id: itm.parent.id, type: itm.parent.type, properties: {x: itm.parent.x, y: itm.parent.y}}));\n                }\n            }\n        }\n\n        document.addEventListener('keydown', (e) => {\n            // e.preventDefault();\n            // e.stopPropagation();\n            switch(e.key) {\n                case \"Delete\": {\n                    let s = store.getState().canvas.selected;\n                    if (s && s.length > 0) {\n                        for (let i = s.length - 1; i >= 0; i--) {\n                            let item = props.scene.getItem(s[i]);\n                            if (item && item.parent === props.scene) {\n                                store.dispatch(select([]));\n                                props.scene.removeItem(item);\n                                store.dispatch(deleteItems([item].map(d => d.id)));\n                            }\n                        }\n                    }\n                    break;\n                }\n                case \"ArrowLeft\": {\n                    translateByKey(-5, 0);\n                    break;\n                }\n                case \"ArrowRight\": {\n                    translateByKey(5, 0);\n                    break;\n                }\n                case \"ArrowUp\": {\n                    translateByKey(0, -5);\n                    break;\n                }\n                case \"ArrowDown\": {\n                    translateByKey(0, 5);\n                    break;\n                }\n                case \"Escape\": {\n                    if (store.getState().tool.activeTool === \"Pen\") {\n                        PolylineTool.finish(props.scene, props.datasets, props.renderer, props.undoStack);\n                        store.dispatch(activateTool(\"Select\"));\n                    }\n                    break;\n                }\n                // += - zoom in\n\t\t\t\tcase \"+\":\n                case \"=\":\n                    if(e.ctrlKey || e.metaKey) {\n                        e.preventDefault();\n                        let z = Math.min(400, store.getState().canvas.zoomLevel + 10);\n                        store.dispatch(setZoomLevel(z));\n                    }\n                    break;\n                // - - zoom out\n                case \"-\":\n                    if(e.ctrlKey || e.metaKey) {\n                        e.preventDefault();\n                        let z = Math.max(20, store.getState().canvas.zoomLevel - 10);\n                        store.dispatch(setZoomLevel(z));\n                    }\n                    break;\n                case \"0\":\n                    if(e.ctrlKey || e.metaKey) {\n                        e.preventDefault();\n                        resetViewBox();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    },[props.scene, props.datasets, props.renderer, props.undoStack])\n\n    switch(props.type) {\n        case \"canvas\":\n            return (\n                <canvas className=\"canvas\" id=\"canvas\"></canvas>\n            );\n        default:\n        case \"svg\":\n            return (\n                <svg className=\"canvas\" id=\"canvas\"></svg>\n            );\n    }\n}\n\nexport default connect(mapStateToProps)(Canvas);;","import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as d3 from 'd3';\nimport store from \"../store\";\nimport { updateItem, updateScale } from \"../canvasSlice\";\nimport { getSVGPathData } from \"../Util\";\nimport { getPeersInScene } from \"mascot-vis\";\n\nconst getHandlePosition = {\n    nw: (b) => ({x: b.left, y: b.top}),\n    n: (b) => ({x: b.x, y: b.top}),\n    ne: (b) => ({x: b.right, y: b.top}),\n    e: (b) => ({x: b.right, y: b.y}),\n    se: (b) => ({x: b.right, y: b.bottom}),\n    s: (b) => ({x: b.x, y: b.bottom}),\n    sw: (b) => ({x: b.left, y: b.bottom}),\n    w: (b) => ({x: b.left, y: b.y})\n}\n\nlet axisHandlePosition = undefined;\nconst showAxisHandle = (scene, axis) => {\n    if (!axis) return;\n    const h = d3.select(\"#axisHandle\").style(\"visibility\", \"visible\");\n    h.select(\"rect\").call(d3.drag()\n        .on(\"start\", function(e) {\n            if (axis.channel === \"x\" || axis.channel === \"width\") {\n                axisHandlePosition = axis.bounds.middle;\n            } else if (axis.channel === \"y\" || axis.channel === \"height\") {\n                axisHandlePosition = axis.bounds.center;\n            }\n        })\n        .on(\"end\", function(e) {\n            axisHandlePosition = undefined;\n        })\n        .on(\"drag\", function(e) {\n            e.sourceEvent.stopPropagation();\n            let dir = axis.isFlipped ? -1 : 1;\n            const scale = axis.encoding.scale;\n            if (axis.channel === \"x\" || axis.channel === \"width\") {\n                let newRE = scale.rangeExtent + e.dx * dir;\n                if (newRE <= 0) {\n                    if (scale.getEncodedChannels().indexOf(\"width\") < 0)\n                        scale.isFlipped = !scale.isFlipped;\n                    else\n                        return;\n                }\n                axis.encoding.scale.rangeExtent = newRE;\n                axis.autoUpdateTicks();\n            } else if (axis.channel === \"y\" || axis.channel === \"height\") {\n                let newRE = scale.rangeExtent - e.dy * dir;\n                if (newRE <= 0) {\n                    if (scale.getEncodedChannels().indexOf(\"height\") < 0)\n                        scale.isFlipped = !scale.isFlipped;\n                    else\n                        return;\n                }\n                axis.encoding.scale.rangeExtent = newRE;\n                axis.autoUpdateTicks();\n            }\n            store.dispatch(updateScale({id: axis.encoding.scale.id, type: axis.encoding.scale.type, axis: axis.id}));\n        }));\n    updateAxisHandlePosition(axis);\n}\n\nconst updateAxisHandlePosition = (axis) => {\n    if (!axis) return;\n    const h = d3.select(\"#axisHandle\");\n    let x1, y1, x2, y2, x, y, wd, ht, tx, ty;\n    switch (axis.channel) {\n        case \"x\":\n        case \"width\":\n            x1 = axis.bounds.left;\n            y1 = axisHandlePosition ? axisHandlePosition : axis.bounds.middle;\n            x2 = axis.bounds.right;\n            y2 = y1;\n            wd = 45;\n            ht = 16;\n            x = axis.isFlipped ? axis.bounds.left : axis.bounds.right - wd;\n            y = y1 - ht/2;\n            tx = x + 5;\n            ty = y + ht/2;\n            h.select(\"text\").style(\"writing-mode\", \"lr\")\n            break;\n        case \"y\":\n        case \"height\":\n            x1 = axisHandlePosition ? axisHandlePosition : axis.bounds.center;\n            y1 = axis.bounds.top;\n            x2 = x1;\n            y2 = axis.bounds.bottom;\n            wd = 16;\n            ht = 45;\n            x = x1 - wd/2;\n            y = axis.isFlipped ? axis.bounds.bottom - ht : axis.bounds.top;\n            tx = x1 + 3;\n            ty = y + 5;\n            h.select(\"text\").style(\"writing-mode\", \"tb\").style(\"glyph-orientation-vertical\", 0);\n            break;\n        default:\n            break;\n    }\n    h.select(\"line\").attr(\"x1\", x1).attr(\"x2\", x2).attr(\"y1\", y1).attr(\"y2\", y2);\n    h.select(\"rect\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", wd).attr(\"height\", ht).attr(\"rx\", 6).attr(\"ry\", 6);\n    h.select(\"text\").text(axis.encoding.scale.rangeExtent.toFixed(0) + \"px\").attr(\"x\", tx).attr(\"y\", ty);\n}\n\nconst hideAxisHandle = () => {\n    d3.select(\"#axisHandle\").style(\"visibility\", \"hidden\");\n}\n\nconst redrawRect = (b, styles, rect) => {\n    const attrs = {\n        \"x\": b.left,\n        \"y\": b.top, \n        \"width\": b.width,\n        \"height\": b.height\n    };\n    for (let a in attrs)\n        rect.attr(a, attrs[a]);\n    for (let s in styles)\n        rect.style(s, styles[s]);\n};\n\nconst redrawSelection = (selected, scene) => {\n    //clear selection first\n    d3.select(\"#selectionUI\").selectAll(\"circle\").style(\"visibility\", \"hidden\");\n    d3.select(\"#handleG\").style(\"visibility\", \"hidden\");\n    d3.selectAll(\".openGroup\").style(\"visibility\", \"hidden\");\n    d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n    d3.select(\"#selectPeerOutline\").style(\"visibility\", \"hidden\");\n    d3.select(\"#boundsOutline\").style(\"visibility\", \"hidden\");\n    \n    if (selected.length === 1) {\n        const itm = scene.getItem(selected[0]);\n        if (!itm) return;\n        //draw peer outline\n        let peers = getPeersInScene(itm);\n        if (peers.length > 1) {\n            let peerPathData = getSVGPathData(peers, 2);\n            d3.select(\"#selectPeerOutline\").style(\"visibility\", \"visible\").attr(\"d\", peerPathData);\n        }\n\n        //draw item outline\n        let styles, b;\n        if (itm.type === \"collection\" || itm.type === \"axis\" || itm.type === \"legend\") {\n            styles = {\"stroke\": \"#1ecb40\", \"stroke-dasharray\": \"5,5\", \"stroke-width\": 2, \"fill\": \"none\"};\n        } else {\n            styles = {\"stroke\": \"#1592e6\", \"stroke-dasharray\": \"none\", \"stroke-width\": 1.5,  \"fill\": \"none\"};\n        }\n        if (itm.type === \"legend\") {\n            b = itm.bounds.clone();\n            b.left -= 10;\n            b.top -= 10;\n            b.width += 20;\n            b.height += 20;\n        } else {\n            b = itm.bounds;\n        }\n        if (itm.type === \"path\" || itm.type === \"area\" || itm.type === \"polygon\" || itm.type === \"arc\" || itm.type === \"pie\") {\n            d3.select(\"#boundsOutline\").style(\"visibility\", \"hidden\");\n            d3.select(\"#pathOutline\").style(\"visibility\", \"visible\");\n            d3.select(\"#pathSegments\").attr(\"d\", itm.getSVGPathData());\n            d3.select(\"#pathVertices\").attr(\"d\", getSVGPathData(itm.vertices, 2));\n        } else {\n            d3.select(\"#boundsOutline\").style(\"visibility\", \"visible\");\n            d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n            //d3.select(\"#itemOutline\").style(\"visibility\", \"visible\");\n            redrawRect(b, styles, d3.select(\"#boundsOutline\"));\n        }\n\n        //draw parents\n        d3.selectAll(\".openGroup\").style(\"visibility\", \"hidden\");\n        let parent = itm.parent, cnt = 1;\n        const parentStyles = {\"stroke\": \"#1ecb40\", \"stroke-width\": 4, \"fill\": \"none\", \"opacity\": 0.15, \"visibility\": \"visible\"};\n        while (parent && parent.type !== \"scene\") {\n            redrawRect(parent.bounds, parentStyles, d3.select(\"#openGroup\"+cnt));\n            parent = parent.parent;\n            cnt += 1;\n        }\n\n        //draw handles\n        d3.select(\"#handleG\").style(\"visibility\", \"visible\");\n        const g = d3.select(\"#selectionUI\"), resizable = [\"rect\", \"circle\", \"line\", \"pointText\"];\n        if (resizable.indexOf(itm.type) < 0) {\n            g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n            return;\n        } \n        \n        for (let h of handles) {\n            let p = getHandlePosition[h](b);\n            g.select(\".\" + h).style(\"cursor\", h+\"-resize\").attr(\"cx\", p.x).attr(\"cy\", p.y).style(\"visibility\", \"visible\");\n        }\n\n        if (itm.type === \"line\") {\n            if (itm.bounds.width === 0) {\n                g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n                g.select(\".n\").style(\"visibility\", \"visible\");\n                g.select(\".s\").style(\"visibility\", \"visible\");\n            }\n            if (itm.bounds.height === 0) {\n                g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n                g.select(\".e\").style(\"visibility\", \"visible\");\n                g.select(\".w\").style(\"visibility\", \"visible\");\n            }\n        } else if (itm.type === \"pointText\") {\n            //todo: show se anchor\n            g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n            g.select(\".se\").style(\"visibility\", \"visible\");\n        } \n    } else if (selected.length > 1) {\n        const itms = selected.map(d => scene.getItem(d));\n        d3.select(\"#handleG\").style(\"visibility\", \"visible\");\n        let styles = {\"stroke\": \"#1592e6\", \"stroke-dasharray\": \"none\", \"stroke-width\": 1.5,  \"fill\": \"none\", \"visibility\": \"visible\"};\n        let bounds = itms[0].bounds.clone();\n        for (let i = 1; i < itms.length; i++)\n            bounds = bounds.union(itms[i].bounds);\n        redrawRect(bounds, styles, d3.select(\"#boundsOutline\"));\n        d3.select(\"#selectPeerOutline\").style(\"visibility\", \"hidden\");\n        d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n    }\n}\n\nconst redrawDirectSelection = (directSelected, scene) => {\n    d3.selectAll(\".directSelectPreview\").style(\"visibility\", \"hidden\");\n    if (directSelected) {\n        const itm = scene.getItem(directSelected);\n        if (!itm) {\n            d3.selectAll(\".directSelected\").style(\"visibility\", \"hidden\");\n            d3.select(\"#directSelectPeerOutline\").style(\"visibility\", \"hidden\");\n            return;\n        }\n        //draw peer outline\n        let peers = getPeersInScene(itm);\n        if (peers.length > 1) {\n            let peerPathData = getSVGPathData(peers, 4);\n            d3.select(\"#directSelectPeerOutline\").style(\"visibility\", \"visible\").attr(\"d\", peerPathData);\n        }\n\n        const styles = {\"stroke\": \"#1592e6\", \"stroke-width\": 2, \"fill\": \"none\", \"visibility\": \"visible\"};\n        if (itm.type === \"segment\") {\n            let seg = d3.select(\"#segment\").attr(\"x1\", itm.vertex1.x).attr(\"y1\", itm.vertex1.y)\n                        .attr(\"x2\", itm.vertex2.x).attr(\"y2\", itm.vertex2.y);\n            for (let s in styles)\n                seg.style(s, styles[s]);\n            d3.select(\"#vertex\").style(\"visibility\", \"hidden\");\n        } else {\n            let b = {left: itm.x - 2, top: itm.y - 2, width: 4, height: 4};\n            redrawRect(b, styles, d3.select(\"#vertex\"));\n            d3.select(\"#segment\").style(\"visibility\", \"hidden\");\n        } \n    } else {\n        d3.selectAll(\".directSelected\").style(\"visibility\", \"hidden\");\n        d3.select(\"#directSelectPeerOutline\").style(\"visibility\", \"hidden\");\n    }\n}\n\nconst redrawDirectSelectPreview = (directSelected, scene) => {\n    d3.selectAll(\".directSelectPreview\").style(\"visibility\", \"hidden\");\n    if (directSelected) {\n        const itm = scene.getItem(directSelected);\n        if (!itm) return;\n        const styles = {\"stroke\": \"#79AFE0\", \"stroke-width\": 2, \"fill\": \"none\", \"visibility\": \"visible\"};\n        if (itm.type === \"segment\") {\n            let seg = d3.select(\"#segmentPreview\").attr(\"x1\", itm.vertex1.x).attr(\"y1\", itm.vertex1.y)\n                        .attr(\"x2\", itm.vertex2.x).attr(\"y2\", itm.vertex2.y);\n            for (let s in styles)\n                seg.style(s, styles[s]);\n        } else {\n            let b = {left: itm.x - 3, top: itm.y - 3, width: 6, height: 6};\n            redrawRect(b, styles, d3.select(\"#vertexPreview\"));\n        } \n    }\n}\n\nconst redrawGridGaps = (selected, scene) => {\n    if (selected.length === 1) {\n        const itm = scene.getItem(selected[0]);\n        if (itm && itm.type === \"collection\" && itm.layout && itm.layout.type === \"grid\") {\n            const layout = itm.layout, cb = layout.cellBounds, numCols = layout.numCols, numRows = layout.numRows;\n            let topCellTop = Math.min(...cb.map(d => d.top)), leftCellLeft = Math.min(...cb.map(d => d.left));\n            let data = [];\n            for (let i = 0; i < numCols - 1; i++) {\n                // let x = layout.colGap < 0 ? cb[i].right + layout.colGap : cb[i].right;\n                // data.push({x: x, y: cb[i].top, width: Math.abs(layout.colGap), height: itm.bounds.height, type: \"c\"});\n                data.push({x: leftCellLeft + cb[0].width + i * (cb[0].width + layout.colGap), y: topCellTop, width: Math.abs(layout.colGap), height: itm.bounds.height, type: \"c\"});\n            }\n            for (let i = 0; i < numRows - 1; i++) {\n                // let y = layout.rowGap < 0 ? cb[i * numCols].bottom + layout.rowGap : cb[i * numCols].bottom;\n                // data.push({x: cb[0].left, y: y, width: itm.bounds.width, height: Math.abs(layout.rowGap), type: \"r\"});\n                data.push({x: leftCellLeft, y: topCellTop + cb[0].height + i * (cb[0].height + layout.rowGap) , width: itm.bounds.width, height: Math.abs(layout.rowGap), type: \"r\"});\n            }\n            let rects = d3.select(\"#gridGaps\").style(\"visibility\", \"visible\").selectAll(\"rect\").data(data);\n            rects.enter().append(\"rect\").merge(rects)\n                .attr(\"x\", d => d.x).attr(\"y\", d => d.y)\n                .attr(\"width\", d => d.width).attr(\"height\", d => d.height)\n                .style(\"fill\", \"pink\").style(\"opacity\", 0.2)\n                .style(\"cursor\", d => d.type === \"r\" ? \"ns-resize\" : \"ew-resize\")\n                .call(d3.drag().on(\"drag\", function(e) {\n                    e.sourceEvent.stopPropagation();\n                    const type = d3.select(this).datum().type;\n                    let o = {}, g = type === \"r\" ? \"rowGap\" : \"colGap\", d = type === \"r\" ? e.dy : e.dx;\n                    o[g] = itm.layout[g] + d;\n                    scene.setProperties(itm.layout, o);\n                    store.dispatch(updateItem({id: selected[0], type: itm.type, properties: o}));\n                }))\n                ;\n            rects.exit().remove();\n        } else {\n            d3.select(\"#gridGaps\").style(\"visibility\", \"hidden\");\n        }\n    } else {\n        d3.select(\"#gridGaps\").style(\"visibility\", \"hidden\");\n    }\n}\n\nvar resizeX, resizeY;\n\nconst resizeStarted = (e) => {\n    resizeX = e.x;\n    resizeY = e.y;\n};\n\nconst resizing = function(e, h, selected, scene) {\n    let b = getResizeBounds(h, selected, e.x, e.y, scene);\n    let g = d3.select(\"#handleG\");\n    d3.select(\"#boundsOutline\").attr(\"x\", b.left).attr(\"y\", b.top).attr(\"width\", b.width).attr(\"height\", b.height);\n    for (let h of handles) {\n        let p = getHandlePosition[h](b);\n        g.select(\".\" + h).attr(\"cx\", p.x).attr(\"cy\", p.y);\n    }\n};\n\nconst findItemToSnap = function(scene, selected, o, pos) {\n    let children = scene.children.filter(d => d !== selected && d.type !== \"axis\" && d.type !== \"legend\" && d.type !== \"gridlines\");\n    let candidates = [], anchors = o === \"x\" ? [\"left\", \"right\", \"center\"] : [\"top\", \"bottom\", \"middle\"];\n    for (let c of children) {\n        for (let a of anchors) {\n            candidates.push({item: c, anchor: a});\n        }\n    }\n    candidates.sort((a,b) => Math.abs(a.item.bounds[a.anchor] - pos) - Math.abs(b.item.bounds[b.anchor] - pos));\n    return candidates[0];\n}\n\nconst resizeEnded = function(e, h, selected, scene) {\n    let b = getResizeBounds(h, selected, e.x, e.y, scene);\n    let toChange;\n    if (selected.type === \"rect\" || selected.type === \"line\") {\n        toChange = {width: b.width, height: b.height, xRef: (h.indexOf(\"e\") < 0 ? \"right\" : \"left\"), yRef: (h.indexOf(\"n\") < 0 ? \"top\" : \"bottom\")};\n    } else if (selected.type === \"circle\") {\n        toChange = {radius: Math.max(b.width, b.height)/2, xRef: (h.indexOf(\"e\") < 0 ? \"right\" : \"left\"), yRef: (h.indexOf(\"n\") < 0 ? \"top\" : \"bottom\")};\n    } else if (selected.type === \"pointText\") {\n        let fs = Math.floor(parseInt(selected.fontSize) * b.width/selected.bounds.width);\n        fs = Math.max(4, fs);\n        toChange = {\"fontSize\": fs+\"px\"}\n    }\n\n    if (toChange) {\n        scene.setProperties(selected, toChange);\n        store.dispatch(updateItem({id: selected.id, type: selected.type, properties: toChange}));\n    }\n};\n\nconst getResizeBounds = (h, selected, ex, ey, scene) => {\n    let itmBounds = selected.bounds, b = {\n        top: itmBounds.top,\n        height: itmBounds.height,\n        left: itmBounds.left,\n        width: itmBounds.width\n    };\n   \n    let t = 5, hc = (h !== \"n\" && h !== \"s\") ? findItemToSnap(scene, selected, \"x\", ex) : undefined, \n            vc = (h !== \"e\" && h !== \"w\") ? findItemToSnap(scene, selected, \"y\", ey) : undefined;\n    let dx = ex - resizeX, dy = ey - resizeY;\n    if (hc && Math.abs(hc.item.bounds[hc.anchor] - ex) <= t) {\n        dx = hc.item.bounds[hc.anchor] - resizeX;\n        d3.select(\"#hGuide\").style(\"visibility\", \"visible\").attr(\"x1\", hc.item.bounds[hc.anchor]).attr(\"x2\", hc.item.bounds[hc.anchor])\n            .attr(\"y1\", Math.min(hc.item.bounds.top, selected.bounds.top) - 10).attr(\"y2\", Math.max(hc.item.bounds.bottom, selected.bounds.bottom) + 10);\n    } else {\n        d3.select(\"#hGuide\").style(\"visibility\", \"hidden\");\n    }\n    if (vc && Math.abs(vc.item.bounds[vc.anchor] - ey) <= t) {\n        dy = vc.item.bounds[vc.anchor] - resizeY;\n        d3.select(\"#vGuide\").style(\"visibility\", \"visible\").attr(\"y1\", vc.item.bounds[vc.anchor]).attr(\"y2\", vc.item.bounds[vc.anchor])\n            .attr(\"x1\", Math.min(vc.item.bounds.left, selected.bounds.left) - 10).attr(\"x2\", Math.max(vc.item.bounds.right, selected.bounds.right) + 10);\n    } else {\n        d3.select(\"#vGuide\").style(\"visibility\", \"hidden\");\n    }\n\n    if (h.indexOf(\"s\") >= 0) {\n        if (dy < -itmBounds.height + 1)\n            dy = -itmBounds.height + 1;\n        b.height += dy;\n    } else if (h.indexOf(\"n\") >= 0) {\n        if (dy > itmBounds.height - 1)\n            dy = itmBounds.height - 1;\n        b.height -= dy;\n        b.top += dy;   \n    }\n\n    if (h.indexOf(\"e\") >= 0) {\n        if (dx < -itmBounds.width + 1)\n            dx = -itmBounds.width + 1;\n        b.width += dx;\n    } else if (h.indexOf(\"w\") >= 0) {\n        if (dx > itmBounds.width - 1)\n            dx = itmBounds.width - 1;\n        b.left += dx;\n        b.width -= dx;\n    }\n\n    b.right = b.left + b.width;\n    b.bottom = b.top + b.height;\n    b.x = (b.left + b.right)/2;\n    b.y = (b.top + b.bottom)/2;\n\n    return b;\n}\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    directSelected: state.canvas.directSelected,\n    directSelectPreview: state.canvas.directSelectPreview,\n    itemUpdated: state.canvas.itemUpdated,\n    axisHandleVisible: state.canvas.axisHandleVisible,\n    scaleUpdated: state.canvas.scaleUpdated,\n    rectSelectRegion: state.canvas.rectSelectRegion\n});\n\nconst handles = [\"nw\", \"n\", \"ne\", \"w\", \"sw\", \"s\", \"se\", \"e\"];\n\nfunction SelectionUI(props) {\n\n    useEffect(() => {\n        if (props.selected.length === 0) return;\n        let selected = props.scene.getItem(props.selected[0]);\n        d3.select(\"#selectionUI\").selectAll(\"circle\").style(\"stroke\", \"#1592e6\").style(\"fill\", \"white\")\n            .call(d3.drag().on(\"start\", resizeStarted).on(\"drag\", function(e) { resizing(e, d3.select(this).attr(\"class\"), selected, props.scene) })\n            .on(\"end\", function(e) {\n                resizeEnded(e, d3.select(this).attr(\"class\"), selected, props.scene);\n            }))\n    }, [props.scene, props.selected]);\n\n    useEffect(() => {\n        redrawSelection(props.selected, props.scene);\n        redrawDirectSelection(props.directSelected, props.scene);\n        redrawGridGaps(props.selected, props.scene);\n        d3.selectAll(\".smartGuide\").style(\"visibility\", \"hidden\");\n    }, [props.scene, props.selected, props.directSelected, props.itemUpdated, props.scaleUpdated]);\n\n    useEffect(() => {\n        redrawDirectSelectPreview(props.directSelectPreview, props.scene);\n    }, [props.directSelectPreview, props.scene])\n\n    useEffect(() => {\n        if (props.axisHandleVisible.visible)\n            showAxisHandle(props.scene, props.scene.getItem(props.axisHandleVisible.axis));\n        else\n            hideAxisHandle();\n    }, [props.scene, props.axisHandleVisible]);\n\n    useEffect(() => {\n        if (props.rectSelectRegion.width === 0 || props.rectSelectRegion.height === 0)\n            d3.select(\"#rectSelectRegion\").style(\"visibility\", \"hidden\");\n        const styles = {\"stroke\": \"#ccc\", \"stroke-width\": 2, \"fill\": \"none\", \"stroke-dasharray\": \"5,5\", \"opacity\": 1, \"visibility\": \"visible\"};\n        redrawRect(props.rectSelectRegion, styles, d3.select(\"#rectSelectRegion\"));\n    }, [props.rectSelectRegion]);\n\n    useEffect(() => {\n        if (props.scaleUpdated.axis)\n            updateAxisHandlePosition(props.scene.getItem(props.scaleUpdated.axis));\n    }, [props.scene, props.scaleUpdated]);\n\n    return (\n        <g id=\"selectionUI\">\n            <rect id=\"openGroup1\" className=\"openGroup\"></rect>\n            <rect id=\"openGroup2\" className=\"openGroup\"></rect>\n            <rect id=\"openGroup3\" className=\"openGroup\"></rect>\n            <rect id=\"openGroup4\" className=\"openGroup\"></rect>\n            <path id=\"selectPeerOutline\" style={{\"stroke\": \"#60bdf0\", \"strokeWidth\": 1,  \"fill\": \"none\"}}></path>\n            <path id=\"directSelectPeerOutline\" style={{\"stroke\": \"#60bdf0\", \"strokeWidth\": 1,  \"fill\": \"none\"}}></path>\n            <rect id=\"boundsOutline\"></rect>\n            <g id=\"handleG\">\n                {handles.map(h => <circle key={h} className={h} r=\"4\"></circle>)}\n            </g>\n            <g id=\"axisHandle\">\n                <line style={{strokeWidth:\"2px\", stroke:\"#1ecb40\"}}></line>\n                <rect style={{fill:\"#1ecb40\"}}></rect>\n                <text style={{fill:\"white\", \"fontSize\": \"11px\", \"pointerEvents\": \"none\", fontWeight: \"bold\", \"alignmentBaseline\": \"middle\", \"dominantBaseline\": \"middle\"}}></text>\n            </g>\n            <g id=\"pathOutline\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": 2,  \"fill\": \"none\"}}>\n                <path id=\"pathSegments\"></path>\n                <path id=\"pathVertices\"></path>\n            </g>\n            <g id=\"gridGaps\">\n                <rect></rect>\n            </g>\n            <rect id=\"rectSelectRegion\"></rect>\n            <line id=\"segment\" className=\"directSelected\"></line>\n            <rect id=\"vertex\" className=\"directSelected\"></rect>\n            <line id=\"segmentPreview\" className=\"directSelectPreview\"></line>\n            <rect id=\"vertexPreview\" className=\"directSelectPreview\"></rect>\n            <line id=\"hGuide\" className=\"smartGuide\" style={{strokeWidth:\"2px\", stroke:\"#f50088\", strokeDasharray: \"5,5\"}}></line>\n            <line id=\"vGuide\" className=\"smartGuide\" style={{strokeWidth:\"2px\", stroke:\"#f50088\", strokeDasharray: \"5,5\"}}></line>\n        </g>\n    )\n}\n\nexport default connect(mapStateToProps)(SelectionUI);\nexport {showAxisHandle, hideAxisHandle};","import store from \"../store\";\nimport { getPositionInScene } from \"../Util\";\nimport * as msc from \"mascot-vis\";\nimport { select, toggleAxisHandle, customizeColorPalette, rectSelect } from \"../canvasSlice\";\nimport { updateItem } from \"../canvasSlice\";\n\nvar clickHeld = false, rectRegion = false, dragging = false, activeItem = null, downX, downY, itemX = {}, itemY = {};\n\nexport const hitTest = (e, scene) => {\n    const p = getPositionInScene(e.clientX, e.clientY);\n    const cg = store.getState().canvas.selected;\n    //if nothing is selected, find target among scene's children\n    if (cg.length === 0) {\n        return msc.hitTest(scene, p[0], p[1]);\n    }\n    const sel = scene.getItem(cg[0]);\n    if (sel.type === \"axis\" || sel.type === \"legend\") {\n        return msc.hitTest(scene, p[0], p[1]);\n    } else {\n        //if selected is leaf, find target among its parent's children\n        //this is useful for selecting a sibling of the current selection\n        let itm = sel.parent;\n        while (itm) {\n            let hit = msc.hitTest(itm, p[0], p[1]);\n            if (hit) return hit;\n            else itm = itm.parent;\n        }\n        return null;\n    }\n}\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    downX = e.clientX;\n    downY = e.clientY;\n    let itm = hitTest(e, scene);\n    if (itm !== null && itm.type === \"legend\") {\n        if (itm.channel.indexOf(\"Color\") > 0 && itm.fieldType === \"string\") {\n            const p = getPositionInScene(e.clientX, e.clientY);\n            const mark = itm.pathHitTest(p[0], p[1]);\n            if (mark !== null) {\n                //customize categorical color mapping\n                const v = mark.dataScope.getFieldValue(\"category\");\n                store.dispatch(customizeColorPalette({legend: itm.id, value: v}));\n                return;\n            }\n        }\n    }\n\n    store.dispatch(customizeColorPalette({legend: null, value: null}));\n    activeItem = itm;\n    if (itm === null && e.button === 0) {\n        rectRegion = true;\n    } else if (itm !== null) {\n        //let items = store.getState().canvas.selected.length > 0 ? store.getState().canvas.selected.map(d => scene.getItem(d)) : [itm];\n        let items = store.getState().canvas.selected.map(d => scene.getItem(d));\n        items.push(itm);\n        for (let item of items) {\n            itemX[item.id] = item.type === \"axis\" && (item.channel === \"y\" || item.channel === \"height\") ? item.pathX : item.x;\n            itemY[item.id] = item.type === \"axis\" && (item.channel === \"x\" || item.channel === \"width\") ? item.pathY : item.y;\n        }\n        \n    }\n}\n\nconst dragItem = (item, scene, newX, newY, dx, dy) => {\n    if (item.type === \"axis\") {\n        store.dispatch(toggleAxisHandle({visible: false}));\n        if (item.channel === \"x\" || item.channel === \"width\") {\n            item.pathY = newY;\n        } else if (item.channel === \"y\" || item.channel === \"height\") {\n            item.pathX = newX;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: {pathPosition: item.pathPosition}}));\n    } else {\n        scene.translate(item, dx, dy);\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: {x: item.x, y: item.y}}));\n    }\n}\n\nexport const mouseMove = (e, scene, renderer) => {\n\n    if (!clickHeld) { //hovering\n        const item = hitTest(e, scene);\n        if (item && item.type === \"axis\" && item.encoding) {\n            store.dispatch(toggleAxisHandle({axis: item.id, visible: true}));\n        } else {\n            store.dispatch(toggleAxisHandle({visible: false}));\n        }\n        return;\n    }\n \n    //clickHeld\n    if (rectRegion) { //rect select\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: wd, height: ht}));\n    } else if (activeItem) { //dragging\n        let sel = store.getState().canvas.selected, itmInSelection = sel.indexOf(activeItem.id) >= 0;\n        if (sel.length === 0 || !itmInSelection) {\n            store.dispatch(select([activeItem.id]));\n            dragging = true;\n            dragItem(activeItem, scene, itemX[activeItem.id] + e.clientX - downX, itemY[activeItem.id] + e.clientY - downY, itemX[activeItem.id] + e.clientX - downX - activeItem.x, itemY[activeItem.id] + e.clientY - downY - activeItem.y);\n        } else if (itmInSelection) {\n            dragging = true;\n            for (let s of store.getState().canvas.selected) {\n                const item = scene.getItem(s);\n                dragItem(item, scene, itemX[item.id] + e.clientX - downX, itemY[item.id] + e.clientY - downY, itemX[item.id] + e.clientX - downX - item.x, itemY[item.id] + e.clientY - downY - item.y);\n            }\n        } \n        \n        // const s1 = store.getState().canvas.selected[0];\n        // if (!s1) return;\n    }\n}\n\nexport const mouseUp = (e, scene) => {\n    if (rectRegion) {\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: 0, height: 0}));\n        let r = {left: left, top: top, width: wd, height: ht, right: left + wd, bottom: top + ht};\n        let itms = msc.rectHitTest(scene, r).map(d => d.id);\n        for (let m of itms) {\n            const itm = scene.getItem(m);\n            itemX[itm.id] = itm.type === \"axis\" && (itm.channel === \"y\" || itm.channel === \"height\") ? itm.pathX : itm.x;\n            itemY[itm.id] = itm.type === \"axis\" && (itm.channel === \"x\" || itm.channel === \"width\") ? itm.pathY : itm.y;\n        }\n        store.dispatch(select(itms));\n    } else if (!dragging) { //not dragging\n        if (activeItem === null)\n            store.dispatch(select([]));\n        else {\n            let sel = store.getState().canvas.selected, newSel;\n            let itmInSelection = sel.indexOf(activeItem.id) >= 0;\n            if (e.shiftKey && !itmInSelection) {\n                newSel = sel.concat(activeItem.id);\n            } else if (e.shiftKey && itmInSelection) {\n                newSel = sel.filter(d => d !== activeItem.id);\n                itemX[activeItem.id] = activeItem.type === \"axis\" && (activeItem.channel === \"y\" || activeItem.channel === \"height\") ? activeItem.pathX : activeItem.x;\n                itemY[activeItem.id] = activeItem.type === \"axis\" && (activeItem.channel === \"x\" || activeItem.channel === \"width\") ? activeItem.pathY : activeItem.y;\n            } else {\n                newSel = [activeItem.id];\n            }\n            store.dispatch(select(newSel));\n        }\n    }\n    \n    // else if (store.getState().canvas.selected.length > 0){\n    //     let item = scene.getItem(store.getState().canvas.selected[0]);\n    //     if (item === null && !dragging) {\n    //         store.dispatch(select([]));\n    //     }\n    // }\n    // let sel = store.getState().canvas.selected;\n    // let itmInSelection = sel.indexOf(itm.id) >= 0;\n    // if (e.shiftKey) {\n    //     store.dispatch(select(sel.concat(itm.id)));\n    // } else {\n    //     store.dispatch(select([itm.id]));\n    // }\n\n    clickHeld = false;\n    rectRegion = false;\n    dragging = false;\n    activeItem = null;\n    // itemX = {};\n    // itemY = {};\n}\n\nexport const doubleClick = (e, scene) => {\n    const cg = store.getState().canvas.selected;\n    if (cg.length> 0) {\n        const itm = scene.getItem(cg[0]);\n        if (itm && itm.type !== \"axis\" && itm.type !== \"legend\" && itm.children && itm.children.length > 0) {\n            const p = getPositionInScene(e.clientX, e.clientY);\n            let child = msc.hitTest(itm, p[0], p[1]);\n            if (child) {\n                store.dispatch(select([child.id]));\n            }\n        }\n    }\n}","import * as msc from \"mascot-vis\";\nimport { getPositionInScene } from \"../Util\";\nimport store from \"../store\";\nimport { directSelect, directSelectPreview, rectSelect, toggleAxisHandle } from \"../canvasSlice\";\n\nvar downX, downY, clickHeld = false;\n\nexport const mouseDown = (e, scene) => {\n    const p = getPositionInScene(e.clientX, e.clientY);\n    const item = msc.inMarkHitTest(scene, p[0], p[1], 4);\n    if (!item) {\n        downX = e.clientX;\n        downY = e.clientY;\n        clickHeld = true;\n    }\n}\n\nexport const mouseUp = (e, scene, renderer) => {\n    if (clickHeld) {\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: 0, height: 0}));\n        let r = {left: left, top: top, width: wd, height: ht, right: left + wd, bottom: top + ht};\n        let itm = msc.inMarkRectHitTest(scene, r, 2);\n        store.dispatch(directSelect(itm ? itm.id : null));\n        clickHeld = false;\n    } else {\n        const p = getPositionInScene(e.clientX, e.clientY);\n        const item = msc.inMarkHitTest(scene, p[0], p[1], 4);\n        store.dispatch(directSelect(item ? item.id : null));\n    }\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) {\n        const p = getPositionInScene(e.clientX, e.clientY);\n        const itm = msc.hitTest(scene, p[0], p[1]);\n        if (itm && itm.type === \"axis\" && itm.encoding) {\n            store.dispatch(toggleAxisHandle({axis: itm.id, visible: true}));\n        } else {\n            store.dispatch(toggleAxisHandle({visible: false}));\n                // const item = msc.inMarkHitTest(scene, p[0], p[1], 4);\n                // store.dispatch(directSelectPreview(item ? item.id : null));\n        }\n\n        const item = msc.inMarkHitTest(scene, p[0], p[1], 4);\n        store.dispatch(directSelectPreview(item ? item.id : null));\n\n        // const leafItem = msc.hitTestAll(scene, p[0], p[1]);\n        // if (leafItem && leafItem.type === \"path\" && !store.getState().canvas.directSelected) {\n        //     d3.select(\"#pathOutline\").style(\"visibility\", \"visible\");\n        //     d3.select(\"#pathSegments\").attr(\"d\", leafItem.getSVGPathData());\n        //     d3.select(\"#pathVertices\").attr(\"d\", getSVGPathData(leafItem.vertices, 2));\n        // } else {\n        //     d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n        // }\n    } else {\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: wd, height: ht}));\n    }\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, downX, downY, moved = false;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let rect = d3.select(\"#rectToolUI\");\n    rect.style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"rect\", {left: parseInt(rect.attr(\"x\")), top: parseInt(rect.attr(\"y\")), \n                width: parseInt(rect.attr(\"width\")), height: parseInt(rect.attr(\"height\"))});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY);\n    let x1 = downX, x2 = p[0], y1 = downY, y2 = p[1];\n    let x, y, width, height;\n    x = Math.min(x1, x2);\n    y = Math.min(y1, y2);\n    width = Math.abs(x1 - x2);\n    height = Math.abs(y1 - y2);\n    if (e.shiftKey) {\n        width = Math.min(width, height);\n        height = width;\n        x = x1 < x2 ? x1 : x1 - width;\n        y = y1 < y2 ? y1 : y1 - height;\n    }\n    d3.select(\"#rectToolUI\").style(\"visibility\", \"visible\").attr(\"x\", x).attr(\"y\", y)\n        .attr(\"width\", width).attr(\"height\", height);\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, moved = false, downX, downY;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let c = d3.select(\"#circleToolUI\");\n    c.style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"circle\", {x: parseInt(c.attr(\"cx\")), y: parseInt(c.attr(\"cy\")), \n                radius: parseInt(c.attr(\"r\")), fillColor: \"none\"});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY);\n    let x1 = downX, x2 = p[0], y1 = downY, y2 = p[1];\n    let cx = (x1 + x2)/2, cy = (y1 + y2)/2, r = Math.min(Math.abs(x1 - x2)/2, Math.abs(y1 - y2)/2);\n    d3.select(\"#circleToolUI\").style(\"visibility\", \"visible\").attr(\"cx\", cx).attr(\"cy\", cy)\n        .attr(\"r\", r);\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, moved = false, downX, downY;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let c = d3.select(\"#ringToolOuterUI\");\n    c.style(\"visibility\", \"hidden\");\n    d3.select(\"#ringToolInnerUI\").style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"ring\", {x: parseInt(c.attr(\"cx\")), y: parseInt(c.attr(\"cy\")), \n                outerRadius: parseInt(c.attr(\"r\")), innerRadius: parseInt(c.attr(\"r\")) * 2/3, fillColor: \"none\"});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY);\n    let x1 = downX, x2 = p[0], y1 = downY, y2 = p[1];\n    let cx = (x1 + x2)/2, cy = (y1 + y2)/2, r = Math.min(Math.abs(x1 - x2)/2, Math.abs(y1 - y2)/2);\n    d3.select(\"#ringToolOuterUI\").style(\"visibility\", \"visible\").attr(\"cx\", cx).attr(\"cy\", cy)\n        .attr(\"r\", r);\n    d3.select(\"#ringToolInnerUI\").style(\"visibility\", \"visible\").attr(\"cx\", cx).attr(\"cy\", cy)\n        .attr(\"r\", r * 2/3);\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, moved = false, downX, downY;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let c = d3.select(\"#lineToolUI\");\n    c.style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"line\", {x1: parseInt(c.attr(\"x1\")), y1: parseInt(c.attr(\"y1\")), \n            x2: parseInt(c.attr(\"x2\")), y2: parseInt(c.attr(\"y2\"))});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY), x2, y2;\n    if (e.shiftKey) {\n        let angle = Math.atan2(p[1] - downY, p[0] - downX) * 180 / Math.PI,\n            angleR = Math.round(angle/45) * 45 * Math.PI/180, \n            dist = Math.sqrt(Math.pow(p[1] - downY, 2) + Math.pow(p[0] - downX, 2));\n        x2 = downX + Math.cos(angleR) * dist;\n        y2 = downY + Math.sin(angleR) * dist;\n    } else {\n        x2 = p[0];\n        y2 = p[1];\n    }\n    d3.select(\"#lineToolUI\").style(\"visibility\", \"visible\").attr(\"x1\", downX).attr(\"y1\", downY)\n            .attr(\"x2\", x2).attr(\"y2\", y2);\n}","import store from './store';\nimport SelectionUI from \"./tools/SelectionUI\";\nimport * as SelectTool from \"./tools/SelectTool\";\nimport * as DirectSelectTool from \"./tools/DirectSelectTool\";\nimport * as RectTool from \"./tools/RectTool\";\nimport * as CircleTool from \"./tools/CircleTool\";\nimport * as RingTool from \"./tools/RingTool\";\nimport * as LineTool from \"./tools/LineTool\";\nimport * as PolylineTool from \"./tools/PolylineTool\";\nimport * as TextTool from \"./tools/TextTool\";\nimport { useEffect } from 'react';\nimport { pan } from './canvasSlice';\nimport { activateTool } from './toolSlice';\n\n\nexport default function EventLayer(props) {\n\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.mouseDown(e, props.scene);\n                break;\n            case \"Rect\":\n                RectTool.mouseDown(e, props.scene);\n                break;\n            case \"Ellipse\":\n                CircleTool.mouseDown(e, props.scene);\n                break;\n            case \"Ring\":\n                RingTool.mouseDown(e, props.scene);\n                break;\n            case \"DirectSelect\":\n                DirectSelectTool.mouseDown(e, props.scene);\n                break;\n            case \"Line\":\n                LineTool.mouseDown(e, props.scene);\n                break;\n            case \"Pen\":\n                PolylineTool.mouseDown(e, props.scene);\n                break;\n            default:\n                break;\n        }\n    };\n\n    // const handleMouseDown = useCallback((e) => {\n    //     console.log(\"mouse down\", e);\n    // }, []);\n\n    const handleMouseMove = (e) => {\n        e.preventDefault();\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.mouseMove(e, props.scene, props.renderer);\n                break;\n            case \"Rect\":\n                RectTool.mouseMove(e, props.scene);\n                break;\n            case \"Ellipse\":\n                CircleTool.mouseMove(e, props.scene);\n                break;\n            case \"Ring\":\n                RingTool.mouseMove(e, props.scene);\n                break;\n            case \"DirectSelect\":\n                DirectSelectTool.mouseMove(e, props.scene);\n                break;\n            case \"Line\":\n                LineTool.mouseMove(e, props.scene);\n                break;\n            case \"Pen\":\n                PolylineTool.mouseMove(e, props.scene);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleMouseUp = (e) => {\n        e.preventDefault();\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.mouseUp(e, props.scene);\n                break;\n            case \"Rect\":\n                RectTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                store.dispatch(activateTool(\"Select\"));\n                break;\n            case \"Ellipse\":\n                CircleTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                store.dispatch(activateTool(\"Select\"));\n                break;\n            case \"Ring\":\n                RingTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                store.dispatch(activateTool(\"Select\"));\n                break;\n            case \"Line\":\n                LineTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                store.dispatch(activateTool(\"Select\"));\n                break;\n            case \"DirectSelect\":\n                DirectSelectTool.mouseUp(e, props.scene);\n                break;\n            case \"Pen\":\n                PolylineTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Text\":\n                TextTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                store.dispatch(activateTool(\"Select\"));\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleDoubleClick = (e) => {\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.doubleClick(e, props.scene);\n                break;\n            default:\n                break;\n        }\n    };\n\n\n    useEffect(() => {\n        document.getElementById(\"evtLayer\").addEventListener('wheel', e => {\n            e.preventDefault();\n            store.dispatch(pan({\"x\": e.deltaX, \"y\": e.deltaY}));\n        })\n    }, []);\n\n    return (\n        <svg\n            id=\"evtLayer\"\n            className=\"canvas\"\n            onDoubleClick={handleDoubleClick}\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n        >\n            <SelectionUI scene={props.scene} renderer={props.renderer}></SelectionUI>\n            <rect id=\"rectToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></rect>\n            <circle id=\"circleToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></circle>\n            <line id=\"lineToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\"}}></line>\n            <path id=\"polylineToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\"}}></path>\n            <circle id=\"ringToolOuterUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></circle>\n            <circle id=\"ringToolInnerUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></circle>\n        </svg>\n    )\n\n}","import * as d3 from 'd3';\nimport { createNewItem } from '../canvasSlice';\nimport store from '../store';\nimport { addToStack, getPositionInScene } from '../Util';\nimport * as msc from \"mascot-vis\";\n\nexport const mouseDown = (e, scene) => {\n\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    const p = getPositionInScene(e.clientX, e.clientY);\n    let item = msc.hitTest(scene, p[0], p[1]);\n    if (!item && d3.select(\"#textElement\").style(\"visibility\") === \"visible\") {\n        d3.select(\"#textElement\").style(\"visibility\", \"hidden\");\n        renderer.render(scene);\n        return;\n    }\n    if (!item || item.type !== \"pointText\") {\n        addToStack(scene, datasets, undoStack);\n        item = scene.mark(\"text\", {x: e.clientX, y: e.clientY, text: \"\", anchor: [\"left\", \"top\"]});\n        store.dispatch(createNewItem(item.id));\n        renderer.render(scene);\n    }\n    //show editing input\n    d3.select(\"#textElement\").style(\"visibility\", \"visible\").style(\"left\", item.bounds.left+\"px\").style(\"top\", (item.bounds.top - 1)+\"px\")\n        .property(\"value\", item.text).style(\"font-family\", item.fontFamily)\n        .style(\"font-size\", item.fontSize+\"px\").style(\"font-weight\", item.fontWeight).style(\"height\", item.bounds.height)\n        .on(\"input\", (e) => { item.text = d3.select(\"#textElement\").property(\"value\")});\n    document.getElementById(\"textElement\").focus();\n}","import './css/ToolBar.css';\nimport { useDispatch } from \"react-redux\";\nimport { activateTool } from './toolSlice';\nimport { connect } from \"react-redux\";\nimport { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { canDensify, canDivide, canRepeat, canClassify } from 'mascot-vis';\nimport { Button, Modal } from \"react-bootstrap\";\nimport * as msc from \"mascot-vis\";\nimport { addToStack, getDefaultCollectionLayout } from './Util';\nimport store from \"./store\";\nimport { select, joinDataItem, directSelect, updateUndoStack, updateRedoStack, updateItem } from \"./canvasSlice\";\nimport {saveAs} from \"file-saver\";\n\nconst tools = [\"Select\", \"DirectSelect\", \"Line\", \"Rect\", \"Ellipse\", \"Ring\", \"Pen\", \"Text\"];\nconst arrangements = [\"Align Top\", \"Align Middle\", \"Align Bottom\", \"Align Left\", \"Align Center\", \"Align Right\"];\n\nconst mapStateToProps = state => ({\n    activeTool: state.tool.activeTool,\n    selected: state.canvas.selected,\n    undoStackChanged: state.canvas.undoStackChanged,\n    redoStackChanged: state.canvas.redoStackChanged\n});\n\nconst renderer = msc.renderer(\"svg\", \"preview\")\n    const scn = msc.scene();\n\n// const drawPreview = (selectedItem, cmd, dataset, field) => {\n//     if (d3.select(\"#preview\").empty())\n//         return;\n//     scn.removeAll();\n//     if (selectedItem && cmd && field && dataset) {\n//         let item = selectedItem.duplicate();\n//         scn.addChild(item);\n//         if (cmd === \"Repeat\") {\n//             let coll = scn.repeat(item, dataset, {field: field, layout: getDefaultCollectionLayout(item.bounds, dataset.getUniqueFieldValues(field).length)});\n//             let vb = [coll.bounds.left, coll.bounds.top, coll.bounds.width, coll.bounds.height].join(\" \");\n//             d3.select(\"#preview\").attr(\"viewBox\", vb);\n//         }\n//         renderer.clear();\n//         renderer.render(scn);\n//     }\n// }\n\nconst getUsableTbls = (item, datasets) => {\n    let t = {};\n    if (!item) return t;\n    if (item.dataScope) {\n        t[item.dataScope.dataTable.id] = item.dataScope.dataTable;\n    } else {\n        for (let d of datasets) {\n            t[d.id] = d;\n        }\n    }\n    return t;\n}\n\nconst getOrientations = function(type, cmd) {\n    if (cmd === \"Divide\") {\n        switch (type) {\n            case \"rect\":\n                return [\"horizontal\", \"vertical\"];\n            case \"circle\":\n                return [\"angular\", \"radial\"];\n            case \"ring\":\n                return [\"angular\"];\n            case \"pie\":\n                return [\"radial\"];\n            default:\n                return [\"horizontal\", \"vertical\"];\n        }\n    } else if (cmd === \"Densify\") {\n        return [\"horizontal\", \"vertical\"];\n    }\n}\n\nfunction ToolBar(props) {\n\n    const dispatch = useDispatch();\n    const inputFile = useRef(null);\n\n    const [showRepeatModal, setShowRepeatModal] = useState(false);\n    //const [selectedItem, setSelectedItem] = useState(null);\n    // const [datasetId, setDatasetId] = useState(null);\n    //const [dataset, setDataset] = useState(undefined);\n    const [cmd, setCmd] = useState(null);\n    const [tbls, setTbls] = useState({});\n    const [fields, setFields] = useState([]);\n    const [orientations, setOrientations] = useState([]);\n    const [joinMsg, setJoinMsg] = useState(\"\");\n    \n    const doJoin = () => {\n        setShowRepeatModal(false);\n        addToStack(props.scene, props.datasets, props.undoStack);\n        if (cmd === \"Repeat\") {\n            let item = props.scene.getItem(props.selected[0]);\n            if (props.selected.length > 1) {\n                let sels = props.selected.map(d => props.scene.getItem(d));\n                item = props.scene.glyph(...sels);\n            }\n            store.dispatch(select([]));\n            let dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n                field = d3.select(\"#fieldSelect\").property(\"value\");\n            let layout = getDefaultCollectionLayout(item, dataset.getUniqueFieldValues(field).length);\n            let coll = props.scene.repeat(item, dataset, {field: field, layout: layout});\n            if (coll.children.length < 25) {\n                if (layout.numCols === 1) {\n                    props.scene.axis(\"y\", field, {item: item});\n                } else if (layout.numRows === 1) {\n                    props.scene.axis(\"x\", field, {item: item});\n                }\n            }\n            props.scene.reCreateRelatedAxes(coll);\n            store.dispatch(select([coll.id]));\n            store.dispatch(joinDataItem({}));\n        } else if (cmd === \"Divide\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n                field = d3.select(\"#fieldSelect\").property(\"value\"), \n                o = d3.select(\"#orientationSelect\").property(\"value\");\n            let coll = props.scene.divide(item, dataset, {field: field, orientation: o});\n            // if (item.type === \"rect\" && coll.layout && !coll.parent.layout) {\n            if (coll.firstChild.type === \"rect\" && coll.layout && coll.parent.type === \"scene\") {\n                if (coll.layout.orientation === \"vertical\") {\n                    props.scene.axis(\"y\", field, {item: coll.firstChild});\n                } else if (coll.layout.orientation === \"horizontal\") {\n                    props.scene.axis(\"x\", field, {item: coll.firstChild});\n                }\n            }\n            props.scene.reCreateRelatedAxes(coll);\n            store.dispatch(select([coll.id]));\n            store.dispatch(joinDataItem({}));\n        } else if (cmd === \"Densify\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n                field = d3.select(\"#fieldSelect\").property(\"value\"), \n                o = d3.select(\"#orientationSelect\").property(\"value\");\n            let itm = props.scene.densify(item, dataset, {field: field, orientation: o});\n            store.dispatch(select([itm.id]));\n            store.dispatch(joinDataItem({}));\n        } else if (cmd === \"Classify\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let field = d3.select(\"#fieldSelect\").property(\"value\");\n            props.scene.classify(item, {field: field});\n            let layout = getDefaultCollectionLayout(item.firstChild.firstChild, Math.max(...item.children.map(d => d.children.length)));\n            props.scene.setProperties(item.firstChild, {layout: layout});\n            let layout2 = getDefaultCollectionLayout(item.firstChild, item.children.length);\n            props.scene.setProperties(item, {layout: layout2});\n            //item.layout = msc.layout(\"grid\", layout2);\n            if (item.children.length < 25) {\n                props.scene.axis(\"y\", field, {item: item.firstChild});\n            }\n            store.dispatch(select([item.id]));\n            store.dispatch(joinDataItem({}));\n        }\n    }\n\n    const switchTool = (t) => {\n        d3.select(\"#textElement\").style(\"visibility\", \"hidden\");\n        props.renderer.render(props.scene);\n        switch (t) {\n            case \"Rect\":\n            case \"Ellipse\":\n            case \"Line\":\n            case \"Ring\":\n            case \"Pen\":\n                dispatch(directSelect(null));\n                dispatch(select([]));\n                //d3.select(\"#evtLayer\").style(\"cursor\", \"crosshair\");\n                break;\n            case \"Select\":\n                // dispatch(select([]));\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                dispatch(directSelect(null));\n                break;\n            case \"DirectSelect\":\n                //d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                dispatch(select([]));\n                break;\n            default:\n                //d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                break;\n        }\n        dispatch(activateTool(t));\n    }\n\n    const repeatBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Repeat\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        let t = getUsableTbls(item, props.datasets);\n        // let options = d3.select(\"#datasetSelect\").selectAll(\"option\").data(Object.values(t));\n        // options.enter().append(\"option\").merge(options).property(\"key\", d => d.id).text(d => d.name);\n        // options.exit().remove();\n        setTbls(t);\n        let usedFields = item.firstChild && item.firstChild.dataScope ? item.firstChild.dataScope.fields: [], \n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const divideBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Divide\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        setOrientations(getOrientations(item.type, \"Divide\"));\n        let t = getUsableTbls(item, props.datasets);\n        setTbls(t);\n        let usedFields = item.dataScope ? item.dataScope.fields: [],\n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const densifyBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Densify\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        setOrientations(getOrientations(item.type, \"Densify\"));\n        let t = getUsableTbls(item, props.datasets);\n        setTbls(t);\n        let usedFields = item.dataScope ? item.dataScope.fields: [],\n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const classifyBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Classify\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        // setOrientations(getOrientations(item.type, \"Densify\"));\n        let t = getUsableTbls(item, props.datasets);\n        setTbls(t);\n        let usedFields = item.dataScope ? item.dataScope.fields: [],\n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const exportSVG = (e) => {\n        let svg = document.getElementById(\"canvas\");\n        var serializer = new XMLSerializer();\n        var source = serializer.serializeToString(svg);\n\n        //add name spaces.\n        if(!source.match(/^<svg[^>]+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)){\n            source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        }\n        if(!source.match(/^<svg[^>]+\"http:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)){\n            source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n        }\n\n        //add xml declaration\n        source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n        let tbls = props.scene.getDataTables();\n        let fname = (Object.values(tbls).length > 0) ? Object.values(tbls)[0].name + \".svg\" : \"visualization.svg\";\n        saveAs(new Blob([source], {\"type\":\"text/plain;charset=utf-8\"}), fname);\n    }\n\n    const saveScene = (e) => {\n        let tbls = props.scene.getDataTables();\n        let fname = (Object.values(tbls).length > 0) ? Object.values(tbls)[0].name + \".msc\" : \"visualization.msc\";\n        let scn = JSON.stringify(props.scene.toJSON());\n        saveAs(new Blob([scn], {\"type\":\"text/plain;charset=utf-8\"}), fname);\n    }\n\n    const fileChanged = function(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        let f = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = function() {\n            props.loadScene(JSON.parse(reader.result));\n            props.resetStacks();\n        }\n        reader.readAsText(f);\n    }\n\n    const undo = (e) => {\n        // console.log(\"undoing\", props.undoStack.length);\n        if (props.undoStack.length === 0) return;\n        addToStack(props.scene, props.datasets, props.redoStack, \"redo\");\n\n        let scn = props.undoStack.pop();\n        props.loadScene(JSON.parse(scn));\n        // console.log(\"finished undo\", props.undoStack.length);\n        store.dispatch(updateUndoStack({length: props.undoStack.length}));\n    }\n\n    const redo = (e) => {\n        if (props.redoStack.length === 0) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n\n        let scn = props.redoStack.pop();\n        props.loadScene(JSON.parse(scn));\n        store.dispatch(updateRedoStack({length: props.redoStack.length}));\n        //props.setRedoStack(props.redoStack.slice());\n    }\n\n    const openScene = (e) => {\n        inputFile.current.click();\n    }\n\n    const updatePreview = () => {\n        if (d3.select(\"#preview\").empty())\n            return;\n        scn.clear();\n        let selected = props.scene.getItem(props.selected[0]),\n            dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n            field = d3.select(\"#fieldSelect\").property(\"value\");\n        if (selected && cmd && field && dataset) {\n            let item = selected.duplicate();\n            if (item.fillColor === \"none\")\n                item.fillColor = \"#f5f5f5\";\n            item.strokeColor = \"#222\";\n            scn.addChild(item);\n            if (cmd === \"Repeat\") {\n                if (props.selected.length > 1) {\n                    let dups = props.selected.map(d => props.scene.getItem(d)).map(d => d.duplicate());\n                    item = scn.glyph(...dups);\n                }\n                let coll = scn.repeat(item, dataset, {field: field, layout: getDefaultCollectionLayout(item, dataset.getUniqueFieldValues(field).length)});\n                let vb = [coll.bounds.left - 2, coll.bounds.top - 2, coll.bounds.width + 4, coll.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            } else if (cmd === \"Divide\") {\n                item.strokeWidth = Math.max(item.strokeWidth, 1);\n                let o = d3.select(\"#orientationSelect\").property(\"value\");\n                let coll = scn.divide(item, dataset, {field: field, orientation: o});\n                let vb = [coll.bounds.left - 2, coll.bounds.top - 2, coll.bounds.width + 4, coll.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            } else if (cmd === \"Densify\") {\n                item.strokeWidth = Math.max(item.strokeWidth, 1);\n                let o = d3.select(\"#orientationSelect\").property(\"value\");\n                let itm = scn.densify(item, dataset, {field: field, orientation: o});\n                scn.setProperties(itm, {\"vxShape\": \"rect\", \"vxWidth\": 4, \"vxHeight\": 4, \"vxStrokeColor\": \"#1592e6\", \"vxStrokeWidth\": 1});\n                let vb = [itm.bounds.left - 2, itm.bounds.top - 2, itm.bounds.width + 4, itm.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            } else if (cmd === \"Classify\") {\n                item.strokeWidth = Math.max(item.strokeWidth, 1);\n                scn.classify(item, {field: field});\n                let layout = getDefaultCollectionLayout(item.firstChild.firstChild, Math.max(...item.children.map(d => d.children.length)));\n                scn.setProperties(item.firstChild, {layout: layout});\n                let layout2 = getDefaultCollectionLayout(item.firstChild, item.children.length);\n                scn.setProperties(item, {layout: layout2});\n                //item.layout = msc.layout(\"grid\", {\"numCols\": 1, \"rowGap\": 20})\n                let vb = [item.bounds.left - 2, item.bounds.top - 2, item.bounds.width + 4, item.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            }\n            renderer.clear();\n            renderer.render(scn);\n        }\n    }\n\n    const updateMsg = () => {\n        if (props.selected.length === 0 || !cmd) {\n            setJoinMsg(\"\");\n            return;\n        }\n        let selected = props.scene.getItem(props.selected[0]),\n            dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n            field = d3.select(\"#fieldSelect\").property(\"value\");\n        let vals = dataset.getUniqueFieldValues(field), num, msg = \"\";\n        if (selected.dataScope) {\n            num = selected.dataScope.getUniqueFieldValues(field).length;\n        } else {\n            num = vals.length;\n        }\n        if (cmd === \"Repeat\") {\n            msg = [num, props.selected.length > 1 ? \"glyphs\" : selected.type + \"s\", \"will be created,\"].join(\" \");\n        } else if (cmd === \"Divide\") {\n            msg = [\"Divide the\", selected.type, \"into\", num, \"parts,\"].join(\" \");\n        } else if (cmd === \"Densify\") {\n            if (selected.type === \"rect\") {\n                let o = d3.select(\"#orientationSelect\").property(\"value\");\n                msg = [\"Densify the\", o === \"horizontal\" ? \"top/bottom side\" : \"left/right side\", \"of the rect with\", num, \"vertices,\"].join(\" \");\n            } else {\n                msg = [\"Densify the\", selected.type, \"with\", num, \"vertices, one for each\"].join(\" \");\n            }\n        } else if (cmd === \"Classify\") {\n            msg = [\"Group the\", selected.children.length, selected.firstChild.type + \"s\", \"into\",  num, \"collections\"].join(\" \");\n        }\n        d3.select(\"#msg\").text(msg);\n    }\n\n    useEffect(() => {\n        d3.selectAll(\".iconBtn\").classed(\"active\", false);\n        d3.select(\"#\"+props.activeTool+\"Btn\").classed(\"active\", true);\n        switch (props.activeTool) {\n            case \"Rect\":\n            case \"Ellipse\":\n            case \"Line\":\n            case \"Ring\":\n            case \"Pen\":\n                d3.select(\"#evtLayer\").style(\"cursor\", \"crosshair\");\n                break;\n            case \"Select\":\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                break;\n            case \"DirectSelect\":\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                break;\n            default:\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                break;\n        }\n    }, [props.activeTool]);\n\n    //manually trigger change event because repopulating options does not fire change event\n    useEffect(() => {\n        let fs = document.getElementById(\"fieldSelect\");\n        if (fs) {\n            // let evt = document.createEvent(\"Event\");\n            // evt.initEvent('change', true, false);\n            let evt = new CustomEvent('change', {bubbles: true, cancelable: false});\n            fs.dispatchEvent(evt);\n        }\n    }, [fields])\n\n    //TODO: need to use mascot's canAlign when it is finalized\n    const canAlign = (items, scene) => {\n        if (items.length < 2) return false;\n        for (let item of items) {\n            if (item.parent !== scene)\n                return false;\n        }\n        return true;\n    }\n\n    //TODO: need to use align constraints in mascot when it's ready\n    const doAlign = (dir) => {\n        // let items = props.selected.map(d => props.scene.getItem(d));\n        // let cstrs = props.scene.getRelatedConstraints(items);\n        // let o = [\"top\", \"middle\", \"bottom\"].indexOf(dir) >= 0 ? \"vertical\" : \"horizontal\";\n        // for (let c of cstrs) {\n        //     if (c.orientation === o) {\n        //         props.scene.removeConstraint(c);\n        //     }\n        // } \n        // props.scene.align(items, dir);\n        let newPos, items = props.selected.map(d => props.scene.getItem(d));\n        switch(dir) {\n            case \"bottom\":\n            case \"right\":\n                newPos = Math.max(...items.map(d => d.bounds[dir]));\n                break;\n            case \"center\":\n            case \"middle\":\n                newPos = d3.mean(items.map(d => d.bounds[dir]));\n                break;\n            default:\n                newPos = Math.min(...items.map(d => d.bounds[dir]));\n                break;\n        }\n        if ([\"top\", \"middle\", \"bottom\"].indexOf(dir) >= 0)\n            items.forEach(d => props.scene.translate(d, 0, newPos - d.bounds[dir]));\n        else\n            items.forEach(d => props.scene.translate(d, newPos - d.bounds[dir], 0));\n        store.dispatch(updateItem({id: items[0].id, type: items[0].type, properties: {x: items[0].x, y: items[0].y}}));\n        props.renderer.render(props.scene);\n    }\n\n    useEffect(() => {\n        let selectors = {\n            \"#repeatBtn\": false,\n            \"#divideBtn\": false,\n            \"#densifyBtn\": false,\n            \"#classifyBtn\": false,\n            \".alignBtn\": false\n        }; \n\n        if (props.selected.length === 0 || props.datasets.length === 0) {\n            for (let s in selectors) {\n                selectors[s] = true;\n            }\n        } else {\n            let items = props.selected.map(d => props.scene.getItem(d));\n            // for (let item of items) {\n            //     if (!item) {\n            //         for (let s in selectors)\n            //             selectors[s] = true;\n            //         break;\n            //     }\n            // }\n            if (items.length > 1) {\n                selectors[\"#divideBtn\"] = true;\n                selectors[\"#densifyBtn\"] = true;\n                selectors[\"#classifyBtn\"] = true;\n            } else {\n                selectors[\"#repeatBtn\"] = !canRepeat(items);\n                selectors[\"#divideBtn\"] = !canDivide(items[0]);\n                selectors[\"#densifyBtn\"] = !canDensify(items[0]);\n                selectors[\"#classifyBtn\"] = !canClassify(items[0]);\n                selectors[\".alignBtn\"] = !canAlign(items, props.scene);\n            }\n        }\n        for (let s in selectors) {\n            d3.selectAll(s).property(\"disabled\", selectors[s]);\n        }\n    }, [props.selected, props.scene, props.datasets]);\n\n    useEffect(() => {\n        d3.select(\"#undoBtn\").property(\"disabled\", props.undoStackChanged.length <= 0);\n    }, [props.undoStackChanged]);\n\n    useEffect(() => {\n       d3.select(\"#redoBtn\").property(\"disabled\", props.redoStackChanged.length <= 0);\n    }, [props.redoStackChanged]);\n\n    useEffect(() => {\n        d3.select(\"#undoBtn\").property(\"disabled\", props.undoStack.length <= 0);\n        d3.select(\"#redoBtn\").property(\"disabled\", props.redoStack.length <= 0);\n    }, [props.undoStack, props.redoStack])\n\n    return (\n        <div>\n            <div className=\"myToolBar\">\n                <div className=\"myBtnGroup\">\n                    <button key=\"open\" className=\"myTextBtn\" id=\"openBtn\" onClick={openScene}>Open</button>\n                    <input type='file' id='scnFile' ref={inputFile} style={{display: 'none'}} accept=\".msc\" onChange={fileChanged}/>\n                    <button key=\"save\" className=\"myTextBtn\" id=\"saveBtn\" onClick={saveScene}>Save</button>\n                    <button key=\"export\" className=\"myTextBtn\" id=\"exportBtn\" onClick={exportSVG}>Export</button>\n                </div>\n                <div className=\"myBtnGroup\">\n                    <button key=\"undo\" className=\"myTextBtn\" id=\"undoBtn\" onClick={undo}>Undo</button>\n                    <button key=\"redo\" className=\"myTextBtn\" id=\"redoBtn\" onClick={redo}>Redo</button>\n                </div>\n                <div className=\"myBtnGroup\">\n                    {tools.map(t => <button key={t} className=\"iconBtn\" title={t} id={t+\"Btn\"} tool={t} onClick={(e) => switchTool(e.target.getAttribute(\"tool\"))}></button>)}\n                </div>\n                <div className=\"myBtnGroup\">\n                    <button key=\"repeat\" className=\"myTextBtn\" id=\"repeatBtn\" onClick={repeatBtnClicked}>Repeat</button>\n                    <button key=\"divide\" className=\"myTextBtn\" id=\"divideBtn\" onClick={divideBtnClicked}>Divide</button>\n                    <button key=\"densify\" className=\"myTextBtn\" id=\"densifyBtn\" onClick={densifyBtnClicked}>Densify</button>\n                    <button key=\"classify\" className=\"myTextBtn\" id=\"classifyBtn\" onClick={classifyBtnClicked}>Classify</button>\n                </div>\n                <div className=\"myBtnGroup\">\n                    {arrangements.map(t => <button key={t.replace(\" \", \"\")} className=\"alignBtn\" dir={t.split(\" \")[1].toLowerCase()} title={t} id={t.replace(\" \", \"\")+\"Btn\"} onClick={(e) => doAlign(e.target.getAttribute(\"dir\"))}></button>)}\n                </div>\n            </div>\n            <Modal show={showRepeatModal} onShow={(e)=>{updatePreview();updateMsg();}}  backdrop=\"static\" keyboard={false}>\n                <Modal.Header>\n                <Modal.Title>{cmd}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <div style={{\"clear\": \"both\", \"marginBottom\": \"10px\"}}>\n                    <div id=\"msg\" style={{\"clear\": \"both\", \"marginBottom\": \"7px\", \"display\": \"block\"}}>{joinMsg}</div>\n                    one for each <select id=\"fieldSelect\" onChange={(e)=>{updatePreview();updateMsg();}} style={{\"marginLeft\": \"8px\"}}>\n                        {fields.map(o => <option value={o} key={o}>{o === \"atlas_rowId\" ? \"row of data\" : o}</option>)}\n                    </select>\n                    <div style={{\"marginTop\": \"12px\", \"clear\": \"left\"}}>from dataset \n                        <select id=\"datasetSelect\" onChange={(e) => {setFields(tbls[e.target.value].nonNumericFields.concat([\"atlas_rowId\"]));}} style={{\"marginLeft\": \"7px\"}}>\n                            {Object.values(tbls).map( o => <option value={o.id} key={o.id}>{o.name}</option>)}\n                        </select>\n                    </div>\n                    <div style={{\"marginTop\": \"15px\", \"display\": cmd === \"Repeat\" || cmd === \"Classify\" || (cmd === \"Densify\" && props.selected[0] && props.scene.getItem(props.selected[0]).type !== \"rect\") ? \"none\" : \"block\"}}>\n                        Orientation \n                        <select id=\"orientationSelect\" onChange={(e)=>{updatePreview()}} style={{\"marginLeft\": \"7px\"}}>\n                            {orientations.map(o => <option value={o} key={o}>{o}</option>)}\n                        </select>\n                    </div>\n                </div>\n                <svg id=\"preview\" style={{\"width\": \"470px\", \"height\": \"180px\", \"border\": \"solid 0px #ddd\", \"padding\": \"5px\"}}></svg>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={(e) => {setShowRepeatModal(false)}}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={doJoin}>OK</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n\n}\n\nexport default connect(mapStateToProps)(ToolBar);\n","import './css/Inspector.css';\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { divergingColorSchemes, properties, sequentialColorSchemes } from './Defs';\nimport { addToStack, getAggregator, getDefaultLayout, getPropertyDef, getReusableScales, getScaleType, getScheme } from './Util';\nimport { SketchPicker } from 'react-color';\nimport store from './store';\nimport { createNewItem, toggleAxisHandle, updateItem } from './canvasSlice';\nimport { Dropdown, Form, Stack } from 'react-bootstrap';\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    directSelected: state.canvas.directSelected,\n    itemUpdated: state.canvas.itemUpdated\n});\n\nconst headerClasses = {};\nfor (let g in properties) {\n    let classes = [];\n    for (let prop in properties[g]) {\n        for (let c of properties[g][prop].class) {\n            if (classes.indexOf(c) < 0)\n                classes.push(c);\n        }\n    }\n    headerClasses[g] = classes;\n}\n\nconst updatePropertyControl = (propDef, item, scene) => {\n\n    d3.select(\"#\" + propDef.id).style(\"padding-left\", \"3px\");\n    d3.select(\"#\" + propDef.id + \"ScaleBtn\").style(\"display\", \"none\");\n\n    if (propDef.accessor) {\n        let val = item;\n\n        for (let a of propDef.accessor)\n            val = val[a];\n\n        if (propDef.type === \"numeric\")\n            val = val.toFixed(1);\n\n        if (propDef.id === \"vxShape\" && !val)\n            val = \"none\";\n\n        if (propDef.type === \"color\") {\n            d3.select(\"#\" + propDef.id).style(\"background\", val).property(\"value\", val);\n        } else if (propDef.type === \"boolean\") {\n            d3.select(\"#\" + propDef.id).property(\"checked\", val);    \n        } else {\n            d3.select(\"#\" + propDef.id).property(\"value\", val).property(\"disabled\", propDef.channel === \"area\");\n        }\n    }\n\n    //check if bound to data\n    if (propDef.channel) {\n        let enc;\n        if (propDef.channel === \"width\" || propDef.channel === \"height\" || propDef.channel === \"area\" || propDef.channel === \"radius\") {\n            enc = scene.sizeBound(item, propDef.channel);\n        } else if (propDef.channel === \"x\" || propDef.channel === \"y\") {\n            enc = scene.positionBound(item, propDef.channel);\n        } else {\n            enc = scene.getEncodingByItem(item, propDef.channel);\n        }\n        let encodable = item.type === \"segment\" ? item.parent.dataScope : item.type === \"vertex\" ? item.parent.dataScope || item.dataScope : item.dataScope;\n        if (enc) {\n            if (enc.channel === propDef.channel) {\n                d3.select(\"#\" + propDef.id).property(\"value\", enc.field).property(\"disabled\", true).style(\"pointer-events\", \"none\");\n                d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"inline-block\")\n                    .on(\"click\", function(e){\n                        scene.removeEncoding(enc);\n                        let o = {};\n                        o[enc.channel] = true;\n                        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n                    });\n                d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"none\");\n                let scaleCustomizable = (propDef.type === \"numeric\" && [\"linear\", \"sqrt\", \"log\", \"power\"].indexOf(enc.scale.type) >= 0) || \n                                            (propDef.type === \"color\" && [\"sequentialColor\", \"divergingColor\"].indexOf(enc.scale.type) >= 0);\n                if (scaleCustomizable) {\n                    d3.select(\"#\" + propDef.id).style(\"padding-left\", \"23px\");\n                    d3.select(\"#\" + propDef.id + \"ScaleBtn\").style(\"display\", \"inline-block\");\n                }\n            } else {\n                let info = (enc.anyItem.type === \"vertex\" || enc.anyItem.type === \"segment\")? \"[see \" + enc.anyItem.type + \"]\" : \"[see \" + enc.channel + \"]\";\n                d3.select(\"#\" + propDef.id).property(\"value\", info).property(\"disabled\", true).style(\"pointer-events\", \"none\");\n                d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"none\");\n                d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"none\");\n            }\n        } else if (encodable) {\n            let disabled = (propDef.group === \"Segment Position\" || propDef.group === \"Vertex Position\");\n            d3.select(\"#\" + propDef.id).property(\"disabled\", disabled).style(\"pointer-events\", \"all\");\n            d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"none\");\n            d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"inline-block\");\n        } else {\n            let disabled = (propDef.group === \"Segment Position\" || propDef.group === \"Vertex Position\");\n            d3.select(\"#\" + propDef.id).property(\"disabled\", disabled).style(\"pointer-events\", \"all\");\n            d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"none\");\n            d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"none\");\n        }\n    }\n\n    if (propDef.id === \"layoutType\") {\n        const layout = item.layout ? item.layout.type : \"none\";\n        d3.select(\"#\" + propDef.id).property(\"value\", layout);\n        d3.selectAll(\".layout-prop\").style(\"display\", \"none\");\n        d3.selectAll(\".\" + layout + \"-prop\").style(\"display\", \"inline-block\");\n        let options = d3.select(\"#\"+propDef.id).selectAll(\"option\");\n        let ct = item.firstChild.type, na = [];\n        if (ct === \"rect\") {\n            na.push(\"packing\");\n            if (!scene.getEncodingByItem(item.firstChild, \"area\")) {\n                na.push(\"treemap\");\n            }\n        } else if (ct === \"circle\") {\n            na.push(\"treemap\");\n        } else if (ct === \"collection\") {\n            na = na.concat([\"packing\", \"treemap\"]);\n        } //TODO: handle other item types\n        \n        options.property(\"disabled\", function(d, i) {\n            const v = d3.select(this).property(\"value\");\n            return na.indexOf(v) >= 0;\n        })\n        \n        const params = propDef.options.filter(d => d.value === layout)[0].parameters;\n        for (const p of params) {\n            const paramDef = properties[\"Layout\"][p];\n            let v = item.layout[paramDef.accessor[0]];\n            if (paramDef.type === \"numeric-integer\")\n                v = v.toFixed(0);\n            else if (paramDef.type === \"numeric\")\n                v = v.toFixed(1);\n            //handle layout parameter controls\n            d3.select(\"#\" + paramDef.id).property(\"value\", v);\n            d3.select(\"#\" + paramDef.id + \"ScaleBtn\").style(\"display\", \"none\");\n        }\n    }\n\n    if (propDef.id === \"childrenOrder\") {\n        d3.select(\"#\" + propDef.id).selectAll(\"option\").remove();\n        if (item.dataScope) {\n            let options = item.dataScope.dataTable.fields;\n            d3.select(\"#\" + propDef.id).selectAll(\"option\").data(options).enter().append(\"option\")\n                .property(\"value\", d => d).text(d => d === \"atlas_rowId\" ? \"default\" : d);\n            d3.select(\"#\" + propDef.id).property(\"value\", item.childrenOrder.field);\n        } //TODO: hide childrenOrder if item has no data scope\n    }\n\n    if (propDef.id === \"axisOrientation\") {\n        let options = d3.select(\"#\"+propDef.id).selectAll(\"option\");\n        if (item.channel === \"x\" || item.channel === \"width\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"top\" && v !== \"bottom\";\n            })\n        } else if (item.channel === \"y\" || item.channel === \"height\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"left\" && v !== \"right\";\n            })\n        } else {\n            options.property(\"disabled\", true);\n        }\n    }\n\n    if (propDef.id === \"includeZero\") {\n        if (item.channel !== \"y\") {\n            d3.select(\"#\" + propDef.id + \"_row\").style(\"display\", \"none\");\n        } else {\n            d3.select(\"#\" + propDef.id + \"_row\").style(\"display\", \"inline-block\");\n        }\n    }\n\n    if (propDef.id === \"baseline\") {\n        let options = d3.select(\"#\"+propDef.id).selectAll(\"option\");\n        let ori = item.orientation;\n        if (ori === \"horizontal\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"top\" && v!== \"middle\" && v !== \"bottom\";\n            })\n        } else if (ori === \"vertical\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"left\" && v!== \"center\" && v !== \"right\";\n            })\n        } else {\n            options.property(\"disabled\", true);\n        }\n    }\n\n    if (propDef.id === \"vxShape\") {\n        vertexShapeUpdated();\n    }\n}\n\nconst vertexShapeUpdated = () => {\n    let v = d3.select(\"#vxShape\").property(\"value\");\n    if (v === \"rect\") {\n        d3.select(\"#vxRadius_row\").style(\"display\", \"none\");\n        d3.select(\"#vxWidth_row\").style(\"display\", \"inline-block\");\n        d3.select(\"#vxHeight_row\").style(\"display\", \"inline-block\");\n    } else if (v === \"circle\") {\n        d3.select(\"#vxRadius_row\").style(\"display\", \"inline-block\");\n        d3.select(\"#vxWidth_row\").style(\"display\", \"none\");\n        d3.select(\"#vxHeight_row\").style(\"display\", \"none\");\n    } else {\n        d3.select(\"#vxRadius_row\").style(\"display\", \"none\");\n        d3.select(\"#vxWidth_row\").style(\"display\", \"none\");\n        d3.select(\"#vxHeight_row\").style(\"display\", \"none\");\n    }\n}\n\nfunction Inspector(props) {\n    // const dispatch = useDispatch();\n    const [currentColor, setCurrentColor] = useState(\"#fff\");\n    const [currentColorPropDef, setCurrentColorPropDef] = useState(null);\n    const [currentDataTable, setCurrentDataTable] = useState(null);\n    const [pastLayouts, setPastLayouts] = useState({});\n\n    useEffect(() => {\n        setPastLayouts({});\n    }, [props.scene]);\n\n    useEffect(() => {\n        if (currentColorPropDef === null) {\n            d3.select(\"#colorPicker\").style(\"display\", \"none\");\n            return;\n        }\n        let item = currentColorPropDef.id === \"canvasFillColor\" ? props.scene : \n                    props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : \n                        props.directSelected ? props.scene.getItem(props.directSelected) : null;\n        if (item === null) return;\n        let c = item[currentColorPropDef.accessor];\n        setCurrentColor(c ? c : \"#fff\");\n        d3.select(\"#colorPicker\").style(\"display\", \"block\");\n    }, [currentColorPropDef, props.scene, props.selected, props.directSelected]);\n\n    useEffect(() => {\n        if (currentColorPropDef === null) {\n            return;\n        }\n        d3.select(\"#\" + currentColorPropDef.id).style(\"background\", currentColor).property(\"value\", currentColor);\n        if (currentColorPropDef.id === \"canvasFillColor\") {\n            props.scene[currentColorPropDef.accessor] = currentColor;\n        } else if (props.selected.length > 0) {\n            let item = props.scene.getItem(props.selected[0]);\n            if (item.type === \"axis\" || item.type === \"gridlines\" || item.type === \"legend\") {\n                item[currentColorPropDef.accessor] = currentColor;\n            } else {\n                let prop = {};\n                prop[currentColorPropDef.accessor] = currentColor;\n                props.scene.setProperties(item, prop);\n            }\n        } else if (props.directSelected) {\n            let item = props.scene.getItem(props.directSelected);\n            let prop = {};\n            prop[currentColorPropDef.accessor] = currentColor;\n            props.scene.setProperties(item, prop);\n        }\n        props.renderer.render(props.scene);\n    }, [currentColor, currentColorPropDef, props.scene, props.selected, props.directSelected, props.renderer]);\n\n    useEffect(() => {\n        if (!props.itemUpdated.id || props.itemUpdated.source === \"inspector\") return;\n        const item = props.scene.getItem(props.itemUpdated.id);\n        if (item === undefined) return;\n        for (let prop in props.itemUpdated.properties) {\n            const def = getPropertyDef(item.type, prop);\n            if (def)\n                updatePropertyControl(def, item, props.scene);\n        }\n    }, [props.scene, props.itemUpdated])\n\n    useEffect(() => {\n        let type, selected = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : undefined;\n        if (!selected) {\n            type = \"canvas\";\n            selected = props.scene;\n            setCurrentDataTable(null);\n        } else {\n            //selected = props.scene.getItem(props.selected[0]);\n            type = selected.type;\n            let item = props.scene.getItem(props.selected[0]);\n            if (item.dataScope)\n                setCurrentDataTable(item.dataScope.dataTable);\n            else\n                setCurrentDataTable(null);\n        }\n        let panel = d3.select(\".propertyPanel\");\n        panel.selectAll(\".propertyGroupHeader\").style(\"display\", \"none\");\n        panel.selectAll(\".propertyRow\").style(\"display\", \"none\");\n        //if (props.selected.length === 1) {\n        if (selected) {\n            panel.selectAll(\".\" + type + \"-prop\").style(\"display\", \"inline-block\");\n            for (let g in properties) {\n                for (let prop in properties[g]) {\n                    if (properties[g][prop].class.indexOf(type + \"-prop\") >= 0)\n                        updatePropertyControl(properties[g][prop], selected, props.scene);\n                }\n            }\n        }\n    }, [props.scene, props.selected]);\n\n    useEffect(() => {\n        if (!props.directSelected) {\n            setCurrentDataTable(null);\n        } else {\n            let item = props.scene.getItem(props.directSelected);\n            if (item.dataScope)\n                setCurrentDataTable(item.dataScope.dataTable);\n            else if (item.parent.dataScope)\n                setCurrentDataTable(item.parent.dataScope.dataTable);\n            else\n                setCurrentDataTable(null);\n        }\n        let panel = d3.select(\".propertyPanel\");\n        panel.selectAll(\".propertyGroupHeader\").style(\"display\", \"none\");\n        panel.selectAll(\".propertyRow\").style(\"display\", \"none\");\n        if (props.directSelected) {\n            let ds = props.scene.getItem(props.directSelected), type = ds.type;\n            panel.selectAll(\".\" + type + \"-prop\").style(\"display\", \"inline-block\");\n            for (let g in properties) {\n                for (let prop in properties[g]) {\n                    if (properties[g][prop].class.indexOf(type + \"-prop\") >= 0)\n                        updatePropertyControl(properties[g][prop], ds, props.scene);\n                }\n            }\n        }\n    }, [props.scene, props.directSelected]);\n\n    const setCategoricalValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        let val = ctrl.property(\"value\");\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        if (item === undefined) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        const o = {};\n        //TODO: handle layout properties in o properly for dispatch\n        switch (attr.id) {\n            case \"axisOrientation\":\n            case \"legendOrientation\":\n                item[attr.accessor[0]] = val;\n                o[attr.accessor[0]] = val;\n                break;\n            case \"orientation\":\n            case \"horzGravity\":\n            case \"vertGravity\":\n            case \"direction\":\n                o[attr.accessor[0]] = val;\n                props.scene.setProperties(item.layout, o);\n                //props.scene.reCreateRelatedAxes(item);\n                break;\n            case \"layoutType\":\n                o[\"layout\"] = val;\n                let l;\n                if (!(item.id in pastLayouts))\n                    pastLayouts[item.id] = [];\n                pastLayouts[item.id].unshift(item.layout);\n                if (pastLayouts[item.id].length > 0) {\n                    l = pastLayouts[item.id].find(d => d && d.type === val);\n                }\n                if (!l)\n                    l = getDefaultLayout(val);\n                props.scene.setProperties(item, {\"layout\": l});\n                updatePropertyControl(attr, item, props.scene);\n                break;\n            case \"vxShape\":\n                o[attr.accessor[0]] = val;\n                props.scene.setProperties(item, o);\n                vertexShapeUpdated();\n                break;\n            case \"childrenOrder\":\n                let dir = d3.select(\"#childrenOrderDirBtn\").property(\"checked\") ? \"desc\" : \"asc\";\n                o[attr.accessor[0]] = {\"field\": val, \"direction\": dir};\n                props.scene.setProperties(item, o);\n                //props.scene.reCreateRelatedAxes(item);\n                break;\n            default:\n                o[attr.accessor[0]] = val;\n                props.scene.setProperties(item, o);\n                break;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const setBooleanValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let val = ctrl.property(\"checked\");\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        item[attr.accessor[0]] = val;\n        const o = {};\n        o[attr.accessor[0]] = val;\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const setStringValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        let val = ctrl.property(\"value\");\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        addToStack(props.scene, props.datasets, props.undoStack);\n        const o = {};\n        switch (attr.id) {\n            case \"labelFormat\":\n                o[attr.accessor[0]] = val;\n                item[attr.accessor[0]] = val;\n                break;\n            default:\n                break;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const setNumericValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        let val = parseFloat(ctrl.property(\"value\"));\n        if (isNaN(val)) return;\n        if (attr.id !== \"rowGap\" && attr.id !== \"colGap\" && attr.id !== \"labelRotation\" && val < 0) return;\n        if (attr.type === \"numeric-integer\") {\n            val = parseInt(val);\n        }\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        addToStack(props.scene, props.datasets, props.undoStack);\n        const o = {};\n        switch (attr.id) {\n            case \"strokeWidth\":\n            case \"width\":\n            case \"height\":\n            case \"area\":\n            case \"fontSize\":\n            case \"vxWidth\":\n            case \"vxHeight\":\n            case \"vxRadius\":\n            case \"vxOpacity\":\n            case \"vxStrokeWidth\":\n            case \"opacity\":\n            case \"radius\":\n            case \"innerRadius\":\n            case \"outerRadius\":\n                o[attr.channel] = val;\n                props.scene.setProperties(item, o);\n                break;\n            case \"rowGap\":\n            case \"colGap\":\n            case \"numRows\":\n            case \"numCols\":\n                if (item.layout) {\n                    o[attr.id] = val;\n                    props.scene.setProperties(item.layout, o);\n                }\n                break;\n            case \"tickOffset\":\n            case \"labelOffset\":\n            case \"labelRotation\":\n            case \"tickSize\":\n            case \"pathPos\":\n            case \"gridlineStrokeWidth\":\n                o[attr.accessor[0]] = val;\n                item[attr.accessor[0]] = val;\n                break;\n            case \"x\":\n            case \"collectionX\":\n            case \"glyphX\":\n                props.scene.translate(item, val - item.x, 0);\n                break;\n            case \"y\":\n            case \"collectionY\":\n            case \"glyphY\":\n                props.scene.translate(item, 0, val - item.y);\n                break;\n            default:\n                break;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const encode = (f, c, scale) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        // if ((c === \"x\" || c === \"y\") && item.type !== \"area\" && item.parent.type === \"collection\" && item.parent.layout) {\n        //     props.scene.setProperties(item.parent, {\"layout\": undefined});\n        // }\n        if ((c === \"x\" || c === \"y\") && item.parent.type === \"collection\" && item.parent.layout) {\n            switch (item.parent.layout.type) {\n                case \"grid\":\n                    if (c === \"x\" && item.parent.layout.numCols > 1)\n                        props.scene.setProperties(item.parent, {\"layout\": undefined});\n                    else if (c === \"y\" && item.parent.layout.numRows > 1)\n                        props.scene.setProperties(item.parent, {\"layout\": undefined});\n                    break;\n                default:\n                    props.scene.setProperties(item.parent, {\"layout\": undefined});\n                    break;\n            }\n        }\n        props.scene.encode(item, {field: f, channel: c, scale: scale});\n        let guide;\n        if (!scale) {\n            if (c.indexOf(\"Color\") > 0) {\n                guide = props.scene.legend(c, f);\n            } else if (c === \"width\" || c === \"height\" || c === \"x\" || c === \"y\") {\n                guide = props.scene.axis(c, f, {item: item});\n            }\n        } else { //if merging scale, generate a new axis only when binding to line/path vertex, and the line/path orientation is orthogonal to the channel \n            if (item.type === \"vertex\" && [\"path\", \"line\"].indexOf(item.parent.type) >= 0 ) {\n                let p = item.parent;\n                let r = Math.abs((p.firstVertex.y - p.lastVertex.y + 1)/(p.firstVertex.x - p.lastVertex.x + 1));\n                if ((r < 1 && c === \"y\") || (r > 1 && c === \"x\")) {\n                    guide = props.scene.axis(c, f, {item: item});\n                }\n            }\n        }\n        props.scene.reCreateRelatedAxes(item);\n        \n        const o = {};\n        o[c] = \"encoded\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n        if (guide)\n            store.dispatch(createNewItem(guide.id));\n    }\n\n    const highlightAxis = (scale, show) => {\n        for (let c of props.scene.children) {\n            if (c.type === \"axis\" && c.encoding) {\n                if (c.encoding.scale === scale) {\n                    store.dispatch(toggleAxisHandle({axis: c.id, visible: show}));\n                    return;\n                }\n            }\n        }\n    }\n\n    const createNumericControl = (attr) => {\n        return <input id={attr.id} onChange={(e) => setNumericValue(attr)}></input>;\n        //return <div><button className=\"scaleBtn\" id={attr.id+\"ScaleBtn\"}></button><input id={attr.id} onChange={(e) => setNumericValue(attr)}></input></div>\n    }\n\n    const createStringControl = (attr) => {\n        return <input type=\"text\" id={attr.id} onInput={(e) => setStringValue(attr)}></input>\n    }\n\n    const createColorControl = (attr) => {\n        return <input id={attr.id} onClick={(e) => {setCurrentColorPropDef(attr);e.stopPropagation();}}></input>\n    }\n\n    const createCategoryControl = (attr) => {\n        return <select id={attr.id} onChange={(e) => setCategoricalValue(attr)}>{attr.options.map( o => <option value={o.value} key={o.display}>{o.display}</option>)}</select>\n    }\n\n    const createRangeControl = (attr) => {\n        return (\n            <div className=\"propertySliderDiv\">\n                <input type=\"range\" min={attr.range[0]} max={attr.range[1]} step={(attr.range[1] - attr.range[0])/10} className=\"propertySlider\" id={attr.id} onChange={(e) => setNumericValue(attr)}></input>\n                <div className=\"propertySliderMarks\"> \n                    <div style={{margin: 0, float: \"left\"}}>{attr.range[0]}</div>\n                    <div style={{margin: 0, float: \"right\"}}>{attr.range[1]}</div>\n                </div>\n            </div>\n        )\n    }\n\n    const createBooleanControl = (propDef) => {\n        return (\n            <input type=\"checkbox\" id={propDef.id} onChange={(e) => setBooleanValue(propDef)}></input>\n        )\n    }\n\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n        <button className='dropdown-item dropdown-toggle encodeFields' href=\"\" ref={ref}\n            // onMouseEnter={(e) => onClick(e)}\n            onClick={(e) => {\n                e.preventDefault();\n                onClick(e);\n            }}\n        >\n          {\"  \" + children}\n        </button>\n    ));\n\n    const changeAggregator = (channel, aggr) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let enc = props.scene.getEncodingByItem(item, channel);\n        if (!enc) return;\n        enc.aggregator = aggr;\n        props.scene.reCreateRelatedAxes(item);\n        \n        const o = {};\n        o[channel] = \"aggregator\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n    }\n\n    const changeScaleType = (channel, type) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let enc = props.scene.getEncodingByItem(item, channel);\n        if (!enc) return;\n        enc.scale.type = type;\n        props.scene.reCreateRelatedAxes(item);\n        \n        const o = {};\n        o[channel] = \"scaleType\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n    }\n\n    const changeScheme = (channel, scheme) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let enc = props.scene.getEncodingByItem(item, channel);\n        if (!enc) return;\n        enc.scale.scheme = scheme;\n        props.scene.reCreateRelatedLegends(item);\n        const o = {};\n        o[channel] = \"scheme\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n    };\n\n    const toggleOrder = (e, propDef) => {\n        let dir = e.target.checked ? \"desc\" : \"asc\";\n        d3.select(\"#childrenOrderDirBtnImg\").attr(\"src\", \"/app/icons/\" + dir + \".png\");\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let item = props.scene.getItem(props.selected[0]); \n        const o = {};\n        o[propDef.accessor[0]] = {field: item[propDef.accessor[0]].field, direction: dir};\n        props.scene.setProperties(item, o);\n        //props.scene.reCreateRelatedAxes(item);\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n        // let o = {};\n        // o[enc.channel] = true;\n        // store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n    };\n\n\n    const createPropertyControl = (prop, propDef) => {\n        let classes = \"propertyRow \" + propDef.class.join(\" \");\n        return (\n        <tr className={classes} key={prop} id={propDef.id+\"_row\"}>\n            <td className= \"propertyName\">{prop}</td>\n            <td className=\"propertyInput\">\n            <Dropdown id={propDef.id+\"ScaleBtn\"} className=\"scaleBtnDiv\">\n                <Dropdown.Toggle className=\"scaleBtn\" variant=\"link\" bsPrefix=\"p-0\">\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"scaleMenu\">\n                    <div>\n                    <Form>\n                        <Form.Group style={{\"margin\": \"0 10px 0 10px\", \"display\": prop.indexOf(\"Color\") < 0 ? \"block\" : \"none\"}}>\n                            <Stack direction=\"horizontal\" gap={1}>\n                                <Form.Label className=\"scaleMenuLabel\">Scale type</Form.Label>\n                                <Form.Select value={getScaleType(propDef.channel, props.selected, props.directSelected, props.scene) ? getScaleType(propDef.channel, props.selected, props.directSelected, props.scene) : \"\"} onChange={(e) => changeScaleType(propDef.channel, e.target.value)} size=\"sm\">\n                                    <option value=\"linear\">Linear</option>\n                                    <option value=\"log\">Log</option>\n                                    <option value=\"sqrt\">Square Root</option>\n                                    <option value=\"power\">Power (2)</option>\n                                </Form.Select>\n                            </Stack>\n                        </Form.Group>\n                        <Form.Group style={{\"margin\": \"0 10px 0 10px\", \"display\": getAggregator(propDef.channel, props.selected, props.directSelected, props.scene) ? \"block\" : \"none\"}}>\n                            <Stack direction=\"horizontal\" gap={1}>\n                                <Form.Label className=\"scaleMenuLabel\">Aggregator</Form.Label>\n                                <Form.Select value={getAggregator(propDef.channel, props.selected, props.directSelected, props.scene) ? getAggregator(propDef.channel, props.selected, props.directSelected, props.scene) : \"\"} onChange={(e) => changeAggregator(propDef.channel, e.target.value)} size=\"sm\">\n                                    <option value=\"sum\">Sum</option>\n                                    <option value=\"mean\">Average</option>\n                                    <option value=\"max\">Maximum</option>\n                                    <option value=\"min\">Minimum</option>\n                                    <option value=\"median\">Median</option>\n                                    <option value=\"count\">Count</option>\n                                </Form.Select>\n                            </Stack>\n                        </Form.Group>\n                        <Form.Group style={{\"margin\": \"0 10px 0 10px\", \"display\": prop.indexOf(\"Color\") > 0 ? \"block\" : \"none\"}}>\n                            <Stack direction=\"horizontal\" gap={1}>\n                                <Form.Label className=\"scaleMenuLabel\">Color Scheme</Form.Label>\n                                <Form.Select value={getScheme(propDef.channel, props.selected, props.directSelected, props.scene) ? getScheme(propDef.channel, props.selected, props.directSelected, props.scene) : \"\"} onChange={(e) => changeScheme(propDef.channel, e.target.value)} size=\"sm\">\n                                    {getScaleType(propDef.channel, props.selected, props.directSelected, props.scene) === \"divergingColor\" ? \n                                        Object.keys(divergingColorSchemes).map(o => <option value={o} key={o}>{divergingColorSchemes[o]}</option>) :\n                                        Object.keys(sequentialColorSchemes).map(o => <option value={o} key={o}>{sequentialColorSchemes[o]}</option>) \n                                    }\n                                </Form.Select>\n                            </Stack>\n                        </Form.Group>\n                    </Form>\n                    </div>\n                </Dropdown.Menu>\n            </Dropdown>\n            {(function(){\n                switch(propDef.type) {\n                    case \"numeric\":\n                    case \"numeric-integer\":\n                        return createNumericControl(propDef);\n                    case \"numeric-range\":\n                        return createRangeControl(propDef);\n                    case \"color\":\n                        return createColorControl(propDef);\n                    case \"categorical\":\n                        return createCategoryControl(propDef);\n                    case \"boolean\":\n                        return createBooleanControl(propDef);\n                    case \"string\":\n                        return createStringControl(propDef);\n                    default:\n                        return createNumericControl(propDef);\n                }\n            })()}\n            </td>\n            {propDef.encodable ? (<td>\n                <button className=\"unencodeBtn\" id={propDef.id+\"UnencodeBtn\"}></button>\n                <Dropdown id={propDef.id+\"EncodeBtn\"}>\n                    <Dropdown.Toggle className=\"encodeBtn\" variant=\"link\" bsPrefix=\"p-0\">\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        {currentDataTable === null ? []: \n                            currentDataTable.getEncodableFields(propDef.channel).map((f, i) => {\n                                let scales = getReusableScales(currentDataTable.getFieldType(f), propDef.channel, props.scene);\n                                if (Object.keys(scales).length === 0) {\n                                    return (\n                                        <Dropdown.Item className=\"encodeFields\" key={f}\n                                            onClick={(e) => {encode(f, propDef.channel)}}>\n                                            {f}\n                                        </Dropdown.Item> \n                                    )\n                                } else {\n                                    let options = [];\n                                    for (let k in scales) {\n                                        options.push({fields: [...new Set(scales[k].map(d => d.field))].join(\"/\"), scale: scales[k][0].scale})\n                                    }\n                                    return (\n                                        // <Dropdown.Item onMouseEnter={(e) => {console.log(f, propDef.channel)}} className=\"encodeFields\" key={f} eventKey={f}>{f}</Dropdown.Item>\n                                        <Dropdown id={propDef.id+\"_scale_\"+f} key={propDef.id+\"_scale_\"+f} drop='start'>\n                                            <Dropdown.Toggle as={CustomToggle} bsPrefix=\"p-0\">\n                                                {f}\n                                            </Dropdown.Toggle>\n                                            <Dropdown.Menu>\n                                                {[null].concat(options).map((enc, i) => {\n                                                    if (enc === null) {\n                                                        return (\n                                                        <Dropdown.Item className=\"encodeFields\" key={\"new\"+i}\n                                                            onClick={(e) => {encode(f, propDef.channel)}}\n                                                        >\n                                                        Create new scale\n                                                        </Dropdown.Item>);\n                                                    } else {\n                                                        return (\n                                                        <Dropdown.Item className=\"encodeFields\" key={enc.scale.id+\"_\"+i}\n                                                            onClick={(e) => {encode(f, propDef.channel, enc.scale)}}\n                                                            onMouseEnter={(e) => {highlightAxis(enc.scale, true)}}\n                                                            onMouseLeave={(e) => {highlightAxis(enc.scale, false)}}\n                                                        >\n                                                        {\"Merge with \" + enc.fields}\n                                                        </Dropdown.Item>);\n                                                    }\n                                                })}\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                    )\n                                }\n                            }\n                            )}\n                    </Dropdown.Menu>\n                </Dropdown>\n                </td>) :\n             propDef.id === \"childrenOrder\" ? (<td><label htmlFor=\"childrenOrderDirBtn\"><img id=\"childrenOrderDirBtnImg\" src=\"/app/icons/asc.png\" className=\"orderDirBtn\" alt=\"ascending\"/></label>\n                                                <input type=\"checkbox\" id=\"childrenOrderDirBtn\" style={{\"display\": \"none\"}} onChange={(e) => toggleOrder(e, propDef)}></input></td>) : <td></td>\n            }\n        </tr>)\n    }\n\n    return (\n        <div>\n            {/* <div className=\"rightPanel\" onClick={(e) => setCurrentColorPropDef(null)}> */}\n                <div className=\"propertyPanel\" onClick={(e) => setCurrentColorPropDef(null)} style={{\"overflow\": \"visible\"}}>\n                    {Object.keys(properties).map(g => \n                    <div key={g}>\n                        <span className={headerClasses[g].concat([\"propertyGroupHeader\"]).join(\" \")}>{g}</span>\n                        <table>\n                            <tbody>\n                            {Object.keys(properties[g]).map(p => createPropertyControl(p, properties[g][p]))}\n                            </tbody>\n                        </table>\n                    </div>)}\n                </div>\n            {/* </div> */}\n            <div id=\"colorPicker\">\n                <SketchPicker disableAlpha={true} color={currentColor} onChangeComplete={e => setCurrentColor(e.hex)}/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default connect(mapStateToProps)(Inspector);","import './css/LayerView.css';\nimport { connect } from \"react-redux\";\nimport { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport store from \"./store\";\nimport { directSelect, select } from \"./canvasSlice\";\nimport { activateTool } from './toolSlice';\n\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    dataItemJoined: state.canvas.dataItemJoined,\n    newItemCreated: state.canvas.newItemCreated,\n    itemsDeleted: state.canvas.itemsDeleted\n});\n\nconst left = 20, offset = 25, lineHt = 25, top = 20;\n\nconst enumerateLayers = (item, list, level) => {\n    list.push({item: item, level: level});\n    if (item.children) {\n        switch (item.type) {\n            case \"collection\":\n                enumerateLayers(item.firstChild, list, level+1);\n                break;\n            case \"axis\":\n            case \"legend\":\n            case \"gridlines\":\n                break;\n            default:\n                for (let i = item.children.length - 1; i >= 0; i--) {\n                    enumerateLayers(item.children[i], list, level+1);\n                }\n                break;\n        }\n    }\n};\n\nconst getLayerLabel = (item) => {\n    if (item.type === \"axis\") {\n        return item.channel.substring(0, 1).toUpperCase() + item.channel.substring(1) + \" axis: \" + item.field;  \n    }\n    let l = item.type.substring(0, 1).toUpperCase() + item.type.substring(1);\n    if (item.dataScope) {\n        let peers = item.getScene().getPeers(item);\n        if (peers.length > 1)\n            l += \" (\" + peers.length + \")\";\n        let fields = item.dataScope.fields;\n        if (item.parent && item.parent.type === \"collection\" && item.parent.dataScope) {\n            fields = fields.filter(d => item.parent.dataScope.fields.indexOf(d) < 0);\n        }\n        let d = fields.join(\", \");\n        if (d === \"atlas_rowId\")\n            d = \"row ID\";\n        if (d !== \"\")\n            l += \": \" + d;\n    }\n    return l;\n};\n\nconst getLayerId = (item) => {\n    switch (item.type) {\n        case \"axis\":\n        case \"legend\":\n            return item.id;\n        default:\n            if (item.classId)\n                return item.classId;\n            else\n                return item.id;\n    }\n}\n\nfunction LayerView(props) {\n\n    useEffect(() => {\n        const layers = [];\n        enumerateLayers(props.scene, layers, -1);\n        layers.forEach((d, i) => d.index = i);\n        const lv = d3.select(\".layerView\");\n        lv.selectAll('*').remove();\n        lv.append(\"text\").text(\"Layers\").style(\"font-weight\", \"bold\").attr(\"class\", \"layerText\")\n            .attr(\"x\", 20).attr(\"y\", 16);\n        let g = lv.selectAll(\".layer\").data(layers.slice(1)).enter().append(\"g\").attr(\"class\", \"layer\");\n        \n        g.append(\"rect\").attr(\"class\", \"layerRow\").attr(\"id\", d => getLayerId(d.item))\n            .attr(\"x\", 0).attr(\"y\", d => top + lineHt * d.index - 3)\n            .attr(\"width\", 260).attr(\"height\", lineHt)\n            .on(\"click\", (e, d) => {\n                store.dispatch(directSelect(null));\n                store.dispatch(activateTool(\"Select\"));\n                store.dispatch(select([d.item.id]));\n            });\n        g.append(\"image\").attr(\"class\", \"layerIcon\")\n            .attr(\"x\", d => left + offset * d.level).attr(\"y\", d => top + lineHt * d.index + 2)\n            .attr(\"href\", d => \"/app/icons/\"+d.item.type + \".png\");\n        g.append(\"text\").attr(\"class\", \"layerText\")\n            .attr(\"x\", d => left + offset * d.level + 22).attr(\"y\", d => top + lineHt * d.index + 1)\n            .text(d => getLayerLabel(d.item));\n    }, [props.scene, props.dataItemJoined, props.newItemCreated, props.itemsDeleted]);\n\n    useEffect(() => {\n        d3.selectAll(\".layerRow\").classed(\"layerSelected\", false);\n        if (props.selected.length > 0) {\n            for (let s of props.selected) {\n                let itm = props.scene.getItem(s);\n                if (!itm) return;\n                d3.select(\".layerView\").select(\"#\"+getLayerId(itm)).classed(\"layerSelected\", true);\n            }\n        }\n    }, [props.scene, props.selected]);\n\n    return (\n        <svg className=\"layerView\">\n        </svg>\n    );\n}\n\nexport default connect(mapStateToProps)(LayerView);","import { connect } from \"react-redux\";\nimport './css/DataPanel.css';\nimport {useState, useEffect, useMemo, useRef, useCallback } from 'react';\nimport { useTable } from \"react-table\";\nimport { csvFromString } from \"mascot-vis\";\nimport { addToStack } from \"./Util\";\nimport { immerable } from \"immer\";\nimport { useSearchParams } from 'react-router-dom';\n\n\nfunction DataPanel (props) {\n\n    const [activeTbl, setActiveTbl] = useState(null);\n    const [dataScopeRows, setDataScopeRows] = useState([]);\n    const [dataScopeInfo, setDataScopeInfo] = useState(null);\n    const inputFile = useRef(null);\n\n    const [queryParameters] = useSearchParams();\n    const [urlDataset, setUrlDataset] = useState(null);\n\n    const importDataset = useCallback((string, dname) => {\n        try {\n            //TODO: need to check if string is valid csv\n            let tbl = csvFromString(string, dname);\n            let ds = props.datasets.slice();\n            ds.push(tbl);\n            props.loadDataset(ds);\n            setActiveTbl(tbl);\n        } catch (err) {\n            console.warn(\"Invalid data file: \" + dname);\n        }\n    }, [props]); \n\n    useEffect(() => {\n        let ds = queryParameters.get(\"dataset\");\n        if (ds && !urlDataset) {\n            setUrlDataset(ds);\n            fetch(\"/app/csv/\" + ds + \".csv\")\n                .then(response => {\n                    return response.text()\n                })\n                .then(result => {\n                    importDataset(result, ds);\n                });\n        }\n    }, [queryParameters, urlDataset, importDataset])\n    \n    const cols = useMemo(() => {\n        if (activeTbl === null) return [{Header: \" \", accessor: \" \"}];\n        else {\n            let fields = activeTbl.fields;\n            let result = [];\n            for (let f of fields) {\n                //if (f === \"atlas_rowId\") continue;\n                result.push({\n                    Header: f === \"atlas_rowId\" ? \"Row ID\" : f,\n                    accessor: f,\n                    filter: \"equals\",\n                    Cell: ({value}) => activeTbl.getRawValue(f, value)\n                })\n            }\n            return result;\n        }\n    }, [activeTbl])\n\n    const data = useMemo(() => {\n        if (activeTbl === null) return [{col: 1}];\n        else {\n            return dataScopeRows.slice(0, 500);\n            //return activeTbl.data.length > 500 ? activeTbl.data.slice(0, 500) : activeTbl.data;\n            //return activeTbl.data;\n        }\n    }, [activeTbl, dataScopeRows])\n\n    const initState = { hiddenColumns: ['atlas_rowId'] };\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({columns: cols, data: data, initialState: initState});\n\n    const importBtnClicked = function() {\n        inputFile.current.click();\n    }\n\n    const fileChanged = function(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        let f = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = function() {\n            addToStack(props.scene, props.datasets, props.undoStack);\n            let tbl = csvFromString(reader.result, f.name);\n            let ds = props.datasets.slice();\n            ds.push(tbl);\n            props.loadDataset(ds);\n            setActiveTbl(tbl);\n            // console.log(\"data imported\", props.selected);\n        }\n        if (f)\n            reader.readAsText(f);\n    }\n\n    const getHeaderIcon = function(field) {\n        if (!activeTbl)\n            return <span></span>;\n        switch (activeTbl.getFieldType(field)) {\n            case \"string\":\n                return <img src=\"/app/icons/string.png\" alt=\"(string) \" width=\"20px\" height=\"10px\" style={{\"margin\":\"0 4px 2px 0\"}}></img>;\n            case \"date\":\n                return <img src=\"/app/icons/date.png\" alt=\"(date) \" width=\"15px\" style={{\"margin\":\"0 3px 2px 0\"}}></img>;\n            default:\n                return <img src=\"/app/icons/number.png\" alt=\"(number) \" width=\"12px\" height=\"12px\" style={{\"margin\":\"0 2px 3px 0\"}}></img>;\n        }\n    }\n\n    useEffect(() => {\n        if (!props.datasets || props.datasets.length === 0) {\n            setActiveTbl(null);\n            //setAllFilters([]);\n            setDataScopeRows([]);\n            setDataScopeInfo(null);\n            return;\n        }\n        if (props.selected.length === 0 && !props.directSelected) {\n            setActiveTbl(props.datasets[0]);\n            //setAllFilters([]);\n            setDataScopeRows(props.datasets[0].data);\n            setDataScopeInfo(null);\n        } else if (props.selected.length > 0) {\n            const item = props.scene.getItem(props.selected[0]);\n            if (!item || item.type === \"axis\" || item.type === \"legend\" || immerable.type === \"gridlines\") {\n                setActiveTbl(props.datasets[0]);\n                //setAllFilters([]);\n                setDataScopeRows([]);\n                setDataScopeInfo(null);\n                return;\n            }\n            if (item.dataScope) {\n                setActiveTbl(item.dataScope.dataTable);\n                //const filters = item.dataScope.filters;\n                // let fs = [];\n                // for (let f in item.dataScope.filters) {\n                //     // let o = {};\n                //     // o[f] = item.dataScope.filters[f];\n                //     fs.push({id: f, value: item.dataScope.filters[f]});\n                // }\n                // console.log(fs);\n                //setAllFilters(fs);\n                // setFilter(f, filters[f]);\n                setDataScopeRows(item.dataScope.tuples);\n                setDataScopeInfo(\"Selected \" + item.type + \" has \" + item.dataScope.numTuples +  \" attached data rows\");\n            } else {\n                setActiveTbl(null);\n                //setAllFilters([]);\n                setDataScopeRows([]);\n                setDataScopeInfo(\"Selected \" + item.type + \" has no attached data\");\n            } \n        } else if (props.directSelected) {\n            const itm = props.scene.getItem(props.directSelected);\n            if (!itm) {\n                setActiveTbl(props.datasets[0]);\n                //setAllFilters([]);\n                setDataScopeRows([]);\n                setDataScopeInfo(null);\n            }\n            if (itm.dataScope) {\n                setActiveTbl(itm.dataScope.dataTable);\n                // const filters = itm.dataScope.filters;\n                // for (let f in filters) {\n                //     setFilter(f, filters[f]);\n                // }\n                // let fs = [];\n                // for (let f in itm.dataScope.filters) {\n                //     // let o = {};\n                //     // o[f] = item.dataScope.filters[f];\n                //     fs.push({id: f, value: itm.dataScope.filters[f]});\n                // }\n                // setAllFilters(fs);\n                setDataScopeRows(itm.dataScope.tuples);\n                setDataScopeInfo(\"Selected \" + itm.type + \" has \" + itm.dataScope.numTuples +  \" attached data rows\");\n            } else {\n                setActiveTbl(null);\n                //setAllFilters([]);\n                setDataScopeRows([]);\n                setDataScopeInfo(\"Selected \" + itm.type + \" has no attached data\");\n            } \n        }\n    }, [props.selected, props.directSelected, props.scene, props.datasets]);\n\n    return (\n        <div id=\"dataPanel\">\n            <div id=\"datasetInfo\">\n                {props.datasets.map(d => \n                <div className={activeTbl && activeTbl.id === d.id ? \"activeTableTab\" : \"tableTab\"} key={d.id} onClick={(e) => setActiveTbl(d)}>\n                    {d.name + \" (\" + d.getRowCount() + \" rows)\"}\n                </div>)}\n                <button id=\"csvBtn\" onClick={importBtnClicked}>Import Data</button>\n                <input type='file' id='file' ref={inputFile} style={{display: 'none'}} accept=\".csv\" onChange={fileChanged}/>\n            </div>\n            <div id=\"dataScopeInfo\" style={{display: dataScopeInfo ? \"block\" : \"none\"}}>\n                {dataScopeInfo ? dataScopeInfo : \"\"}\n            </div>\n            <div id=\"tableDiv\">\n                <table id=\"dataTable\" {...getTableProps()}>\n                        <thead>\n                            {// Loop over the header rows\n                                headerGroups.map(headerGroup => (\n                                    // Apply the header row props\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\n                                        {// Loop over the headers in each row\n                                            headerGroup.headers.map(column => (\n                                                // Apply the header cell props\n                                                <th {...column.getHeaderProps()}>\n                                                    {getHeaderIcon(column.Header)}\n                                                    {// Render the header\n                                                        column.render('Header')\n                                                    }\n                                                </th>\n                                            ))}\n                                    </tr>\n                                ))}\n                        </thead>\n                        {/* Apply the table body props */}\n                        <tbody {...getTableBodyProps()}>\n                            {// Loop over the table rows\n                                rows.map(row => {\n                                    // Prepare the row for display\n                                    prepareRow(row)\n                                    return (\n                                        // Apply the row props\n                                        <tr {...row.getRowProps()}>\n                                            {// Loop over the rows cells\n                                                row.cells.map(cell => {\n                                                    // Apply the cell props\n                                                    return (\n                                                        <td {...cell.getCellProps()}>\n                                                            {// Render the cell contents\n                                                                cell.render('Cell')}\n                                                        </td>\n                                                    )\n                                                })}\n                                        </tr>\n                                    )\n                                })}\n                        </tbody>\n                    </table> \n            </div>\n            \n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    directSelected: state.canvas.directSelected\n});\n\nexport default connect(mapStateToProps)(DataPanel);","import { useEffect, useState } from 'react';\nimport { SketchPicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport './css/InteractiveLegend.css';\n\nconst mapStateToProps = state => ({\n    legendClicked: state.canvas.legendClicked,\n});\n\nfunction InteractiveLegend(props) {\n\n    const [legend, setLegend] = useState(null);\n    const [color, setColor] = useState(\"#fff\");\n    const [value, setValue] = useState(null);\n    \n    useEffect(() => {\n        const l = props.legendClicked.legend, v = props.legendClicked.value;\n        if (l && v) {\n            d3.select(\"#legendColorPicker\").style(\"visibility\", \"visible\");\n            setLegend(props.scene.getItem(l));\n            setValue(v);\n            setColor(props.scene.getItem(l).encoding.scale.map(v));\n        } else {\n            d3.select(\"#legendColorPicker\").style(\"visibility\", \"hidden\");\n        }\n    }, [props.legendClicked, props.scene])\n    \n    const changeCompleted = (c, e) => {\n        setColor(c.hex);\n        const domain = legend.encoding.scale.domain, range = [];\n        for (let d of domain) {\n            if (d === value)\n                range.push(c.hex);\n            else\n                range.push(legend.encoding.scale.map(d));\n        }\n        legend.encoding.scale._setRange(range);\n        props.renderer.render(props.scene);\n    }\n\n    return (\n        <div id=\"legendColorPicker\">\n            <SketchPicker disableAlpha={true} color={color} onChangeComplete={changeCompleted}/>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps)(InteractiveLegend);","import Canvas from './Canvas';\nimport { useEffect, useState } from 'react';\nimport * as msc from \"mascot-vis\";\nimport EventLayer from './EventLayer';\nimport ToolBar from './ToolBar';\nimport Inspector from './Inspector';\nimport LayerView from './LayerView';\nimport DataPanel from './DataPanel';\nimport './css/App.css';\nimport store from \"./store\";\nimport { directSelect, select, toggleAxisHandle } from \"./canvasSlice\";\nimport InteractiveLegend from './InteractiveLegend';\nimport { useSearchParams } from 'react-router-dom';\n\nfunction Authoring(props) {\n\n  const [queryParameters] = useSearchParams();\n  const [renderer] = useState(msc.renderer(\"svg\", \"canvas\"));\n  const [scene, setScene] = useState(msc.scene());\n  // const [spec, setSpec] = useState(\"\");\n  const [datasets, setDatasets] = useState([]);\n  const [undoStack, setUndoStack] = useState([]); \n  const [redoStack, setRedoStack] = useState([]); \n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#ddd\";\n    document.body.style.overflow = \"hidden\";\n  }, [])\n\n  useEffect(() => {\n    let proj = queryParameters.get(\"project\");\n    if (proj) {\n      fetch(\"/app/scenes/\" + proj + \".msc\")\n      .then(response => {\n        return response.text()\n      })\n      .then(result => {\n        try {\n          const scn = JSON.parse(result);\n          loadScene(scn);\n        } catch (err) {\n          console.warn(\"Invalid project: \" + proj);\n        }\n      });\n    }\n  }, [queryParameters])\n\n  // useEffect(() => {\n  //   if (spec) {\n  //     fetch(\"app/scenes/\" + spec + \".msc\")\n  //     .then(response => response.json())\n  //     .then(result => {\n  //       loadScene(result);\n  //     });\n  //   }\n  // }, [spec]);\n\n  useEffect(() => {\n    store.dispatch(toggleAxisHandle({visible: false}));\n    store.dispatch(select([]));\n    store.dispatch(directSelect(null));\n    renderer.clear();\n    renderer.render(scene);\n  }, [renderer, scene]);\n\n  const loadScene = (json) => {\n    let loader = msc.sceneLoader();\n    let scn = loader.load(json);\n    setScene(scn);\n    setDatasets(Object.values(loader.tables));\n    //setDatasets(Object.values(scn.getDataTables()));\n  }\n\n  // const demos = [\n  //   \"Rect\",\n  //   \"BarChartHorz\",\n  //   \"BarChartVert\",\n  //   \"BoxPlot\",\n  //   \"BulletChart\",\n  //   \"DivergingBarChart\",\n  //   \"GanttChart\",\n  //   \"GroupedBarChart\",\n  //   \"HeatMap\",\n  //   \"Histogram\",\n  //   \"MosaicPlot\",\n  //   \"StackedBarChart\",\n  //   \"TowerChart\",\n  //   \"Treemap\",\n  //   \"WaffleChart\",\n  //   \"WaterfallChart\",\n  //   \"BubblePlot\",\n  //   \"CirclePacking\",\n  //   \"DotPlot\",\n  //   \"DoughnutChart\",\n  //   \"PieChart\",\n  //   \"RadialBarChart\",\n  //   \"Scatterplot\",\n  //   \"Sunburst\",\n  //   \"BumpChart\",\n  //   \"ConnectedScatterPlot\",\n  //   \"DumbbellChart\",\n  //   \"LineGraph\",\n  //   \"LineGraph2\",\n  //   \"LollipopChart\",\n  //   \"MultiLineGraph\",\n  //   \"ParallelCoordinates\",\n  //   \"RangeChart\",\n  //   \"SlopeGraph\",\n  //   \"StringlineChart\",\n  //   \"AreaChart\",\n  //   \"DensityPlot\",\n  //   \"RadarChart\",\n  //   \"RidgelinePlot\",\n  //   \"RoseChart\",\n  //   \"StackedAreaChart\",\n  //   \"StellarChart\",\n  //   \"StreamGraph\",\n  //   \"ViolinPlot\",\n  //   \"Isotype\",\n  //   \"GridAreaChart\",\n  //   \"MultipleBarCharts\",\n  //   \"MultipleBoxPlots\",\n  //   \"MultiplePieCharts\",\n  //   \"ScatterplotMatrix\",\n  //   \"Sparklines\",\n  //   \"GridStackedAreaChart\",\n  //   \"MultipleViolinPlots\"\n  // ]\n\n  // const loadDataset = (d) => {\n  //   setDatasets(datasets.concat([d]));\n  // }\n\n  const resetStacks = () => {\n    setUndoStack([]);\n    setRedoStack([]);\n  }\n\n  return (\n    <div style={{overflow: \"hidden\"}}>\n      <Canvas scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} redoStack={redoStack} type=\"svg\"></Canvas>\n      <EventLayer scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} redoStack={redoStack}></EventLayer>\n      {/* <div id=\"specList\" style={{display: 'none'}}>\n        <ul>\n          {demos.map(d => <li key={d} onClick={(e) => setSpec(d)}>{d}</li>)}\n        </ul>\n      </div> */}\n      {/* <div id=\"zoomCtrl\">\n        <button key=\"zoom+\" className=\"zoomBtn\" id=\"zoomInBtn\"></button>\n        <input type=\"range\" min=\"25\" max=\"400\" orient=\"vertical\" defaultValue=\"100\" step=\"25\" className=\"zoomSlider\" id=\"zoomSlider\" onChange={(e) => console.log(e)}></input>\n        <button key=\"zoom-\" className=\"zoomBtn\" id=\"zoomOutBtn\"></button>\n      </div> */}\n      <DataPanel scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} loadDataset={setDatasets}></DataPanel>\n      <LayerView scene={scene} renderer={renderer}></LayerView>\n      <ToolBar scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} redoStack={redoStack} resetStacks={resetStacks} loadScene={loadScene}></ToolBar>\n      <Inspector scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack}></Inspector>\n      <InteractiveLegend scene={scene} renderer={renderer}></InteractiveLegend>\n      <input type=\"text\" id=\"textElement\" style={{\"visibility\": 'hidden', \"position\": \"absolute\"}}></input>\n    </div>\n  )\n}\n\nexport default Authoring;\n","import Canvas from './Canvas';\nimport { useEffect, useState } from 'react';\nimport * as msc from \"mascot-vis\";\nimport EventLayer from './EventLayer';\nimport ToolBar from './ToolBar';\nimport Inspector from './Inspector';\nimport LayerView from './LayerView';\nimport DataPanel from './DataPanel';\nimport './css/App.css';\nimport store from \"./store\";\nimport { select } from \"./canvasSlice\";\n\nfunction Templating(props) {\n    const renderer = msc.renderer(\"svg\", \"canvas\");\n    const [scene, setScene] = useState(msc.scene());\n    const [spec, setSpec] = useState('BarChartHorz');\n  \n    useEffect(() => {\n      document.body.style.backgroundColor = \"#ddd\";\n      document.body.style.overflow = \"hidden\";\n    }, [])\n  \n    useEffect(() => {\n      loadScene(\"specs/\" + spec + \".json\");\n    }, [spec]);\n  \n    useEffect(() => {\n      renderer.clear();\n      renderer.render(scene);\n    }, [renderer, scene]);\n  \n    const loadScene = async (url) => {\n      const spec = await loadJSON(url);\n      let exe = msc.specExecutor();\n      let scene = await exe.run(spec);\n      store.dispatch(select([]));\n      setScene(scene);\n    }\n  \n    const demos = [\n      \"BarChartHorz\",\n      \"BarChartVert\",\n      \"BoxPlot\",\n      \"BulletChart\",\n      \"DivergingBarChart\",\n      \"GanttChart\",\n      \"GroupedBarChart\",\n      \"HeatMap\",\n      \"Histogram\",\n      \"MosaicPlot\",\n      \"StackedBarChart\",\n      \"TowerChart\",\n      \"Treemap\",\n      \"WaffleChart\",\n      \"WaterfallChart\"\n    ]\n  \n    return (\n      <div style={{overflow: \"hidden\"}}>\n        <Canvas scene={scene} renderer={renderer} type=\"svg\"></Canvas>\n        <EventLayer scene={scene} renderer={renderer}></EventLayer>\n        <div id=\"specList\">\n          <ul>\n            {demos.map(d => <li key={d} onClick={(e) => setSpec(d)}>{d}</li>)}\n          </ul>\n        </div>\n        <DataPanel scene={scene} renderer={renderer}></DataPanel>\n        <LayerView scene={scene} renderer={renderer}></LayerView>\n        <Inspector scene={scene} renderer={renderer}></Inspector>\n        <ToolBar></ToolBar>\n      </div>\n    )\n}\n\nasync function loadJSON(url) {\n    const response = await fetch(url);\n    const text = await response.text();\n    let json = JSON.parse(text);\n    return json;\n  }\n\nexport default Templating;","import './css/App.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Authoring from './Authoring';\nimport Templating from './Templating';\n\nwindow.onbeforeunload = (event) => {\n  const e = event || window.event;\n  // Cancel the event\n  e.preventDefault();\n  if (e) {\n    e.returnValue = ''; // Legacy method for cross browser support\n  }\n  return ''; // Legacy method for cross browser support\n};\n\nfunction App(props) {\n  return (\n    <Router basename={'/app'}>\n      <div>\n        <Routes>\n          <Route path = \"/\" element={<Authoring/>}/>\n          <Route path = \"/reuse\" element={<Templating/>}/>\n        </Routes>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/bootstrap.min.css';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}