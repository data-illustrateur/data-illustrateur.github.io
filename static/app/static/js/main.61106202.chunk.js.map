{"version":3,"sources":["canvasSlice.js","toolSlice.js","store.js","Defs.js","Util.js","tools/PolylineTool.js","Canvas.js","tools/SelectionUI.js","tools/SelectTool.js","tools/DirectSelectTool.js","tools/RectTool.js","tools/CircleTool.js","tools/RingTool.js","tools/LineTool.js","EventLayer.js","tools/TextTool.js","ToolBar.js","Inspector.js","LayerView.js","DataPanel.js","InteractiveLegend.js","Authoring.js","Templating.js","App.js","reportWebVitals.js","index.js"],"names":["canvasSlice","createSlice","name","initialState","selected","directSelected","directSelectPreview","rectSelectRegion","itemUpdated","scaleUpdated","axisHandleVisible","legendClicked","dataItemJoined","newItemCreated","itemsDeleted","undoStackChanged","redoStackChanged","reducers","select","state","action","payload","directSelect","rectSelect","draw","console","log","updateItem","updateScale","toggleAxisHandle","customizeColorPalette","joinDataItem","createNewItem","deleteItems","updateUndoStack","updateRedoStack","actions","toolSlice","activeTool","activateTool","configureStore","reducer","canvas","tool","properties","channel","accessor","options","display","value","undefined","parameters","id","addToStack","scene","datasets","stack","type","stackType","scn","toJSON","t","tables","push","JSON","stringify","store","dispatch","length","getSVGPathData","items","vxSize","d","i","bounds","b","left","top","join","right","bottom","size","Math","max","width","height","radius","x","y","getAggregator","item","getItem","dataScope","numTuples","enc","getEncodingByItem","aggregator","getScaleType","scale","canShareScale","channel1","channel2","c","indexOf","getDefaultCollectionLayout","numItems","ar","doubleGap","layout","rowGap","colGap","atlas","getPositionInScene","clientX","clientY","rect","document","getElementById","getBoundingClientRect","getPropertyDef","itemType","prop","replace","toUpperCase","getPropertyID","g","p","pts","updateUI","vx","vy","d3","style","attr","finish","renderer","undoStack","r","mark","vertices","render","connect","resizeX","resizeY","props","useEffect","translateByKey","s","getState","translate","ds","itm","parent","_doTranslate","addEventListener","e","key","removeItem","map","PolylineTool","className","getHandlePosition","nw","n","ne","se","sw","w","axisHandlePosition","updateAxisHandlePosition","axis","x1","y1","x2","y2","wd","ht","tx","ty","h","middle","isFlipped","center","text","encoding","rangeExtent","toFixed","redrawRect","styles","attrs","a","resizeStarted","getResizeBounds","itmBounds","dx","dy","handles","downX","downY","selectAll","call","on","resizing","this","toChange","xRef","yRef","fs","floor","parseInt","fontSize","setProperties","resizeEnded","peers","getPeersInScene","peerPathData","clone","cnt","parentStyles","itms","union","redrawSelection","seg","vertex1","vertex2","redrawDirectSelection","cb","cellBounds","numCols","numRows","data","abs","rects","enter","append","merge","sourceEvent","stopPropagation","datum","o","exit","remove","redrawGridGaps","redrawDirectSelectPreview","visible","dir","newRE","getEncodedChannels","autoUpdateTicks","strokeWidth","stroke","fill","fontWeight","clickHeld","rectRegion","dragging","activeItem","itemX","itemY","hitTest","cg","sel","hit","dragItem","newX","newY","pathY","pathX","pathPosition","moved","EventLayer","onDoubleClick","children","child","SelectTool","onMouseDown","preventDefault","fieldType","pathHitTest","v","getFieldValue","legend","button","RectTool","CircleTool","RingTool","DirectSelectTool","LineTool","onMouseMove","pos","min","itmInSelection","shiftKey","cx","cy","angle","atan2","PI","angleR","round","dist","sqrt","pow","cos","sin","lp","onMouseUp","m","newSel","concat","filter","fillColor","outerRadius","innerRadius","anchor","property","fontFamily","focus","TextTool","tools","getUsableTbls","dataTable","getOrientations","cmd","useDispatch","inputFile","useRef","useState","showRepeatModal","setShowRepeatModal","setCmd","tbls","setTbls","fields","setFields","orientations","setOrientations","joinMsg","setJoinMsg","switchTool","updatePreview","empty","clear","dataset","field","duplicate","strokeColor","addChild","coll","repeat","getUniqueFieldValues","vb","divide","orientation","densify","updateMsg","num","vals","msg","classed","evt","CustomEvent","bubbles","cancelable","dispatchEvent","canRepeat","canDivide","canDensify","redoStack","onClick","current","click","ref","accept","onChange","f","target","files","reader","FileReader","onload","loadScene","parse","result","resetStacks","readAsText","getDataTables","fname","Object","values","saveAs","Blob","svg","source","XMLSerializer","serializeToString","match","pop","title","getAttribute","usedFields","firstChild","keys","nonNumericFields","Modal","show","onShow","backdrop","keyboard","Header","Title","Body","Footer","Button","variant","reCreateRelatedAxes","headerClasses","classes","class","updatePropertyControl","propDef","val","sizeBound","positionBound","encodable","removeEncoding","info","anyItem","disabled","group","ct","na","params","paramDef","ori","vertexShapeUpdated","currentColor","setCurrentColor","currentColorPropDef","setCurrentColorPropDef","currentDataTable","setCurrentDataTable","pastLayouts","setPastLayouts","def","panel","setCategoricalValue","ctrl","l","unshift","find","getDefaultLayout","setNumericValue","parseFloat","isNaN","encode","guide","highlightAxis","createNumericControl","createStringControl","onInput","setStringValue","createBooleanControl","setBooleanValue","CustomToggle","React","forwardRef","href","createPropertyControl","Dropdown","Toggle","bsPrefix","Menu","Form","Group","Stack","direction","gap","Label","Select","defaultValue","changeScaleType","aggr","changeAggregator","range","step","margin","float","createColorControl","createCategoryControl","getEncodableFields","scales","itmKey","encodings","encs","getFieldType","getReusableScales","Item","k","drop","as","onMouseEnter","onMouseLeave","disableAlpha","color","onChangeComplete","hex","enumerateLayers","list","level","getLayerId","classId","layers","forEach","index","lv","slice","substring","getScene","getPeers","getLayerLabel","activeTbl","setActiveTbl","dataScopeInfo","setDataScopeInfo","cols","useMemo","Cell","getRawValue","col","useTable","columns","hiddenColumns","useFilters","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","setAllFilters","getHeaderIcon","src","alt","filters","getRowCount","tbl","csvFromString","loadDataset","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","row","getRowProps","cells","cell","getCellProps","setLegend","setColor","setValue","domain","_setRange","Authoring","setScene","spec","setSpec","setDatasets","setUndoStack","setRedoStack","body","backgroundColor","overflow","fetch","then","response","json","loader","load","loadJSON","url","Templating","exe","run","App","basename","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.61106202.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const canvasSlice = createSlice({\n  name: 'canvas',\n  initialState: {\n    selected: [],\n    directSelected: null,\n    directSelectPreview: null,\n    rectSelectRegion: {},\n    //item properties updated\n    itemUpdated: {},\n    //scale range or domain updated\n    scaleUpdated: {},\n    axisHandleVisible: false,\n    legendClicked: {},\n    dataItemJoined: {},\n    newItemCreated: {},\n    itemsDeleted: [],\n    undoStackChanged: {\"length\" : 0},\n    redoStackChanged: {\"length\" : 0}\n  },\n  reducers: {\n    select: (state, action) => {\n      state.selected = action.payload;\n    },\n    directSelect: (state, action) => {\n      state.directSelected = action.payload;\n    },\n    directSelectPreview: (state, action) => {\n      state.directSelectPreview = action.payload;\n    },\n    rectSelect: (state, action) => {\n      state.rectSelectRegion = action.payload;\n    },\n    draw: (state, action) => {\n      console.log(action);\n    },\n    updateItem: (state, action) => {\n      state.itemUpdated = action.payload;\n    },\n    updateScale: (state, action) => {\n      state.scaleUpdated = action.payload;\n    },\n    toggleAxisHandle: (state, action) => {\n      state.axisHandleVisible = action.payload;\n    },\n    customizeColorPalette: (state, action) => {\n      state.legendClicked = action.payload;\n    },\n    joinDataItem: (state, action) => {\n      state.dataItemJoined = action.payload;\n    },\n    createNewItem: (state, action) => {\n      state.newItemCreated = action.payload;\n    },\n    deleteItems: (state, action) => {\n      state.itemsDeleted = action.payload;\n    },\n    updateUndoStack: (state, action) => {\n      state.undoStackChanged = action.payload\n    },\n    updateRedoStack: (state, action) => {\n      state.redoStackChanged = action.payload\n    },\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { select, directSelect, directSelectPreview, rectSelect, draw, updateItem, updateScale, toggleAxisHandle, customizeColorPalette, joinDataItem, createNewItem, deleteItems, updateUndoStack, updateRedoStack } = canvasSlice.actions;\n\nexport default canvasSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\n\nexport const toolSlice = createSlice({\n  name: 'tool',\n  initialState: {\n    activeTool: \"Select\",\n  },\n  reducers: {\n    activateTool: (state, action) => {\n      state.activeTool = action.payload;\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { activateTool } = toolSlice.actions;\n\nexport default toolSlice.reducer;","import { configureStore } from '@reduxjs/toolkit'\nimport canvasSlice from './canvasSlice'\nimport toolSlice from './toolSlice'\n\nexport default configureStore({\n  reducer: {\n    canvas: canvasSlice,\n    tool: toolSlice\n  }\n})","const properties = {\n    // \"Peers\": {\n    //     \"Count\": {\"id\": \"sibling-count\", \"group\": \"Peers\", \"type\": \"numeric-range\", \"range\": [1, 100],\n    //         \"class\": [\"line-sibling-count-prop\", \"circle-sibling-count-prop\", \"rect-sibling-count-prop\", \"path-sibling-count-prop\", \"text-sibling-count-prop\", \"repeat-grid-sibling-count-prop\", \"partition-sibling-count-prop\", \"group-sibling-count-prop\"]},\n    //     \"Ordered By\": {\n    //         \"id\": \"peers-ordered-by\", \"group\": \"Peers\", \"type\": \"categorical\",\n    //         \"class\": [\"line-peers-ordered-by-prop\", \"circle-peers-ordered-by-prop\", \"rect-peers-ordered-by-prop\",\n    //             \"path-peers-ordered-by-prop\", \"text-peers-ordered-by-prop\", \"repeat-grid-peers-ordered-by-prop\",\n    //             \"partition-peers-ordered-by-prop\"],\n    //         \"options\": [{display:\"Data Source Order\", value: \"data-source-order\"}]\n    //     }\n    // },\n\n    \"Shape Position\": {\n        //need to add path-position-prop so that we can have \"scatterplots of paths\"\n        \"X\": {\"id\": \"x\", channel: \"x\", \"group\": \"Shape Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"pointText-prop\", \"path-prop\", \"polygon-prop\", \"image-prop\", \"group-prop\", \"area-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"y\", channel: \"y\", \"group\": \"Shape Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"pointText-prop\", \"path-prop\", \"polygon-prop\", \"image-prop\", \"group-prop\", \"area-prop\"], accessor: [\"y\"]},\n        \"Baseline\": {\"id\": \"baseline\", \"group\": \"Shape Position\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"area-prop\"], accessor: [\"baseline\"],\n            options: [{display:\"top\", value:'top'},\n            {display:\"middle\", value:'middle'},\n            {display:\"bottom\", value:'bottom'},\n            {display:\"left\", value:'left'},\n            {display:\"center\", value:'center'},\n            {display:\"right\", value:'right'}]\n        }\n    },\n\n    \"Segment Position\": {\n        \"X\": {\"id\": \"segmentX\", channel: \"x\", \"group\": \"Segment Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"segment-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"segmentY\", channel: \"y\", \"group\": \"Segment Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"segment-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Vertex Position\": {\n        \"X\": {\"id\": \"vxX\", channel: \"x\", \"group\": \"Vertex Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"vxY\", channel: \"y\", \"group\": \"Vertex Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Size\": {\n        \"Width\": {\"id\": \"width\", channel: \"width\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"rect-prop\", \"path-prop\", \"image-prop\", \"area-prop\"], accessor: [\"bounds\",\"width\"]},\n        \"Height\": {\"id\": \"height\", channel: \"height\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"rect-prop\", \"path-prop\", \"image-prop\", \"area-prop\"], accessor: [\"bounds\",\"height\"]},\n        \"Radius\": {\"id\": \"radius\", channel: \"radius\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"circle-prop\"], accessor: [\"radius\"]},\n        \"Inner Radius\": {\"id\": \"innerRadius\", channel: \"innerRadius\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"ring-prop\"], accessor: [\"innerRadius\"]},\n        \"Outer Radius\": {\"id\": \"outerRadius\", channel: \"outerRadius\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"ring-prop\"], accessor: [\"outerRadius\"]},\n        \"Angle\": {\"id\": \"angle\", channel: \"angle\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"pie-prop\"], accessor: [\"angle\"]},\n        \"Thickness\": {\"id\": \"thickness\", channel: \"thickness\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"ring-prop\"], accessor: [\"thickness\"]},\n        \"Area\": {\"id\": \"area\", channel: \"area\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"rect-prop\", \"circle-prop\"], accessor: [\"area\"]}\n    },\n\n    \"Text\": {\n        \"Content\": {\"id\": \"content\", channel: \"text\",  \"group\": \"Text\", \"type\": \"string\", \"encodable\": true, \"class\": [\"pointText-prop\"], accessor:[\"text\"]},\n        \"Font\": {\"id\": \"fontFamily\", channel: \"fontFamily\", \"group\": \"Text\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"pointText-prop\"], accessor:[\"fontFamily\"],\n            \"options\": [\n                {display:\"Arial\", value:\"Arial, sans-serif\"},\n                {display:\"Alegreya Sans\", value:\"'Alegreya Sans', sans-serif\"},\n                {display:\"Alegreya\", value:\"'Alegreya', serif\"},\n                {display:\"Calibri\", value:\"Calibri, sans-serif\"},\n                {display:\"Cambria\", value:\"Cambria, sans-serif\"},\n                {display:\"Chivo\", value:\"'Chivo', sans-serif\"},\n                {display:\"Comic Sans MS\", value:\"'Comic Sans MS', sans-serif\"},\n                {display:\"Consolas\", value:\"Consolas, monospace\"},\n                {display:\"Cormorant\", value:\"'Cormorant', serif\"},\n                {display:\"Courier New\", value:\"'Courier New', Courier, monospace\"},\n                {display:\"Eczar\", value:\"'Eczar', serif\"},\n                {display:\"Fira Sans\", value:\"'Fira Sans', sans-serif\"},\n                {display:\"Futura\", value:\"Futura, sans-serif\"},\n                {display:\"Georgia\", value:\"Georgia, serif\"},\n                {display:\"Helvetica Neue\", value:\"'HelveticaNeue', 'Helvetica Neue', 'HelveticaNeueRoman', 'HelveticaNeue-Roman', 'Helvetica Neue Roman', sans-serif\"},\n                {display:\"Impact\", value:\"Impact, Charcoal, sans-serif\"},\n                {display:\"Palatino\", value:\"Palatino, serif\"},\n                {display:\"Libre Franklin\", value:\"'Libre Franklin', sans-serif\"},\n                {display:\"Playfair Display\", value:\"'Playfair Display', serif\"},\n                {display:\"Playfair Display SC\", value:\"'Playfair Display SC', serif\"},\n                {display:\"Rubik\", value:\"'Rubik', sans-serif\"},\n                {display:\"Space Mono\", value:\"'Space Mono', monospace\"},\n                {display:\"Times New Roman\", value:\"'Times New Roman', TimesNewRoman, serif\"},\n                {display:\"Trebuchet MS\", value:\"'Trebuchet MS', sans-serif\"},\n                {display:\"Verdana\", value:\"Verdana, Geneva, sans-serif\"},\n                {display:\"Work Sans\", value:\"'Work Sans', sans-serif\"}\n            ]},\n        \"Color\": {\"id\": \"textColor\", channel: \"fillColor\", \"group\": \"Text\", \"type\": \"color\", \"encodable\": true, \"class\": [\"pointText-prop\"], accessor:[\"fillColor\"]},\n        \"Weight\": {\"id\": \"fontWeight\", channel: \"fontWeight\",  \"group\": \"Text\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"pointText-prop\"], accessor:[\"fontWeight\"], \"options\": [\n            {display: \"normal\", value: \"normal\"},\n            {display: \"bold\", value: \"bold\"}\n        ]},\n        \"Size (px)\": {\"id\": \"fontSize\", channel: \"fontSize\",  \"group\": \"Text\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"pointText-prop\"], accessor:[\"fontSize\"]},\n    },\n\n    \"Vertex Style\": {\n        \"Shape\": {\"id\": \"vxShape\", channel: \"shape\",  \"group\": \"Vertex Style\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"vertex-prop\"], accessor:[\"shape\"], \"options\": [\n            {display: \"none\", value: undefined},\n            {display: \"rectangle\", value: \"rect\"},\n            {display: \"circle\", value: \"circle\"}\n        ]},\n        \"Width\": {\"id\": \"vxWidth\", \"channel\": \"width\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"width\"]},\n        \"Height\": {\"id\": \"vxHeight\", \"channel\": \"height\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"height\"]},\n        \"Radius\": {\"id\": \"vxRadius\", \"channel\": \"radius\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"radius\"]},\n        \"Fill Color\": {\"id\": \"vxFillColor\", \"channel\": \"fillColor\", \"group\": \"Vertex Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"fillColor\"]},\n        \"Stroke Color\": {\"id\": \"vxStrokeColor\", \"channel\": \"strokeColor\", \"group\": \"Vertex Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"strokeColor\"]},\n        \"Stroke Width\": {\"id\": \"vxStrokeWidth\", \"channel\": \"strokeWidth\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"strokeWidth\"]},\n        \"Opacity\": {\"id\": \"vxOpacity\", \"channel\": \"opacity\", \"group\": \"Vertex Style\", \"type\": \"numeric-range\", \"encodable\": false, \"class\": [\"vertex-prop\"], \"range\": [0, 1], accessor: [\"opacity\"]},\n    },\n\n    \"Style\": {\n        // \"Descriptor\": {\"id\": \"collection-descriptor\", \"group\": \"Style\", \"type\": \"categorical\", \"class\": [\"collection-prop\", \"partition-prop\"], \"options\": [\n        //     {display:\"Show\", value:'Show'},{display:\"Hide\", value:'Hide'}\n        // ]},\n        \"Curve Mode\": {\"id\": \"curveMode\", \"channel\": \"curveMode\", \"group\": \"Style\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"path-prop\", \"area-prop\"], accessor: [\"curveMode\"],\n            \"options\": [\n                {\"display\": \"Natural\", value: \"natural\", parameters: []},\n                {\"display\": \"Basis\", value: \"basis\", parameters: []},\n                {\"display\": \"BumpX\", value: \"bumpX\", parameters: []},\n                {\"display\": \"BumpY\", value: \"bumpY\", parameters: []},\n                {\"display\": \"Linear\", value: \"linear\", parameters: []},\n                {\"display\": \"Step\", value: \"step\", parameters: []},\n                {\"display\": \"CatmullRom\", value: \"CatmullRom\", parameters: []},\n                {\"display\": \"Cardinal\", value: \"cardinal\", parameters: []}\n            ]\n        },\n        \"Fill Color\": {\"id\": \"fillColor\", \"channel\": \"fillColor\", \"group\": \"Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], accessor: [\"fillColor\"]},\n        \"Stroke Color\": {\"id\": \"strokeColor\", \"channel\": \"strokeColor\", \"group\": \"Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], accessor: [\"strokeColor\"]},\n        \"Stroke Width\": {\"id\": \"strokeWidth\", \"channel\": \"strokeWidth\", \"group\": \"Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], accessor: [\"strokeWidth\"]},\n        \"Opacity\": {\"id\": \"opacity\", \"channel\": \"opacity\", \"group\": \"Style\", \"type\": \"numeric-range\", \"encodable\": false, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], \"range\": [0, 1], accessor: [\"opacity\"]}\n\n    },\n\n    \"Canvas\": {\n        \"Background\": {\"id\": \"canvasFillColor\", \"group\": \"canvas\", \"type\": \"color\", \"encodable\": false, \"class\": [\"canvas-prop\"], \"accessor\": [\"fillColor\"]}\n    },\n\n    \"Collection Position\": {\n        \"X\": {\"id\": \"collectionX\", channel: \"x\", \"group\": \"Collection Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"collection-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"collectionY\", channel: \"y\", \"group\": \"Collection Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"collection-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Glyph Position\": {\n        \"X\": {\"id\": \"glyphX\", channel: \"x\", \"group\": \"Glyph Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"glyph-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"glyphY\", channel: \"y\", \"group\": \"Glyph Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"glyph-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Layout\": {\n        \"Type\": {\"id\": \"layoutType\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"collection-prop\", \"grid-prop\", \"stack-prop\", \"none-prop\"],\n            \"options\": [{display:\"Grid\", value:'grid', parameters: ['Num Rows', 'Num Columns', 'Row Gap', 'Column Gap', 'Horz Gravity', 'Vert Gravity']},\n                        {display:\"Stack\", value:'stack', parameters: ['Orientation', 'Horz Gravity', 'Vert Gravity']},\n                        {display:\"Pack\", value:'packing', parameters: []},\n                        {display:\"Treemap\", value:'treemap', parameters: []},\n                        {display:\"None\", value:'none', parameters: []}\n                        ]\n        },\n        \"Num Rows\": {\"id\": \"numRows\", \"group\": \"Layout\", \"type\": \"numeric-integer\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"numRows\"]},\n        \"Num Columns\": {\"id\": \"numCols\", \"group\": \"Layout\", \"type\": \"numeric-integer\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"numCols\"]},\n        \"Row Gap\": {\"id\": \"rowGap\", \"group\": \"Layout\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"rowGap\"]},\n        \"Column Gap\": {\"id\": \"colGap\", \"group\": \"Layout\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"colGap\"]},\n        \"Orientation\": {\"id\": \"orientation\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"stack-prop\", \"layout-prop\"], accessor: [\"orientation\"], \n            \"options\": [{\"display\": \"Horizontal\", value: \"horizontal\", parameters: []}, {\"display\": \"Vertical\", value: \"vertical\", parameters: []}]\n        },\n        \"Horz Gravity\": {\"id\": \"horzGravity\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"grid-prop\", \"stack-prop\", \"layout-prop\"], accessor: [\"horzCellAlignment\"], \n            \"options\": [{\"display\": \"Left\", value: \"left\", parameters: []}, {\"display\": \"Center\", value: \"center\", parameters: []}, {\"display\": \"Right\", value: \"right\", parameters: []}]\n        },\n        \"Vert Gravity\": {\"id\": \"vertGravity\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"grid-prop\", \"stack-prop\", \"layout-prop\"], accessor: [\"vertCellAlignment\"], \n            \"options\": [{\"display\": \"Top\", value: \"top\", parameters: []}, {\"display\": \"Middle\", value: \"middle\", parameters: []}, {\"display\": \"Bottom\", value: \"bottom\", parameters: []}]\n        },\n        //\"Gap\": {\"id\": \"gap\", \"group\": \"Layout\", \"type\": \"numeric\", \"class\": [\"partition-prop\"]},\n    },\n\n    \"Axis\": {\n        \"Include 0\": {id: \"includeZero\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"includeZero\"]},\n        \"Show Path\": {id: \"showPath\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"pathVisible\"]},\n        \"Show Ticks\": {id: \"showTicks\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"tickVisible\"]},\n        \"Orientation\": {\"id\": \"axisOrientation\", \"group\": \"axis\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"orientation\"],\n            \"options\": [{display:\"top\", value:'top'},\n                        {display:\"bottom\", value:'bottom'},\n                        {display:\"left\", value:'left'},\n                        {display:\"right\", value:'right'}]\n        },\n        \"Stroke Color\": {\"id\": \"axisStrokeColor\", \"group\": \"axis\", \"type\": \"color\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"strokeColor\"]},\n        \"Text Color\": {\"id\": \"axisTextColor\", \"group\": \"axis\", \"type\": \"color\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"textColor\"]},\n        \"Path Position\": {\"id\": \"pathPos\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"pathPosition\"]},\n        \"Tick Offset\": {\"id\": \"tickOffset\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"tickOffset\"]},\n        \"Tick Size\": {\"id\": \"tickSize\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"tickSize\"]},\n        \"Label Offset\": {\"id\": \"labelOffset\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"labelOffset\"]},\n        \"Label Format\": {\"id\": \"labelFormat\", \"group\": \"axis\", \"type\": \"string\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"labelFormat\"]},\n        \"Show Title\": {id: \"showTitle\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"showTitle\"]},\n    },\n\n    \"Legend\": {\n        // \"X\": {\"id\": \"legendX\", channel: \"x\", \"group\": \"legend\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"legend-prop\"], accessor: [\"x\"]},\n        // \"Y\": {\"id\": \"legendY\", channel: \"y\", \"group\": \"legend\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"legend-prop\"], accessor: [\"y\"]},\n        \"Text Color\": {\"id\": \"legendTextColor\", \"group\": \"legend\", \"type\": \"color\", \"encodable\": false, \"class\": [\"legend-prop\"], \"accessor\": [\"textColor\"]}\n    },\n\n    \"Gridlines\": {\n        \"Stroke Color\": {\"id\": \"gridlineStrokeColor\", \"group\": \"Gridlines\", \"type\": \"color\", \"encodable\": false, \"class\": [\"gridlines-prop\"], accessor: [\"strokeColor\"]},\n        \"Stroke Width\": {\"id\": \"gridlineStrokeWidth\", \"group\": \"Gridlines\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"gridlines-prop\"], accessor: [\"strokeWidth\"]}\n    },\n\n    \"Alignment in Cell\": {\n        \"Horizontal\": {\"id\": \"x-constraint\", \"group\": \"Float\", \"type\": \"categorical\", \"encodable\": false,\n            \"class\": [\"line-constraint-prop\", \"circle-constraint-prop\", \"rect-constraint-prop\", \"text-constraint-prop\",\"repeat-grid-constraint-prop\", \"partition-constraint-prop\"],\n            \"options\": [{display:\"Off\", value:'off'}, {display:\"Left\", value:'left'},{display:\"Center\", value:'center'},{display:\"Right\", value:'right'}]},\n        \"Vertical\": {\"id\": \"y-constraint\", \"group\": \"Float\", \"type\": \"categorical\", \"encodable\": false,\n            \"class\": [\"line-constraint-prop\", \"circle-constraint-prop\", \"rect-constraint-prop\", \"text-constraint-prop\",\"repeat-grid-constraint-prop\", \"partition-constraint-prop\"],\n            \"options\": [{display:\"Off\", value:'off'}, {display:\"Top\", value:'top'},{display:\"Middle\", value:'middle'},{display:\"Bottom\", value:'bottom'}]}\n    }\n};\n\nexport { properties }","import { properties } from \"./Defs\";\nimport * as atlas from \"atlas-vis\";\nimport store from \"./store\";\nimport { updateRedoStack, updateUndoStack } from \"./canvasSlice\";\n\nconst addToStack = (scene, datasets, stack, type) => {\n    let stackType = type ? type : \"undo\";\n    let scn = scene.toJSON();\n    for (let t of datasets) {\n        if (!(t.id in scn.tables)) {\n            scn.tables[t.id] = t.toJSON();\n        }\n    }\n    // let s = stack.slice();\n    // s.push(JSON.stringify(scn));\n    // setStack(s);\n    stack.push(JSON.stringify(scn));\n    // console.log(\"added to stack\", stackType, stack.length);\n    if (stackType === \"undo\")\n        store.dispatch(updateUndoStack({\"length\": stack.length}));\n    else if (stackType === \"redo\")\n        store.dispatch(updateRedoStack({\"length\": stack.length}));\n}\n\nconst getSVGPathData = (items, vxSize) => {\n    let d = \"\";\n    for (let i of items) {\n        if (i.getSVGPathData)\n            d += i.getSVGPathData();\n        else if (i.bounds) {\n            let b = i.bounds;\n            d += [\"M\", b.left, b.top].join(\" \");\n            d += [\"L\", b.right, b.top].join(\" \");\n            d += [\"L\", b.right, b.bottom].join(\" \");\n            d += [\"L\", b.left, b.bottom, \"Z\"].join(\" \");\n        } else if (i.type === \"vertex\") {\n            let size = Math.max(i.width, i.height, i.radius, vxSize);\n            d += [\"M\", i.x - size/2, i.y - size/2].join(\" \");\n            d += [\"L\", i.x + size/2, i.y - size/2].join(\" \");\n            d += [\"L\", i.x + size/2, i.y + size/2].join(\" \");\n            d += [\"L\", i.x - size/2, i.y + size/2, \"Z\"].join(\" \");\n        }\n    }\n    return d;\n}\n\n// const getPathVerticesData = (p, vertexSize) => {\n//     let d = \"\";\n//     for (let v of p.vertices) {\n//         let size = Math.max(v.width, v.height, v.radius, vertexSize);\n//         d += [\"M\", v.x - size/2, v.y - size/2].join(\" \");\n//         d += [\"L\", v.x + size/2, v.y - size/2].join(\" \");\n//         d += [\"L\", v.x + size/2, v.y + size/2].join(\" \");\n//         d += [\"L\", v.x - size/2, v.y + size/2, \"Z\"].join(\" \");\n//     }\n//     return d;\n// }\n\nconst getReusableScales = (fieldType, channel, scene) => {\n    let r = {};\n    for (let itmKey in scene.encodings) {\n        let encs = scene.encodings[itmKey];\n        for (let c in encs) {\n            let enc = encs[c];\n            if (canShareScale(c, channel) && enc.dataTable.getFieldType(enc.field) === fieldType) {\n                if (!(enc.scale.id in r))\n                    r[enc.scale.id] = [];\n                r[enc.scale.id].push(enc);\n            }   \n        }\n    }\n    return r;\n}\n\nconst getAggregator = (channel, selected, directSelected, scene) => {\n    let item;\n    if (selected.length >= 1) {\n        item = scene.getItem(selected[0]);\n    } else if (directSelected) {\n        item = scene.getItem(directSelected);\n    }\n    if (!item) return null;\n    if (!item.dataScope) return null;\n    if (item.dataScope.numTuples === 1) return null; \n    let enc = scene.getEncodingByItem(item, channel);\n    if (!enc) return null;\n    return enc.aggregator;\n}\n\nconst getScaleType = (channel, selected, directSelected, scene) => {\n    let item;\n    if (selected.length >= 1) {\n        item = scene.getItem(selected[0]);\n    } else if (directSelected) {\n        item = scene.getItem(directSelected);\n    }\n    if (!item) return null;\n    let enc = scene.getEncodingByItem(item, channel);\n    if (!enc) return null;\n    return enc.scale.type;\n}\n\nconst canShareScale = (channel1, channel2) => {\n    const candidates = [[\"x\", \"width\"], [\"y\", \"height\"], [\"fillColor\", \"strokeColor\"]];\n    for (let c of candidates) {\n        if (c.indexOf(channel1) >= 0 && c.indexOf(channel2) >= 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst getDefaultCollectionLayout = (item, numItems) => {\n    let ar = item.bounds.width/item.bounds.height,\n        doubleGap = item.type === \"collection\" && item.layout && item.layout.type === \"grid\",\n        rowGap = doubleGap ? item.layout.rowGap * 2 : 5,\n        colGap = doubleGap ? item.layout.colGap * 2 : 5;\n    // if (numItems > 50) {\n    //     return atlas.layout(\"grid\", {\"numRows\": Math.floor(Math.sqrt(numItems)), \"rowGap\": rowGap, \"colGap\": colGap});\n    // } else {\n    if (ar > 2) {\n        return atlas.layout(\"grid\", {\"numCols\": 1, \"rowGap\": rowGap});\n    } else {\n        return atlas.layout(\"grid\", {\"numRows\": 1, \"colGap\": colGap});\n    }\n    //}\n}\n\nconst getPositionInScene = (clientX, clientY) => {\n    const rect = document.getElementById(\"canvas\").getBoundingClientRect();\n    return [clientX - rect.x, clientY - rect.y];\n}\n\nconst getPositionInWindow = (sceneX, sceneY) => {\n    const rect = document.getElementById(\"canvas\").getBoundingClientRect();\n    return [sceneX + rect.x, rect.y + sceneY];\n}\n\nconst getDefaultLayout = (layout) => {\n    switch (layout) {\n        case \"stack\":\n            return atlas.layout(\"stack\", {orientation: \"vertical\"});\n        case \"packing\":\n            return atlas.layout(\"packing\");\n        case \"none\":\n            return undefined;\n        case \"grid\":\n        default:\n            return atlas.layout(\"grid\", {numRows: 1});\n    }\n}\n\nconst getPropertyID = (itemType, prop) => {\n    switch (itemType) {\n        case \"vertex\":\n            return \"vx\" + prop.replace(/^\\w/, c => c.toUpperCase());;\n        case \"scene\":\n            return \"canvas\" + prop.replace(/^\\w/, c => c.toUpperCase());;\n        case \"collection\": \n        case \"segment\":\n        case \"legend\":\n            return itemType + prop.replace(/^\\w/, c => c.toUpperCase());\n        default:\n            return prop;\n    }\n}\n\nconst getPropertyDef = (itemType, prop) => {\n    const id = getPropertyID(itemType, prop);\n    for (let g in properties) {\n        for (let p in properties[g]) {\n            if (properties[g][p].id === id)\n                return properties[g][p];\n        }\n    }\n    return null;\n}\n\nexport {addToStack, getSVGPathData, getDefaultLayout, getScaleType, getAggregator, getReusableScales, getPositionInScene, getPositionInWindow, getPropertyID, getPropertyDef, getDefaultCollectionLayout};","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet pts = [], x = undefined, y = undefined;\n\nexport const mouseDown = (e, scene) => {\n    //const p = getPositionInScene(e.clientX, e.clientY);\n    //pts.push([p[0], p[1]]);\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    if (x !== undefined && y !== undefined) {\n        let dist = Math.sqrt(Math.pow(x - pts[0][0], 2) + Math.pow(y - pts[0][1], 2));\n        if (dist < 2 && pts.length > 2) {\n            pts.push([pts[0][0], pts[0][1]]);\n            finish(scene, datasets, renderer, undoStack);\n        } else {\n            pts.push([x, y]);\n            updateUI();\n        }\n    } else {\n        const p = getPositionInScene(e.clientX, e.clientY);\n        pts.push([p[0], p[1]]);\n    }\n    d3.select(\"#selectionUI\").select(\"#vertexPreview\").style(\"visibility\", \"hidden\");\n}\n\nexport const updateUI = () => {\n    let d = [\"M\", pts[0][0], pts[0][1]].join(\" \");\n    for (let i = 1; i < pts.length; i++) {\n        let vx = pts[i][0], vy = pts[i][1];\n        if (vx === pts[0][0] && vy === pts[0][1]) {\n            d += \"Z\";\n        } else {\n            d += [\"L\", pts[i][0], pts[i][1]].join(\" \");\n        }\n    }\n    if (x !== undefined && y !== undefined)\n        d += [\"L\", x, y].join(\" \");\n    d3.select(\"#polylineToolUI\").style(\"visibility\", \"visible\").style(\"fill\", \"none\").attr(\"d\", d);\n}\n\nexport const mouseMove = (e, scene) => {\n    if (pts.length === 0) return;\n    let p = getPositionInScene(e.clientX, e.clientY), lp = pts[pts.length-1];\n    if (e.shiftKey) {\n        let angle = Math.atan2(p[1] - lp[1], p[0] - lp[0]) * 180 / Math.PI,\n            angleR = Math.round(angle/45) * 45 * Math.PI/180, \n            dist = Math.sqrt(Math.pow(p[1] - lp[1], 2) + Math.pow(p[0] - lp[0], 2));\n        x = lp[0] + Math.cos(angleR) * dist;\n        y = lp[1] + Math.sin(angleR) * dist;\n    } else {\n        x = p[0];\n        y = p[1];\n    }\n    let dist = Math.sqrt(Math.pow(x - pts[0][0], 2) + Math.pow(y - pts[0][1], 2));\n    if (dist < 2 && pts.length > 2) {\n        d3.select(\"#selectionUI\").select(\"#vertexPreview\").attr(\"x\", pts[0][0] - 5).attr(\"y\", pts[0][1] - 5)\n            .attr(\"width\", 10).attr(\"height\", 10).style(\"visibility\", \"visible\");\n    } else {\n        d3.select(\"#selectionUI\").select(\"#vertexPreview\").style(\"visibility\", \"hidden\");\n    }\n    updateUI();\n}\n\nexport const finish = (scene, datasets, renderer, undoStack) => {\n    if (!pts || pts.length === 0) {\n        return;\n    }\n    updateUI();\n    d3.select(\"#polylineToolUI\").style(\"visibility\", \"hidden\");\n    if (pts.length > 1) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"path\", {vertices: pts});\n        store.dispatch(createNewItem(r.id));\n        //store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    pts = [];\n    x = undefined;\n    y = undefined;\n}","import React from \"react\";\nimport './css/Canvas.css';\nimport { connect } from \"react-redux\";\nimport { useEffect } from 'react';\nimport { deleteItems, select, updateItem } from \"./canvasSlice\";\nimport store from \"./store\";\nimport * as PolylineTool from \"./tools/PolylineTool\";\n\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    itemUpdated: state.canvas.itemUpdated,\n    scaleUpdated: state.canvas.scaleUpdated,\n    dataItemJoined: state.canvas.dataItemJoined,\n    itemsDeleted: state.canvas.itemsDeleted\n});\n\nfunction Canvas(props) {\n\n    useEffect(() => {\n        props.renderer.render(props.scene);\n    }, [props.scene, props.renderer, props.itemUpdated, props.scaleUpdated, props.dataItemJoined, props.itemsDeleted])\n\n    useEffect(() => {\n\n        const translateByKey = (x, y) => {\n            let s = store.getState().canvas.selected;\n            if (s && s.length > 0) {\n                let item = props.scene.getItem(s[0]);\n                if (item) {\n                    props.scene.translate(item, x, y);\n                    store.dispatch(updateItem({id: item.id, type: item.type, properties: {x: item.x, y: item.y}}));\n                }\n            }\n            let ds = store.getState().canvas.directSelected;\n            if (ds) {\n                let itm = props.scene.getItem(ds);\n                if (itm.parent.type === \"path\") {\n                    itm._doTranslate(x, y);\n                    store.dispatch(updateItem({id: itm.parent.id, type: itm.parent.type, properties: {x: itm.parent.x, y: itm.parent.y}}));\n                }\n            }\n        }\n\n        document.addEventListener('keydown', (e) => {\n            // e.preventDefault();\n            // e.stopPropagation();\n            switch(e.key) {\n                case \"Delete\": {\n                    let s = store.getState().canvas.selected;\n                    if (s && s.length > 0) {\n                        for (let i = s.length - 1; i >= 0; i--) {\n                            let item = props.scene.getItem(s[i]);\n                            if (item && item.parent === props.scene) {\n                                store.dispatch(select([]));\n                                props.scene.removeItem(item);\n                                store.dispatch(deleteItems([item].map(d => d.id)));\n                            }\n                        }\n                    }\n                    break;\n                }\n                case \"ArrowLeft\": {\n                    translateByKey(-5, 0);\n                    break;\n                }\n                case \"ArrowRight\": {\n                    translateByKey(5, 0);\n                    break;\n                }\n                case \"ArrowUp\": {\n                    translateByKey(0, -5);\n                    break;\n                }\n                case \"ArrowDown\": {\n                    translateByKey(0, 5);\n                    break;\n                }\n                case \"Escape\": {\n                    if (store.getState().tool.activeTool === \"Pen\") {\n                        PolylineTool.finish(props.scene, props.datasets, props.renderer, props.undoStack);\n                    }\n                    break;\n                }\n                default:\n                    break;\n            }\n        });\n    },[props.scene, props.datasets, props.renderer, props.undoStack])\n\n    switch(props.type) {\n        case \"canvas\":\n            return (\n                <canvas className=\"canvas\" id=\"canvas\"></canvas>\n            );\n        default:\n        case \"svg\":\n            return (\n                <svg className=\"canvas\" id=\"canvas\"></svg>\n            );\n    }\n}\n\nexport default connect(mapStateToProps)(Canvas);;","import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as d3 from 'd3';\nimport store from \"../store\";\nimport { updateItem, updateScale } from \"../canvasSlice\";\nimport { getSVGPathData } from \"../Util\";\nimport { getPeersInScene } from \"atlas-vis\";\n\nconst getHandlePosition = {\n    nw: (b) => ({x: b.left, y: b.top}),\n    n: (b) => ({x: b.x, y: b.top}),\n    ne: (b) => ({x: b.right, y: b.top}),\n    e: (b) => ({x: b.right, y: b.y}),\n    se: (b) => ({x: b.right, y: b.bottom}),\n    s: (b) => ({x: b.x, y: b.bottom}),\n    sw: (b) => ({x: b.left, y: b.bottom}),\n    w: (b) => ({x: b.left, y: b.y})\n}\n\nlet axisHandlePosition = undefined;\nconst showAxisHandle = (scene, axis) => {\n    if (!axis) return;\n    const h = d3.select(\"#axisHandle\").style(\"visibility\", \"visible\");\n    h.select(\"rect\").call(d3.drag()\n        .on(\"start\", function(e) {\n            if (axis.channel === \"x\" || axis.channel === \"width\") {\n                axisHandlePosition = axis.bounds.middle;\n            } else if (axis.channel === \"y\" || axis.channel === \"height\") {\n                axisHandlePosition = axis.bounds.center;\n            }\n        })\n        .on(\"end\", function(e) {\n            axisHandlePosition = undefined;\n        })\n        .on(\"drag\", function(e) {\n            e.sourceEvent.stopPropagation();\n            let dir = axis.isFlipped ? -1 : 1;\n            const scale = axis.encoding.scale;\n            if (axis.channel === \"x\" || axis.channel === \"width\") {\n                let newRE = scale.rangeExtent + e.dx * dir;\n                if (newRE <= 0) {\n                    if (scale.getEncodedChannels().indexOf(\"width\") < 0)\n                        scale.isFlipped = !scale.isFlipped;\n                    else\n                        return;\n                }\n                axis.encoding.scale.rangeExtent = newRE;\n                axis.autoUpdateTicks();\n            } else if (axis.channel === \"y\" || axis.channel === \"height\") {\n                let newRE = scale.rangeExtent - e.dy * dir;\n                if (newRE <= 0) {\n                    if (scale.getEncodedChannels().indexOf(\"height\") < 0)\n                        scale.isFlipped = !scale.isFlipped;\n                    else\n                        return;\n                }\n                axis.encoding.scale.rangeExtent = newRE;\n                axis.autoUpdateTicks();\n            }\n            store.dispatch(updateScale({id: axis.encoding.scale.id, type: axis.encoding.scale.type, axis: axis.id}));\n        }));\n    updateAxisHandlePosition(axis);\n}\n\nconst updateAxisHandlePosition = (axis) => {\n    if (!axis) return;\n    const h = d3.select(\"#axisHandle\");\n    let x1, y1, x2, y2, x, y, wd, ht, tx, ty;\n    switch (axis.channel) {\n        case \"x\":\n        case \"width\":\n            x1 = axis.bounds.left;\n            y1 = axisHandlePosition ? axisHandlePosition : axis.bounds.middle;\n            x2 = axis.bounds.right;\n            y2 = y1;\n            wd = 45;\n            ht = 16;\n            x = axis.isFlipped ? axis.bounds.left : axis.bounds.right - wd;\n            y = y1 - ht/2;\n            tx = x + 5;\n            ty = y + ht/2;\n            h.select(\"text\").style(\"writing-mode\", \"lr\")\n            break;\n        case \"y\":\n        case \"height\":\n            x1 = axisHandlePosition ? axisHandlePosition : axis.bounds.center;\n            y1 = axis.bounds.top;\n            x2 = x1;\n            y2 = axis.bounds.bottom;\n            wd = 16;\n            ht = 45;\n            x = x1 - wd/2;\n            y = axis.isFlipped ? axis.bounds.bottom - ht : axis.bounds.top;\n            tx = x1 + 3;\n            ty = y + 5;\n            h.select(\"text\").style(\"writing-mode\", \"tb\").style(\"glyph-orientation-vertical\", 0);\n            break;\n        default:\n            break;\n    }\n    h.select(\"line\").attr(\"x1\", x1).attr(\"x2\", x2).attr(\"y1\", y1).attr(\"y2\", y2);\n    h.select(\"rect\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", wd).attr(\"height\", ht).attr(\"rx\", 6).attr(\"ry\", 6);\n    h.select(\"text\").text(axis.encoding.scale.rangeExtent.toFixed(0) + \"px\").attr(\"x\", tx).attr(\"y\", ty);\n}\n\nconst hideAxisHandle = () => {\n    d3.select(\"#axisHandle\").style(\"visibility\", \"hidden\");\n}\n\nconst redrawRect = (b, styles, rect) => {\n    const attrs = {\n        \"x\": b.left,\n        \"y\": b.top, \n        \"width\": b.width,\n        \"height\": b.height\n    };\n    for (let a in attrs)\n        rect.attr(a, attrs[a]);\n    for (let s in styles)\n        rect.style(s, styles[s]);\n};\n\nconst redrawSelection = (selected, scene) => {\n    //clear selection first\n    d3.select(\"#selectionUI\").selectAll(\"circle\").style(\"visibility\", \"hidden\");\n    d3.select(\"#handleG\").style(\"visibility\", \"hidden\");\n    d3.selectAll(\".openGroup\").style(\"visibility\", \"hidden\");\n    d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n    d3.select(\"#selectPeerOutline\").style(\"visibility\", \"hidden\");\n    d3.select(\"#boundsOutline\").style(\"visibility\", \"hidden\");\n    \n    if (selected.length === 1) {\n        const itm = scene.getItem(selected[0]);\n        if (!itm) return;\n        //draw peer outline\n        let peers = getPeersInScene(itm);\n        if (peers.length > 1) {\n            let peerPathData = getSVGPathData(peers, 2);\n            d3.select(\"#selectPeerOutline\").style(\"visibility\", \"visible\").attr(\"d\", peerPathData);\n        }\n\n        //draw item outline\n        let styles, b;\n        if (itm.type === \"collection\" || itm.type === \"axis\" || itm.type === \"legend\") {\n            styles = {\"stroke\": \"#1ecb40\", \"stroke-dasharray\": \"5,5\", \"stroke-width\": 2, \"fill\": \"none\"};\n        } else {\n            styles = {\"stroke\": \"#1592e6\", \"stroke-dasharray\": \"none\", \"stroke-width\": 1.5,  \"fill\": \"none\"};\n        }\n        if (itm.type === \"legend\") {\n            b = itm.bounds.clone();\n            b.left -= 10;\n            b.top -= 10;\n            b.width += 20;\n            b.height += 20;\n        } else {\n            b = itm.bounds;\n        }\n        if (itm.type === \"path\" || itm.type === \"area\" || itm.type === \"polygon\" || itm.type === \"arc\" || itm.type === \"pie\") {\n            d3.select(\"#boundsOutline\").style(\"visibility\", \"hidden\");\n            d3.select(\"#pathOutline\").style(\"visibility\", \"visible\");\n            d3.select(\"#pathSegments\").attr(\"d\", itm.getSVGPathData());\n            d3.select(\"#pathVertices\").attr(\"d\", getSVGPathData(itm.vertices, 2));\n        } else {\n            d3.select(\"#boundsOutline\").style(\"visibility\", \"visible\");\n            d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n            //d3.select(\"#itemOutline\").style(\"visibility\", \"visible\");\n            redrawRect(b, styles, d3.select(\"#boundsOutline\"));\n        }\n\n        //draw parents\n        d3.selectAll(\".openGroup\").style(\"visibility\", \"hidden\");\n        let parent = itm.parent, cnt = 1;\n        const parentStyles = {\"stroke\": \"#1ecb40\", \"stroke-width\": 4, \"fill\": \"none\", \"opacity\": 0.15, \"visibility\": \"visible\"};\n        while (parent && parent.type !== \"scene\") {\n            redrawRect(parent.bounds, parentStyles, d3.select(\"#openGroup\"+cnt));\n            parent = parent.parent;\n            cnt += 1;\n        }\n\n        //draw handles\n        d3.select(\"#handleG\").style(\"visibility\", \"visible\");\n        const g = d3.select(\"#selectionUI\"), resizable = [\"rect\", \"circle\", \"line\", \"pointText\"];\n        if (resizable.indexOf(itm.type) < 0) {\n            g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n            return;\n        } \n        \n        for (let h of handles) {\n            let p = getHandlePosition[h](b);\n            g.select(\".\" + h).style(\"cursor\", h+\"-resize\").attr(\"cx\", p.x).attr(\"cy\", p.y).style(\"visibility\", \"visible\");\n        }\n\n        if (itm.type === \"line\") {\n            if (itm.bounds.width === 0) {\n                g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n                g.select(\".n\").style(\"visibility\", \"visible\");\n                g.select(\".s\").style(\"visibility\", \"visible\");\n            }\n            if (itm.bounds.height === 0) {\n                g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n                g.select(\".e\").style(\"visibility\", \"visible\");\n                g.select(\".w\").style(\"visibility\", \"visible\");\n            }\n        } else if (itm.type === \"pointText\") {\n            //todo: show se anchor\n            g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n            g.select(\".se\").style(\"visibility\", \"visible\");\n        } \n    } else if (selected.length > 1) {\n        const itms = selected.map(d => scene.getItem(d));\n        d3.select(\"#handleG\").style(\"visibility\", \"visible\");\n        let styles = {\"stroke\": \"#1592e6\", \"stroke-dasharray\": \"none\", \"stroke-width\": 1.5,  \"fill\": \"none\", \"visibility\": \"visible\"};\n        let bounds = itms[0].bounds.clone();\n        for (let i = 1; i < itms.length; i++)\n            bounds = bounds.union(itms[i].bounds);\n        redrawRect(bounds, styles, d3.select(\"#boundsOutline\"));\n        d3.select(\"#selectPeerOutline\").style(\"visibility\", \"hidden\");\n        d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n    }\n}\n\nconst redrawDirectSelection = (directSelected, scene) => {\n    d3.selectAll(\".directSelectPreview\").style(\"visibility\", \"hidden\");\n    if (directSelected) {\n        const itm = scene.getItem(directSelected);\n        if (!itm) {\n            d3.selectAll(\".directSelected\").style(\"visibility\", \"hidden\");\n            d3.select(\"#directSelectPeerOutline\").style(\"visibility\", \"hidden\");\n            return;\n        }\n        //draw peer outline\n        let peers = getPeersInScene(itm);\n        if (peers.length > 1) {\n            let peerPathData = getSVGPathData(peers, 4);\n            d3.select(\"#directSelectPeerOutline\").style(\"visibility\", \"visible\").attr(\"d\", peerPathData);\n        }\n\n        const styles = {\"stroke\": \"#1592e6\", \"stroke-width\": 2, \"fill\": \"none\", \"visibility\": \"visible\"};\n        if (itm.type === \"segment\") {\n            let seg = d3.select(\"#segment\").attr(\"x1\", itm.vertex1.x).attr(\"y1\", itm.vertex1.y)\n                        .attr(\"x2\", itm.vertex2.x).attr(\"y2\", itm.vertex2.y);\n            for (let s in styles)\n                seg.style(s, styles[s]);\n            d3.select(\"#vertex\").style(\"visibility\", \"hidden\");\n        } else {\n            let b = {left: itm.x - 2, top: itm.y - 2, width: 4, height: 4};\n            redrawRect(b, styles, d3.select(\"#vertex\"));\n            d3.select(\"#segment\").style(\"visibility\", \"hidden\");\n        } \n    } else {\n        d3.selectAll(\".directSelected\").style(\"visibility\", \"hidden\");\n        d3.select(\"#directSelectPeerOutline\").style(\"visibility\", \"hidden\");\n    }\n}\n\nconst redrawDirectSelectPreview = (directSelected, scene) => {\n    d3.selectAll(\".directSelectPreview\").style(\"visibility\", \"hidden\");\n    if (directSelected) {\n        const itm = scene.getItem(directSelected);\n        if (!itm) return;\n        const styles = {\"stroke\": \"#79AFE0\", \"stroke-width\": 2, \"fill\": \"none\", \"visibility\": \"visible\"};\n        if (itm.type === \"segment\") {\n            let seg = d3.select(\"#segmentPreview\").attr(\"x1\", itm.vertex1.x).attr(\"y1\", itm.vertex1.y)\n                        .attr(\"x2\", itm.vertex2.x).attr(\"y2\", itm.vertex2.y);\n            for (let s in styles)\n                seg.style(s, styles[s]);\n        } else {\n            let b = {left: itm.x - 3, top: itm.y - 3, width: 6, height: 6};\n            redrawRect(b, styles, d3.select(\"#vertexPreview\"));\n        } \n    }\n}\n\nconst redrawGridGaps = (selected, scene) => {\n    if (selected.length === 1) {\n        const itm = scene.getItem(selected[0]);\n        if (itm && itm.type === \"collection\" && itm.layout && itm.layout.type === \"grid\") {\n            const layout = itm.layout, cb = layout.cellBounds, numCols = layout.numCols, numRows = layout.numRows;\n            let data = [];// numRects = numCols + numRows - 2;\n            for (let i = 0; i < numCols - 1; i++) {\n                let x = layout.colGap < 0 ? cb[i].right + layout.colGap : cb[i].right;\n                data.push({x: x, y: cb[i].top, width: Math.abs(layout.colGap), height: itm.bounds.height, type: \"c\"});\n            }\n            for (let i = 0; i < numRows - 1; i++) {\n                let y = layout.rowGap < 0 ? cb[i * numCols].bottom + layout.rowGap : cb[i * numCols].bottom;\n                data.push({x: cb[0].left, y: y, width: itm.bounds.width, height: Math.abs(layout.rowGap), type: \"r\"});\n            }\n            let rects = d3.select(\"#gridGaps\").style(\"visibility\", \"visible\").selectAll(\"rect\").data(data);\n            rects.enter().append(\"rect\").merge(rects)\n                .attr(\"x\", d => d.x).attr(\"y\", d => d.y)\n                .attr(\"width\", d => d.width).attr(\"height\", d => d.height)\n                .style(\"fill\", \"pink\").style(\"opacity\", 0.2)\n                .style(\"cursor\", d => d.type === \"r\" ? \"ns-resize\" : \"ew-resize\")\n                .call(d3.drag().on(\"drag\", function(e) {\n                    e.sourceEvent.stopPropagation();\n                    const type = d3.select(this).datum().type;\n                    let o = {}, g = type === \"r\" ? \"rowGap\" : \"colGap\", d = type === \"r\" ? e.dy : e.dx;\n                    o[g] = itm.layout[g] + d;\n                    scene.setProperties(itm.layout, o);\n                    store.dispatch(updateItem({id: selected[0], type: itm.type, properties: o}));\n                }))\n                ;\n            rects.exit().remove();\n        } else {\n            d3.select(\"#gridGaps\").style(\"visibility\", \"hidden\");\n        }\n    } else {\n        d3.select(\"#gridGaps\").style(\"visibility\", \"hidden\");\n    }\n}\n\nvar resizeX, resizeY;\n\nconst resizeStarted = (e) => {\n    resizeX = e.x;\n    resizeY = e.y;\n};\n\nconst resizing = function(e, h, selected) {\n    let dx = e.x - resizeX, dy = e.y - resizeY;\n    let b = getResizeBounds(h, selected.bounds, dx, dy);\n    let g = d3.select(\"#handleG\");\n    d3.select(\"#boundsOutline\").attr(\"x\", b.left).attr(\"y\", b.top).attr(\"width\", b.width).attr(\"height\", b.height);\n    for (let h of handles) {\n        let p = getHandlePosition[h](b);\n        g.select(\".\" + h).attr(\"cx\", p.x).attr(\"cy\", p.y);\n    }\n};\n\nconst resizeEnded = function(e, h, selected, scene) {\n    let dx = e.x - resizeX, dy = e.y - resizeY;\n    let b = getResizeBounds(h, selected.bounds, dx, dy);\n    let toChange;\n    if (selected.type === \"rect\" || selected.type === \"line\") {\n        toChange = {width: b.width, height: b.height, xRef: (h.indexOf(\"e\") < 0 ? \"right\" : \"left\"), yRef: (h.indexOf(\"n\") < 0 ? \"top\" : \"bottom\")};\n    } else if (selected.type === \"circle\") {\n        toChange = {radius: Math.max(b.width, b.height)/2};\n    } else if (selected.type === \"pointText\") {\n        let fs = Math.floor(parseInt(selected.fontSize) * b.width/selected.bounds.width);\n        fs = Math.max(4, fs);\n        toChange = {\"fontSize\": fs+\"px\"}\n    }\n\n    if (toChange) {\n        scene.setProperties(selected, toChange);\n        store.dispatch(updateItem({id: selected.id, type: selected.type, properties: toChange}));\n    }\n};\n\nconst getResizeBounds = (h, itmBounds, dx, dy) => {\n    let b = {\n        top: itmBounds.top,\n        height: itmBounds.height,\n        left: itmBounds.left,\n        width: itmBounds.width\n    };\n\n    if (h.indexOf(\"s\") >= 0) {\n        if (dy < -itmBounds.height + 1)\n            dy = -itmBounds.height + 1;\n        b.height += dy;\n    } else if (h.indexOf(\"n\") >= 0) {\n        if (dy > itmBounds.height - 1)\n            dy = itmBounds.height - 1;\n        b.height -= dy;\n        b.top += dy;   \n    }\n\n    if (h.indexOf(\"e\") >= 0) {\n        if (dx < -itmBounds.width + 1)\n            dx = -itmBounds.width + 1;\n        b.width += dx;\n    } else if (h.indexOf(\"w\") >= 0) {\n        if (dx > itmBounds.width - 1)\n            dx = itmBounds.width - 1;\n        b.left += dx;\n        b.width -= dx;\n    }\n\n    b.right = b.left + b.width;\n    b.bottom = b.top + b.height;\n    b.x = (b.left + b.right)/2;\n    b.y = (b.top + b.bottom)/2;\n\n    return b;\n}\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    directSelected: state.canvas.directSelected,\n    directSelectPreview: state.canvas.directSelectPreview,\n    itemUpdated: state.canvas.itemUpdated,\n    axisHandleVisible: state.canvas.axisHandleVisible,\n    scaleUpdated: state.canvas.scaleUpdated,\n    rectSelectRegion: state.canvas.rectSelectRegion\n});\n\nconst handles = [\"nw\", \"n\", \"ne\", \"w\", \"sw\", \"s\", \"se\", \"e\"];\n\nfunction SelectionUI(props) {\n\n    useEffect(() => {\n        if (props.selected.length === 0) return;\n        let selected = props.scene.getItem(props.selected[0]);\n        d3.select(\"#selectionUI\").selectAll(\"circle\").style(\"stroke\", \"#1592e6\").style(\"fill\", \"white\")\n            .call(d3.drag().on(\"start\", resizeStarted).on(\"drag\", function(e) { resizing(e, d3.select(this).attr(\"class\"), selected) })\n            .on(\"end\", function(e) {\n                resizeEnded(e, d3.select(this).attr(\"class\"), selected, props.scene);\n            }))\n    }, [props.scene, props.selected]);\n\n    useEffect(() => {\n        redrawSelection(props.selected, props.scene);\n        redrawDirectSelection(props.directSelected, props.scene);\n        redrawGridGaps(props.selected, props.scene);\n    }, [props.scene, props.selected, props.directSelected, props.itemUpdated, props.scaleUpdated]);\n\n    useEffect(() => {\n        redrawDirectSelectPreview(props.directSelectPreview, props.scene);\n    }, [props.directSelectPreview, props.scene])\n\n    useEffect(() => {\n        if (props.axisHandleVisible.visible)\n            showAxisHandle(props.scene, props.scene.getItem(props.axisHandleVisible.axis));\n        else\n            hideAxisHandle();\n    }, [props.scene, props.axisHandleVisible]);\n\n    useEffect(() => {\n        if (props.rectSelectRegion.width === 0 || props.rectSelectRegion.height === 0)\n            d3.select(\"#rectSelectRegion\").style(\"visibility\", \"hidden\");\n        const styles = {\"stroke\": \"#ccc\", \"stroke-width\": 2, \"fill\": \"none\", \"stroke-dasharray\": \"5,5\", \"opacity\": 1, \"visibility\": \"visible\"};\n        redrawRect(props.rectSelectRegion, styles, d3.select(\"#rectSelectRegion\"));\n    }, [props.rectSelectRegion]);\n\n    useEffect(() => {\n        if (props.scaleUpdated.axis)\n            updateAxisHandlePosition(props.scene.getItem(props.scaleUpdated.axis));\n    }, [props.scene, props.scaleUpdated]);\n\n    return (\n        <g id=\"selectionUI\">\n            <rect id=\"openGroup1\" className=\"openGroup\"></rect>\n            <rect id=\"openGroup2\" className=\"openGroup\"></rect>\n            <rect id=\"openGroup3\" className=\"openGroup\"></rect>\n            <rect id=\"openGroup4\" className=\"openGroup\"></rect>\n            <path id=\"selectPeerOutline\" style={{\"stroke\": \"#60bdf0\", \"strokeWidth\": 1,  \"fill\": \"none\"}}></path>\n            <path id=\"directSelectPeerOutline\" style={{\"stroke\": \"#60bdf0\", \"strokeWidth\": 1,  \"fill\": \"none\"}}></path>\n            <rect id=\"boundsOutline\"></rect>\n            <g id=\"handleG\">\n                {handles.map(h => <circle key={h} className={h} r=\"4\"></circle>)}\n            </g>\n            <g id=\"axisHandle\">\n                <line style={{strokeWidth:\"2px\", stroke:\"#1ecb40\"}}></line>\n                <rect style={{fill:\"#1ecb40\"}}></rect>\n                <text style={{fill:\"white\", \"fontSize\": \"11px\", \"pointerEvents\": \"none\", fontWeight: \"bold\", \"alignmentBaseline\": \"middle\", \"dominantBaseline\": \"middle\"}}></text>\n            </g>\n            <g id=\"pathOutline\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": 2,  \"fill\": \"none\"}}>\n                <path id=\"pathSegments\"></path>\n                <path id=\"pathVertices\"></path>\n            </g>\n            <g id=\"gridGaps\">\n                <rect></rect>\n            </g>\n            <rect id=\"rectSelectRegion\"></rect>\n            <line id=\"segment\" className=\"directSelected\"></line>\n            <rect id=\"vertex\" className=\"directSelected\"></rect>\n            <line id=\"segmentPreview\" className=\"directSelectPreview\"></line>\n            <rect id=\"vertexPreview\" className=\"directSelectPreview\"></rect>\n        </g>\n    )\n}\n\nexport default connect(mapStateToProps)(SelectionUI);\nexport {showAxisHandle, hideAxisHandle};","import store from \"../store\";\nimport { getPositionInScene } from \"../Util\";\nimport * as atlas from \"atlas-vis\";\nimport { select, toggleAxisHandle, customizeColorPalette, rectSelect } from \"../canvasSlice\";\nimport { updateItem } from \"../canvasSlice\";\n\nvar clickHeld = false, rectRegion = false, dragging = false, activeItem = null, downX, downY, itemX = {}, itemY = {};\n\nexport const hitTest = (e, scene) => {\n    const p = getPositionInScene(e.clientX, e.clientY);\n    const cg = store.getState().canvas.selected;\n    //if nothing is selected, find target among scene's children\n    if (cg.length === 0) {\n        return atlas.hitTest(scene, p[0], p[1]);\n    }\n    const sel = scene.getItem(cg[0]);\n    if (sel.type === \"axis\" || sel.type === \"legend\") {\n        return atlas.hitTest(scene, p[0], p[1]);\n    } else {\n        //if selected is leaf, find target among its parent's children\n        //this is useful for selecting a sibling of the current selection\n        let itm = sel.parent;\n        while (itm) {\n            let hit = atlas.hitTest(itm, p[0], p[1]);\n            if (hit) return hit;\n            else itm = itm.parent;\n        }\n        return null;\n    }\n}\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    downX = e.clientX;\n    downY = e.clientY;\n    let itm = hitTest(e, scene);\n    if (itm !== null && itm.type === \"legend\") {\n        if (itm.channel.indexOf(\"Color\") > 0 && itm.fieldType === \"string\") {\n            const p = getPositionInScene(e.clientX, e.clientY);\n            const mark = itm.pathHitTest(p[0], p[1]);\n            if (mark !== null) {\n                //customize categorical color mapping\n                const v = mark.dataScope.getFieldValue(\"category\");\n                store.dispatch(customizeColorPalette({legend: itm.id, value: v}));\n                return;\n            }\n        }\n    }\n\n    store.dispatch(customizeColorPalette({legend: null, value: null}));\n    activeItem = itm;\n    if (itm === null && e.button === 0) {\n        rectRegion = true;\n    } else if (itm !== null) {\n        itemX[itm.id] = itm.type === \"axis\" && (itm.channel === \"y\" || itm.channel === \"height\") ? itm.pathX : itm.x;\n        itemY[itm.id] = itm.type === \"axis\" && (itm.channel === \"x\" || itm.channel === \"width\") ? itm.pathY : itm.y;\n    }\n}\n\nconst dragItem = (item, scene, newX, newY, dx, dy) => {\n    if (item.type === \"axis\") {\n        if (item.channel === \"x\" || item.channel === \"width\") {\n            item.pathY = newY;\n        } else if (item.channel === \"y\" || item.channel === \"height\") {\n            item.pathX = newX;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: {pathPosition: item.pathPosition}}));\n    } else {\n        scene.translate(item, dx, dy);\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: {x: item.x, y: item.y}}));\n    }\n}\n\nexport const mouseMove = (e, scene, renderer) => {\n\n    if (!clickHeld) { //hovering\n        const item = hitTest(e, scene);\n        if (item && item.type === \"axis\" && item.encoding) {\n            store.dispatch(toggleAxisHandle({axis: item.id, visible: true}));\n        } else {\n            store.dispatch(toggleAxisHandle({visible: false}));\n        }\n        return;\n    }\n \n    //clickHeld\n    if (rectRegion) { //rect select\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: wd, height: ht}));\n    } else if (activeItem) { //dragging\n        let sel = store.getState().canvas.selected, itmInSelection = sel.indexOf(activeItem.id) >= 0;;\n        if (sel.length === 0 || !itmInSelection) {\n            store.dispatch(select([activeItem.id]));\n            dragging = true;\n            dragItem(activeItem, scene, itemX[activeItem.id] + e.clientX - downX, itemY[activeItem.id] + e.clientY - downY, itemX[activeItem.id] + e.clientX - downX - activeItem.x, itemY[activeItem.id] + e.clientY - downY - activeItem.y);\n        } else if (itmInSelection) {\n            dragging = true;\n            for (let s of store.getState().canvas.selected) {\n                const item = scene.getItem(s);\n                dragItem(item, scene, itemX[item.id] + e.clientX - downX, itemY[item.id] + e.clientY - downY, itemX[item.id] + e.clientX - downX - item.x, itemY[item.id] + e.clientY - downY - item.y);\n            }\n        } \n        \n        // const s1 = store.getState().canvas.selected[0];\n        // if (!s1) return;\n    }\n}\n\nexport const mouseUp = (e, scene) => {\n    if (rectRegion) {\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: 0, height: 0}));\n        let r = {left: left, top: top, width: wd, height: ht, right: left + wd, bottom: top + ht};\n        let itms = atlas.rectHitTest(scene, r).map(d => d.id);\n        for (let m of itms) {\n            const itm = scene.getItem(m);\n            itemX[itm.id] = itm.type === \"axis\" && (itm.channel === \"y\" || itm.channel === \"height\") ? itm.pathX : itm.x;\n            itemY[itm.id] = itm.type === \"axis\" && (itm.channel === \"x\" || itm.channel === \"width\") ? itm.pathY : itm.y;\n        }\n        store.dispatch(select(itms));\n    } else if (!dragging) { //not dragging\n        if (activeItem === null)\n            store.dispatch(select([]));\n        else {\n            let sel = store.getState().canvas.selected, newSel;\n            let itmInSelection = sel.indexOf(activeItem.id) >= 0;\n            if (e.shiftKey && !itmInSelection) {\n                newSel = sel.concat(activeItem.id);\n            } else if (e.shiftKey && itmInSelection) {\n                newSel = sel.filter(d => d !== activeItem.id);\n                itemX[activeItem.id] = activeItem.type === \"axis\" && (activeItem.channel === \"y\" || activeItem.channel === \"height\") ? activeItem.pathX : activeItem.x;\n                itemY[activeItem.id] = activeItem.type === \"axis\" && (activeItem.channel === \"x\" || activeItem.channel === \"width\") ? activeItem.pathY : activeItem.y;\n            } else {\n                newSel = [activeItem.id];\n            }\n            store.dispatch(select(newSel));\n        }\n    }\n    \n    // else if (store.getState().canvas.selected.length > 0){\n    //     let item = scene.getItem(store.getState().canvas.selected[0]);\n    //     if (item === null && !dragging) {\n    //         store.dispatch(select([]));\n    //     }\n    // }\n    // let sel = store.getState().canvas.selected;\n    // let itmInSelection = sel.indexOf(itm.id) >= 0;\n    // if (e.shiftKey) {\n    //     store.dispatch(select(sel.concat(itm.id)));\n    // } else {\n    //     store.dispatch(select([itm.id]));\n    // }\n\n    clickHeld = false;\n    rectRegion = false;\n    dragging = false;\n    activeItem = null;\n    // itemX = {};\n    // itemY = {};\n}\n\nexport const doubleClick = (e, scene) => {\n    const cg = store.getState().canvas.selected;\n    if (cg.length> 0) {\n        const itm = scene.getItem(cg[0]);\n        if (itm && itm.type !== \"axis\" && itm.type !== \"legend\" && itm.children && itm.children.length > 0) {\n            const p = getPositionInScene(e.clientX, e.clientY);\n            let child = atlas.hitTest(itm, p[0], p[1]);\n            if (child) {\n                store.dispatch(select([child.id]));\n            }\n        }\n    }\n}","import * as atlas from \"atlas-vis\";\nimport { getPositionInScene } from \"../Util\";\nimport store from \"../store\";\nimport { directSelect, directSelectPreview, rectSelect, toggleAxisHandle } from \"../canvasSlice\";\n\nvar downX, downY, clickHeld = false;\n\nexport const mouseDown = (e, scene) => {\n    const p = getPositionInScene(e.clientX, e.clientY);\n    const item = atlas.inMarkHitTest(scene, p[0], p[1], 4);\n    if (!item) {\n        downX = e.clientX;\n        downY = e.clientY;\n        clickHeld = true;\n    }\n}\n\nexport const mouseUp = (e, scene, renderer) => {\n    if (clickHeld) {\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: 0, height: 0}));\n        let r = {left: left, top: top, width: wd, height: ht, right: left + wd, bottom: top + ht};\n        let itm = atlas.inMarkRectHitTest(scene, r, 2);\n        store.dispatch(directSelect(itm ? itm.id : null));\n        clickHeld = false;\n    } else {\n        const p = getPositionInScene(e.clientX, e.clientY);\n        const item = atlas.inMarkHitTest(scene, p[0], p[1], 4);\n        store.dispatch(directSelect(item ? item.id : null));\n    }\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) {\n        const p = getPositionInScene(e.clientX, e.clientY);\n        const itm = atlas.hitTest(scene, p[0], p[1]);\n        if (itm && itm.type === \"axis\" && itm.encoding) {\n            store.dispatch(toggleAxisHandle({axis: itm.id, visible: true}));\n        } else {\n            store.dispatch(toggleAxisHandle({visible: false}));\n                // const item = atlas.inMarkHitTest(scene, p[0], p[1], 4);\n                // store.dispatch(directSelectPreview(item ? item.id : null));\n        }\n\n        const item = atlas.inMarkHitTest(scene, p[0], p[1], 4);\n        store.dispatch(directSelectPreview(item ? item.id : null));\n\n        // const leafItem = atlas.hitTestAll(scene, p[0], p[1]);\n        // if (leafItem && leafItem.type === \"path\" && !store.getState().canvas.directSelected) {\n        //     d3.select(\"#pathOutline\").style(\"visibility\", \"visible\");\n        //     d3.select(\"#pathSegments\").attr(\"d\", leafItem.getSVGPathData());\n        //     d3.select(\"#pathVertices\").attr(\"d\", getSVGPathData(leafItem.vertices, 2));\n        // } else {\n        //     d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n        // }\n    } else {\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: wd, height: ht}));\n    }\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, downX, downY, moved = false;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let rect = d3.select(\"#rectToolUI\");\n    rect.style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"rect\", {left: parseInt(rect.attr(\"x\")), top: parseInt(rect.attr(\"y\")), \n                width: parseInt(rect.attr(\"width\")), height: parseInt(rect.attr(\"height\"))});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY);\n    let x1 = downX, x2 = p[0], y1 = downY, y2 = p[1];\n    let x, y, width, height;\n    x = Math.min(x1, x2);\n    y = Math.min(y1, y2);\n    width = Math.abs(x1 - x2);\n    height = Math.abs(y1 - y2);\n    if (e.shiftKey) {\n        width = Math.min(width, height);\n        height = width;\n        x = x1 < x2 ? x1 : x1 - width;\n        y = y1 < y2 ? y1 : y1 - height;\n    }\n    d3.select(\"#rectToolUI\").style(\"visibility\", \"visible\").attr(\"x\", x).attr(\"y\", y)\n        .attr(\"width\", width).attr(\"height\", height);\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, moved = false, downX, downY;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let c = d3.select(\"#circleToolUI\");\n    c.style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"circle\", {x: parseInt(c.attr(\"cx\")), y: parseInt(c.attr(\"cy\")), \n                radius: parseInt(c.attr(\"r\")), fillColor: \"none\"});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY);\n    let x1 = downX, x2 = p[0], y1 = downY, y2 = p[1];\n    let cx = (x1 + x2)/2, cy = (y1 + y2)/2, r = Math.min(Math.abs(x1 - x2)/2, Math.abs(y1 - y2)/2);\n    d3.select(\"#circleToolUI\").style(\"visibility\", \"visible\").attr(\"cx\", cx).attr(\"cy\", cy)\n        .attr(\"r\", r);\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, moved = false, downX, downY;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let c = d3.select(\"#ringToolOuterUI\");\n    c.style(\"visibility\", \"hidden\");\n    d3.select(\"#ringToolInnerUI\").style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"ring\", {x: parseInt(c.attr(\"cx\")), y: parseInt(c.attr(\"cy\")), \n                outerRadius: parseInt(c.attr(\"r\")), innerRadius: parseInt(c.attr(\"r\")) * 2/3, fillColor: \"none\"});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY);\n    let x1 = downX, x2 = p[0], y1 = downY, y2 = p[1];\n    let cx = (x1 + x2)/2, cy = (y1 + y2)/2, r = Math.min(Math.abs(x1 - x2)/2, Math.abs(y1 - y2)/2);\n    d3.select(\"#ringToolOuterUI\").style(\"visibility\", \"visible\").attr(\"cx\", cx).attr(\"cy\", cy)\n        .attr(\"r\", r);\n    d3.select(\"#ringToolInnerUI\").style(\"visibility\", \"visible\").attr(\"cx\", cx).attr(\"cy\", cy)\n        .attr(\"r\", r * 2/3);\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, moved = false, downX, downY;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let c = d3.select(\"#lineToolUI\");\n    c.style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"line\", {x1: parseInt(c.attr(\"x1\")), y1: parseInt(c.attr(\"y1\")), \n            x2: parseInt(c.attr(\"x2\")), y2: parseInt(c.attr(\"y2\"))});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY), x2, y2;\n    if (e.shiftKey) {\n        let angle = Math.atan2(p[1] - downY, p[0] - downX) * 180 / Math.PI,\n            angleR = Math.round(angle/45) * 45 * Math.PI/180, \n            dist = Math.sqrt(Math.pow(p[1] - downY, 2) + Math.pow(p[0] - downX, 2));\n        x2 = downX + Math.cos(angleR) * dist;\n        y2 = downY + Math.sin(angleR) * dist;\n    } else {\n        x2 = p[0];\n        y2 = p[1];\n    }\n    d3.select(\"#lineToolUI\").style(\"visibility\", \"visible\").attr(\"x1\", downX).attr(\"y1\", downY)\n            .attr(\"x2\", x2).attr(\"y2\", y2);\n}","import store from './store';\nimport SelectionUI from \"./tools/SelectionUI\";\nimport * as SelectTool from \"./tools/SelectTool\";\nimport * as DirectSelectTool from \"./tools/DirectSelectTool\";\nimport * as RectTool from \"./tools/RectTool\";\nimport * as CircleTool from \"./tools/CircleTool\";\nimport * as RingTool from \"./tools/RingTool\";\nimport * as LineTool from \"./tools/LineTool\";\nimport * as PolylineTool from \"./tools/PolylineTool\";\nimport * as TextTool from \"./tools/TextTool\";\n\nexport default function EventLayer(props) {\n\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.mouseDown(e, props.scene);\n                break;\n            case \"Rect\":\n                RectTool.mouseDown(e, props.scene);\n                break;\n            case \"Ellipse\":\n                CircleTool.mouseDown(e, props.scene);\n                break;\n            case \"Ring\":\n                RingTool.mouseDown(e, props.scene);\n                break;\n            case \"DirectSelect\":\n                DirectSelectTool.mouseDown(e, props.scene);\n                break;\n            case \"Line\":\n                LineTool.mouseDown(e, props.scene);\n                break;\n            case \"Pen\":\n                PolylineTool.mouseDown(e, props.scene);\n                break;\n            default:\n                break;\n        }\n    };\n\n    // const handleMouseDown = useCallback((e) => {\n    //     console.log(\"mouse down\", e);\n    // }, []);\n\n    const handleMouseMove = (e) => {\n        e.preventDefault();\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.mouseMove(e, props.scene, props.renderer);\n                break;\n            case \"Rect\":\n                RectTool.mouseMove(e, props.scene);\n                break;\n            case \"Ellipse\":\n                CircleTool.mouseMove(e, props.scene);\n                break;\n            case \"Ring\":\n                RingTool.mouseMove(e, props.scene);\n                break;\n            case \"DirectSelect\":\n                DirectSelectTool.mouseMove(e, props.scene);\n                break;\n            case \"Line\":\n                LineTool.mouseMove(e, props.scene);\n                break;\n            case \"Pen\":\n                PolylineTool.mouseMove(e, props.scene);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleMouseUp = (e) => {\n        e.preventDefault();\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.mouseUp(e, props.scene);\n                break;\n            case \"Rect\":\n                RectTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Ellipse\":\n                CircleTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Ring\":\n                RingTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Line\":\n                LineTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"DirectSelect\":\n                DirectSelectTool.mouseUp(e, props.scene);\n                break;\n            case \"Pen\":\n                PolylineTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Text\":\n                TextTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleDoubleClick = (e) => {\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.doubleClick(e, props.scene);\n                break;\n            default:\n                break;\n        }\n    };\n\n    return (\n        <svg\n            id=\"evtLayer\"\n            className=\"canvas\"\n            onDoubleClick={handleDoubleClick}\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n        >\n            <SelectionUI scene={props.scene} renderer={props.renderer}></SelectionUI>\n            <rect id=\"rectToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></rect>\n            <circle id=\"circleToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></circle>\n            <line id=\"lineToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\"}}></line>\n            <path id=\"polylineToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\"}}></path>\n            <circle id=\"ringToolOuterUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></circle>\n            <circle id=\"ringToolInnerUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></circle>\n        </svg>\n    )\n\n}","import * as d3 from 'd3';\nimport { createNewItem } from '../canvasSlice';\nimport store from '../store';\nimport { addToStack, getPositionInScene } from '../Util';\nimport * as atlas from \"atlas-vis\";\n\nexport const mouseDown = (e, scene) => {\n\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    const p = getPositionInScene(e.clientX, e.clientY);\n    let item = atlas.hitTest(scene, p[0], p[1]);\n    if (!item && d3.select(\"#textElement\").style(\"visibility\") === \"visible\") {\n        d3.select(\"#textElement\").style(\"visibility\", \"hidden\");\n        renderer.render(scene);\n        return;\n    }\n    if (!item || item.type !== \"pointText\") {\n        addToStack(scene, datasets, undoStack);\n        item = scene.mark(\"text\", {x: e.clientX, y: e.clientY, text: \"\", anchor: [\"left\", \"top\"]});\n        store.dispatch(createNewItem(item.id));\n        renderer.render(scene);\n    }\n    //show editing input\n    d3.select(\"#textElement\").style(\"visibility\", \"visible\").style(\"left\", item.bounds.left+\"px\").style(\"top\", (item.bounds.top - 1)+\"px\")\n        .property(\"value\", item.text).style(\"font-family\", item.fontFamily)\n        .style(\"font-size\", item.fontSize+\"px\").style(\"font-weight\", item.fontWeight).style(\"height\", item.bounds.height)\n        .on(\"input\", (e) => { item.text = d3.select(\"#textElement\").property(\"value\")});\n    document.getElementById(\"textElement\").focus();\n}","import './css/ToolBar.css';\nimport { useDispatch } from \"react-redux\";\nimport { activateTool } from './toolSlice';\nimport { connect } from \"react-redux\";\nimport { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { canDensify, canDivide, canRepeat } from 'atlas-vis';\nimport { Button, Modal } from \"react-bootstrap\";\nimport * as atlas from \"atlas-vis\";\nimport { addToStack, getDefaultCollectionLayout } from './Util';\nimport store from \"./store\";\nimport { select, joinDataItem, directSelect, updateUndoStack, updateRedoStack } from \"./canvasSlice\";\nimport {saveAs} from \"file-saver\";\n\nconst tools = [\"Select\", \"DirectSelect\", \"Line\", \"Rect\", \"Ellipse\", \"Ring\", \"Pen\", \"Text\"];\n\nconst mapStateToProps = state => ({\n    activeTool: state.tool.activeTool,\n    selected: state.canvas.selected,\n    undoStackChanged: state.canvas.undoStackChanged,\n    redoStackChanged: state.canvas.redoStackChanged\n});\n\nconst renderer = atlas.renderer(\"svg\", \"preview\")\n    const scn = atlas.scene();\n\n// const drawPreview = (selectedItem, cmd, dataset, field) => {\n//     if (d3.select(\"#preview\").empty())\n//         return;\n//     scn.removeAll();\n//     if (selectedItem && cmd && field && dataset) {\n//         let item = selectedItem.duplicate();\n//         scn.addChild(item);\n//         if (cmd === \"Repeat\") {\n//             let coll = scn.repeat(item, dataset, {field: field, layout: getDefaultCollectionLayout(item.bounds, dataset.getUniqueFieldValues(field).length)});\n//             let vb = [coll.bounds.left, coll.bounds.top, coll.bounds.width, coll.bounds.height].join(\" \");\n//             d3.select(\"#preview\").attr(\"viewBox\", vb);\n//         }\n//         renderer.clear();\n//         renderer.render(scn);\n//     }\n// }\n\nconst getUsableTbls = (item, datasets) => {\n    let t = {};\n    if (!item) return t;\n    if (item.dataScope) {\n        t[item.dataScope.dataTable.id] = item.dataScope.dataTable;\n    } else {\n        for (let d of datasets) {\n            t[d.id] = d;\n        }\n    }\n    return t;\n}\n\nconst getOrientations = function(type, cmd) {\n    if (cmd === \"Divide\") {\n        switch (type) {\n            case \"rect\":\n                return [\"horizontal\", \"vertical\"];\n            case \"circle\":\n                return [\"angular\", \"radial\"];\n            case \"ring\":\n                return [\"angular\"];\n            case \"pie\":\n                return [\"radial\"];\n            default:\n                return [\"horizontal\", \"vertical\"];\n        }\n    } else if (cmd === \"Densify\") {\n        return [\"horizontal\", \"vertical\"];\n    }\n}\n\nfunction ToolBar(props) {\n\n    const dispatch = useDispatch();\n    const inputFile = useRef(null);\n\n    const [showRepeatModal, setShowRepeatModal] = useState(false);\n    //const [selectedItem, setSelectedItem] = useState(null);\n    // const [datasetId, setDatasetId] = useState(null);\n    //const [dataset, setDataset] = useState(undefined);\n    const [cmd, setCmd] = useState(null);\n    const [tbls, setTbls] = useState({});\n    const [fields, setFields] = useState([]);\n    const [orientations, setOrientations] = useState([]);\n    const [joinMsg, setJoinMsg] = useState(\"\");\n    \n    const doJoin = () => {\n        setShowRepeatModal(false);\n        addToStack(props.scene, props.datasets, props.undoStack);\n        if (cmd === \"Repeat\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n                field = d3.select(\"#fieldSelect\").property(\"value\");\n            let layout = getDefaultCollectionLayout(item, dataset.getUniqueFieldValues(field).length);\n            let coll = props.scene.repeat(item, dataset, {field: field, layout: layout});\n            if (layout.numCols === 1) {\n                props.scene.axis(\"y\", field, {item: item});\n            } else if (layout.numRows === 1) {\n                props.scene.axis(\"x\", field, {item: item});\n            }\n            props.scene.reCreateRelatedAxes(coll);\n            store.dispatch(select([coll.id]));\n            store.dispatch(joinDataItem({}));\n        } else if (cmd === \"Divide\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n                field = d3.select(\"#fieldSelect\").property(\"value\"), \n                o = d3.select(\"#orientationSelect\").property(\"value\");\n            let coll = props.scene.divide(item, dataset, {field: field, orientation: o});\n            store.dispatch(select([coll.id]));\n            store.dispatch(joinDataItem({}));\n        } else if (cmd === \"Densify\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n                field = d3.select(\"#fieldSelect\").property(\"value\"), \n                o = d3.select(\"#orientationSelect\").property(\"value\");\n            let itm = props.scene.densify(item, dataset, {field: field, orientation: o});\n            store.dispatch(select([itm.id]));\n            store.dispatch(joinDataItem({}));\n        }\n    }\n\n    const switchTool = (t) => {\n        d3.select(\"#textElement\").style(\"visibility\", \"hidden\");\n        props.renderer.render(props.scene);\n        switch (t) {\n            case \"Rect\":\n            case \"Ellipse\":\n            case \"Line\":\n            case \"Ring\":\n            case \"Pen\":\n                dispatch(directSelect(null));\n                dispatch(select([]));\n                d3.select(\"#evtLayer\").style(\"cursor\", \"crosshair\");\n                break;\n            case \"Select\":\n                // dispatch(select([]));\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                dispatch(directSelect(null));\n                break;\n            case \"DirectSelect\":\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                dispatch(select([]));\n                break;\n            default:\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                break;\n        }\n        dispatch(activateTool(t));\n    }\n\n    const repeatBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Repeat\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        let t = getUsableTbls(item, props.datasets);\n        // let options = d3.select(\"#datasetSelect\").selectAll(\"option\").data(Object.values(t));\n        // options.enter().append(\"option\").merge(options).property(\"key\", d => d.id).text(d => d.name);\n        // options.exit().remove();\n        setTbls(t);\n        let usedFields = item.firstChild && item.firstChild.dataScope ? item.firstChild.dataScope.fields: [], \n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const divideBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Divide\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        setOrientations(getOrientations(item.type, \"Divide\"));\n        let t = getUsableTbls(item, props.datasets);\n        setTbls(t);\n        let usedFields = item.dataScope ? item.dataScope.fields: [],\n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const densifyBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Densify\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        setOrientations(getOrientations(item.type, \"Densify\"));\n        let t = getUsableTbls(item, props.datasets);\n        setTbls(t);\n        let usedFields = item.dataScope ? item.dataScope.fields: [],\n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const exportSVG = (e) => {\n        let svg = document.getElementById(\"canvas\");\n        var serializer = new XMLSerializer();\n        var source = serializer.serializeToString(svg);\n\n        //add name spaces.\n        if(!source.match(/^<svg[^>]+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)){\n            source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        }\n        if(!source.match(/^<svg[^>]+\"http:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)){\n            source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n        }\n\n        //add xml declaration\n        source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n        let tbls = props.scene.getDataTables();\n        let fname = (Object.values(tbls).length > 0) ? Object.values(tbls)[0].name + \".svg\" : \"visualization.svg\";\n        saveAs(new Blob([source], {\"type\":\"text/plain;charset=utf-8\"}), fname);\n    }\n\n    const saveScene = (e) => {\n        let tbls = props.scene.getDataTables();\n        let fname = (Object.values(tbls).length > 0) ? Object.values(tbls)[0].name + \".diproject\" : \"visualization.diproject\";\n        let scn = JSON.stringify(props.scene.toJSON());\n        saveAs(new Blob([scn], {\"type\":\"text/plain;charset=utf-8\"}), fname);\n    }\n\n    const fileChanged = function(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        let f = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = function() {\n            props.loadScene(JSON.parse(reader.result));\n            props.resetStacks();\n        }\n        reader.readAsText(f);\n    }\n\n    const undo = (e) => {\n        // console.log(\"undoing\", props.undoStack.length);\n        if (props.undoStack.length === 0) return;\n        addToStack(props.scene, props.datasets, props.redoStack, \"redo\");\n\n        let scn = props.undoStack.pop();\n        props.loadScene(JSON.parse(scn));\n        // console.log(\"finished undo\", props.undoStack.length);\n        store.dispatch(updateUndoStack({length: props.undoStack.length}));\n    }\n\n    const redo = (e) => {\n        if (props.redoStack.length === 0) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n\n        let scn = props.redoStack.pop();\n        props.loadScene(JSON.parse(scn));\n        store.dispatch(updateRedoStack({length: props.redoStack.length}));\n        //props.setRedoStack(props.redoStack.slice());\n    }\n\n    const openScene = (e) => {\n        inputFile.current.click();\n    }\n\n    const updatePreview = () => {\n        if (d3.select(\"#preview\").empty())\n            return;\n        scn.clear();\n        let selected = props.scene.getItem(props.selected[0]),\n            dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n            field = d3.select(\"#fieldSelect\").property(\"value\");\n        if (selected && cmd && field && dataset) {\n            let item = selected.duplicate();\n            if (item.fillColor === \"none\")\n                item.fillColor = \"#f5f5f5\";\n            item.strokeColor = \"#222\";\n            scn.addChild(item);\n            if (cmd === \"Repeat\") {\n                let coll = scn.repeat(item, dataset, {field: field, layout: getDefaultCollectionLayout(item, dataset.getUniqueFieldValues(field).length)});\n                let vb = [coll.bounds.left - 2, coll.bounds.top - 2, coll.bounds.width + 4, coll.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            } else if (cmd === \"Divide\") {\n                item.strokeWidth = Math.max(item.strokeWidth, 1);\n                let o = d3.select(\"#orientationSelect\").property(\"value\");\n                let coll = scn.divide(item, dataset, {field: field, orientation: o});\n                let vb = [coll.bounds.left - 2, coll.bounds.top - 2, coll.bounds.width + 4, coll.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            } else if (cmd === \"Densify\") {\n                item.strokeWidth = Math.max(item.strokeWidth, 1);\n                let o = d3.select(\"#orientationSelect\").property(\"value\");\n                let itm = scn.densify(item, dataset, {field: field, orientation: o});\n                scn.setProperties(itm, {\"vxShape\": \"rect\", \"vxWidth\": 4, \"vxHeight\": 4, \"vxStrokeColor\": \"#1592e6\", \"vxStrokeWidth\": 1});\n                let vb = [itm.bounds.left - 2, itm.bounds.top - 2, itm.bounds.width + 4, itm.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            }\n            renderer.clear();\n            renderer.render(scn);\n        }\n    }\n\n    const updateMsg = () => {\n        if (props.selected.length === 0 || !cmd) {\n            setJoinMsg(\"\");\n            return;\n        }\n        let selected = props.scene.getItem(props.selected[0]),\n            dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n            field = d3.select(\"#fieldSelect\").property(\"value\");\n        let vals = dataset.getUniqueFieldValues(field), num, msg = \"\";\n        if (selected.dataScope) {\n            num = selected.dataScope.getUniqueFieldValues(field).length;\n        } else {\n            num = vals.length;\n        }\n        if (cmd === \"Repeat\") {\n            msg = [num, selected.type + \"s\", \"will be created,\"].join(\" \");\n        } else if (cmd === \"Divide\") {\n            msg = [\"Divide the\", selected.type, \"into\", num, \"parts,\"].join(\" \");\n        } else if (cmd === \"Densify\") {\n            if (selected.type === \"rect\") {\n                let o = d3.select(\"#orientationSelect\").property(\"value\");\n                msg = [\"Densify the\", o === \"horizontal\" ? \"top/bottom side\" : \"left/right side\", \"of the rect with\", num, \"vertices,\"].join(\" \");\n            } else {\n                msg = [\"Densify the\", selected.type, \"with\", num, \"vertices, one for each\"].join(\" \");\n            }\n        }\n        d3.select(\"#msg\").text(msg);\n    }\n\n    useEffect(() => {\n        d3.selectAll(\".iconBtn\").classed(\"active\", false);\n        d3.select(\"#\"+props.activeTool+\"Btn\").classed(\"active\", true);\n    }, [props.activeTool]);\n\n    //manually trigger change event because repopulating options does not fire change event\n    useEffect(() => {\n        let fs = document.getElementById(\"fieldSelect\");\n        if (fs) {\n            // let evt = document.createEvent(\"Event\");\n            // evt.initEvent('change', true, false);\n            let evt = new CustomEvent('change', {bubbles: true, cancelable: false});\n            fs.dispatchEvent(evt);\n        }\n    }, [fields])\n\n    useEffect(() => {\n        if (props.selected.length === 0) {\n            d3.select(\"#repeatBtn\").property(\"disabled\", true);\n            d3.select(\"#divideBtn\").property(\"disabled\", true);\n            d3.select(\"#densifyBtn\").property(\"disabled\", true);\n            return;    \n        }\n        let item = props.scene.getItem(props.selected[0]);\n        d3.select(\"#repeatBtn\").property(\"disabled\", !item || !canRepeat(item) || props.datasets.length === 0);\n        d3.select(\"#divideBtn\").property(\"disabled\", !item || !canDivide(item) || props.datasets.length === 0);\n        d3.select(\"#densifyBtn\").property(\"disabled\", !item || !canDensify(item) || props.datasets.length === 0);\n    }, [props.selected, props.scene, props.datasets]);\n\n    useEffect(() => {\n        d3.select(\"#undoBtn\").property(\"disabled\", props.undoStackChanged.length <= 0);\n    }, [props.undoStackChanged]);\n\n    useEffect(() => {\n       d3.select(\"#redoBtn\").property(\"disabled\", props.redoStackChanged.length <= 0);\n    }, [props.redoStackChanged]);\n\n    useEffect(() => {\n        d3.select(\"#undoBtn\").property(\"disabled\", props.undoStack.length <= 0);\n        d3.select(\"#redoBtn\").property(\"disabled\", props.redoStack.length <= 0);\n    }, [props.undoStack, props.redoStack])\n\n    return (\n        <div>\n            <div className=\"myToolBar\">\n                <div className=\"myBtnGroup\">\n                    <button key=\"open\" className=\"myTextBtn\" id=\"openBtn\" onClick={openScene}>Open</button>\n                    <input type='file' id='scnFile' ref={inputFile} style={{display: 'none'}} accept=\".alscn\" onChange={fileChanged}/>\n                    <button key=\"save\" className=\"myTextBtn\" id=\"saveBtn\" onClick={saveScene}>Save</button>\n                    <button key=\"export\" className=\"myTextBtn\" id=\"exportBtn\" onClick={exportSVG}>Export</button>\n                </div>\n                <div className=\"myBtnGroup\">\n                    <button key=\"undo\" className=\"myTextBtn\" id=\"undoBtn\" onClick={undo}>Undo</button>\n                    <button key=\"redo\" className=\"myTextBtn\" id=\"redoBtn\" onClick={redo}>Redo</button>\n                </div>\n                <div className=\"myBtnGroup\">\n                    {tools.map(t => <button key={t} className=\"iconBtn\" title={t} id={t+\"Btn\"} tool={t} onClick={(e) => switchTool(e.target.getAttribute(\"tool\"))}></button>)}\n                </div>\n                <div className=\"myBtnGroup\">\n                    <button key=\"repeat\" className=\"myTextBtn\" id=\"repeatBtn\" onClick={repeatBtnClicked}>Repeat</button>\n                    <button key=\"divide\" className=\"myTextBtn\" id=\"divideBtn\" onClick={divideBtnClicked}>Divide</button>\n                    <button key=\"densify\" className=\"myTextBtn\" id=\"densifyBtn\" onClick={densifyBtnClicked}>Densify</button>\n                </div>\n            </div>\n            <Modal show={showRepeatModal} onShow={(e)=>{updatePreview();updateMsg();}}  backdrop=\"static\" keyboard={false}>\n                <Modal.Header>\n                <Modal.Title>{cmd}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <div style={{\"clear\": \"both\", \"marginBottom\": \"10px\"}}>\n                    <div id=\"msg\" style={{\"clear\": \"both\", \"marginBottom\": \"7px\", \"display\": \"block\"}}>{joinMsg}</div>\n                    one for each <select id=\"fieldSelect\" onChange={(e)=>{updatePreview();updateMsg();}} style={{\"marginLeft\": \"8px\"}}>\n                        {fields.map(o => <option value={o} key={o}>{o === \"atlas_rowId\" ? \"row of data\" : o}</option>)}\n                    </select>\n                    <div style={{\"marginTop\": \"12px\", \"clear\": \"left\"}}>from dataset \n                        <select id=\"datasetSelect\" onChange={(e) => {setFields(tbls[e.target.value].nonNumericFields);}} style={{\"marginLeft\": \"7px\"}}>\n                            {Object.values(tbls).map( o => <option value={o.id} key={o.id}>{o.name}</option>)}\n                        </select>\n                    </div>\n                    <div style={{\"marginTop\": \"15px\", \"display\": cmd === \"Repeat\" || (cmd === \"Densify\" && props.selected[0] && props.scene.getItem(props.selected[0]).type !== \"rect\") ? \"none\" : \"block\"}}>\n                        Orientation \n                        <select id=\"orientationSelect\" onChange={(e)=>{updatePreview()}} style={{\"marginLeft\": \"7px\"}}>\n                            {orientations.map(o => <option value={o} key={o}>{o}</option>)}\n                        </select>\n                    </div>\n                </div>\n                <svg id=\"preview\" style={{\"width\": \"470px\", \"height\": \"180px\", \"border\": \"solid 0px #ddd\", \"padding\": \"5px\"}}></svg>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={(e) => {setShowRepeatModal(false)}}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={doJoin}>OK</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n\n}\n\nexport default connect(mapStateToProps)(ToolBar);\n","import './css/Inspector.css';\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { properties } from './Defs';\nimport { addToStack, getAggregator, getDefaultLayout, getPropertyDef, getReusableScales, getScaleType } from './Util';\nimport { SketchPicker } from 'react-color';\nimport store from './store';\nimport { createNewItem, toggleAxisHandle, updateItem } from './canvasSlice';\nimport { Dropdown, Form, Stack } from 'react-bootstrap';\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    directSelected: state.canvas.directSelected,\n    itemUpdated: state.canvas.itemUpdated\n});\n\nconst headerClasses = {};\nfor (let g in properties ) {\n    let classes = [];\n    for (let prop in properties[g]) {\n        for (let c of properties[g][prop].class) {\n            if (classes.indexOf(c) < 0)\n                classes.push(c);\n        }\n    }\n    headerClasses[g] = classes;\n}\n\nconst updatePropertyControl = (propDef, item, scene) => {\n\n    d3.select(\"#\" + propDef.id).style(\"padding-left\", \"3px\");\n    d3.select(\"#\" + propDef.id + \"ScaleBtn\").style(\"display\", \"none\");\n\n    if (propDef.accessor) {\n        let val = item;\n\n        for (let a of propDef.accessor)\n            val = val[a];\n\n        if (propDef.type === \"numeric\")\n            val = val.toFixed(1);\n        \n        if (propDef.type === \"color\") {\n            d3.select(\"#\" + propDef.id).style(\"background\", val).property(\"value\", val);\n        } else if (propDef.type === \"boolean\") {\n            d3.select(\"#\" + propDef.id).property(\"checked\", val);    \n        } else {\n            d3.select(\"#\" + propDef.id).property(\"value\", val).property(\"disabled\", propDef.channel === \"area\");\n        }\n    }\n\n    //check if bound to data\n    if (propDef.channel) {\n        let enc;\n        if (propDef.channel === \"width\" || propDef.channel === \"height\" || propDef.channel === \"area\" || propDef.channel === \"radius\") {\n            enc = scene.sizeBound(item, propDef.channel);\n        } else if (propDef.channel === \"x\" || propDef.channel === \"y\") {\n            enc = scene.positionBound(item, propDef.channel);\n        } else {\n            enc = scene.getEncodingByItem(item, propDef.channel);\n        }\n        let encodable = item.type === \"segment\" ? item.parent.dataScope : item.type === \"vertex\" ? item.parent.dataScope || item.dataScope : item.dataScope;\n        if (enc) {\n            if (enc.channel === propDef.channel) {\n                d3.select(\"#\" + propDef.id).property(\"value\", enc.field).property(\"disabled\", true).style(\"pointer-events\", \"none\");\n                d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"inline-block\")\n                    .on(\"click\", function(e){\n                        scene.removeEncoding(enc);\n                        let o = {};\n                        o[enc.channel] = true;\n                        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n                    });\n                d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"none\");\n                if (propDef.type === \"numeric\" && [\"linear\", \"sqrt\", \"log\", \"power\"].indexOf(enc.scale.type) >= 0) {\n                    d3.select(\"#\" + propDef.id).style(\"padding-left\", \"23px\");\n                    d3.select(\"#\" + propDef.id + \"ScaleBtn\").style(\"display\", \"inline-block\");\n                }\n            } else {\n                let info = (enc.anyItem.type === \"vertex\" || enc.anyItem.type === \"segment\")? \"[see \" + enc.anyItem.type + \"]\" : \"[see \" + enc.channel + \"]\";\n                d3.select(\"#\" + propDef.id).property(\"value\", info).property(\"disabled\", true).style(\"pointer-events\", \"none\");\n                d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"none\");\n                d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"none\");\n            }\n        } else if (encodable) {\n            let disabled = (propDef.group === \"Segment Position\" || propDef.group === \"Vertex Position\");\n            d3.select(\"#\" + propDef.id).property(\"disabled\", disabled).style(\"pointer-events\", \"all\");\n            d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"none\");\n            d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"inline-block\");\n        } else {\n            let disabled = (propDef.group === \"Segment Position\" || propDef.group === \"Vertex Position\");\n            d3.select(\"#\" + propDef.id).property(\"disabled\", disabled).style(\"pointer-events\", \"all\");\n            d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"none\");\n            d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"none\");\n        }\n    }\n\n    if (propDef.id === \"layoutType\") {\n        const layout = item.layout ? item.layout.type : \"none\";\n        d3.select(\"#\" + propDef.id).property(\"value\", layout);\n        d3.selectAll(\".layout-prop\").style(\"display\", \"none\");\n        d3.selectAll(\".\" + layout + \"-prop\").style(\"display\", \"inline-block\");\n        let options = d3.select(\"#\"+propDef.id).selectAll(\"option\");\n        let ct = item.firstChild.type, na = [];\n        if (ct === \"rect\") {\n            na.push(\"packing\");\n            if (!scene.getEncodingByItem(item.firstChild, \"area\")) {\n                na.push(\"treemap\");\n            }\n        } else if (ct === \"circle\") {\n            na.push(\"treemap\");\n        } else if (ct === \"collection\") {\n            na = na.concat([\"packing\", \"treemap\"]);\n        } //TODO: handle other item types\n        \n        options.property(\"disabled\", function(d, i) {\n            const v = d3.select(this).property(\"value\");\n            return na.indexOf(v) >= 0;\n        })\n        \n        const params = propDef.options.filter(d => d.value === layout)[0].parameters;\n        for (const p of params) {\n            const paramDef = properties[\"Layout\"][p];\n            let v = item.layout[paramDef.accessor[0]];\n            if (paramDef.type === \"numeric-integer\")\n                v = v.toFixed(0);\n            else if (paramDef.type === \"numeric\")\n                v = v.toFixed(1);\n            //handle layout parameter controls\n            d3.select(\"#\" + paramDef.id).property(\"value\", v);\n            d3.select(\"#\" + paramDef.id + \"ScaleBtn\").style(\"display\", \"none\");\n        }\n    }\n\n    if (propDef.id === \"axisOrientation\") {\n        let options = d3.select(\"#\"+propDef.id).selectAll(\"option\");\n        if (item.channel === \"x\" || item.channel === \"width\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"top\" && v !== \"bottom\";\n            })\n        } else if (item.channel === \"y\" || item.channel === \"height\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"left\" && v !== \"right\";\n            })\n        } else {\n            options.property(\"disabled\", true);\n        }\n    }\n\n    if (propDef.id === \"baseline\") {\n        let options = d3.select(\"#\"+propDef.id).selectAll(\"option\");\n        let ori = item.orientation;\n        if (ori === \"horizontal\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"top\" && v!== \"middle\" && v !== \"bottom\";\n            })\n        } else if (ori === \"vertical\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"left\" && v!== \"center\" && v !== \"right\";\n            })\n        } else {\n            options.property(\"disabled\", true);\n        }\n    }\n\n    if (propDef.id === \"vxShape\") {\n        vertexShapeUpdated();\n    }\n}\n\nconst vertexShapeUpdated = () => {\n    let v = d3.select(\"#vxShape\").property(\"value\");\n    if (v === \"rect\") {\n        d3.select(\"#vxRadius_row\").style(\"display\", \"none\");\n        d3.select(\"#vxWidth_row\").style(\"display\", \"inline-block\");\n        d3.select(\"#vxHeight_row\").style(\"display\", \"inline-block\");\n    } else if (v === \"circle\") {\n        d3.select(\"#vxRadius_row\").style(\"display\", \"inline-block\");\n        d3.select(\"#vxWidth_row\").style(\"display\", \"none\");\n        d3.select(\"#vxHeight_row\").style(\"display\", \"none\");\n    }\n}\n\nfunction Inspector(props) {\n    // const dispatch = useDispatch();\n    const [currentColor, setCurrentColor] = useState(\"#fff\");\n    const [currentColorPropDef, setCurrentColorPropDef] = useState(null);\n    const [currentDataTable, setCurrentDataTable] = useState(null);\n    const [pastLayouts, setPastLayouts] = useState({});\n\n    useEffect(() => {\n        setPastLayouts({});\n    }, [props.scene]);\n\n    useEffect(() => {\n        if (currentColorPropDef === null) {\n            d3.select(\"#colorPicker\").style(\"display\", \"none\");\n            return;\n        }\n        let item = currentColorPropDef.id === \"canvasFillColor\" ? props.scene : \n                    props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : \n                        props.directSelected ? props.scene.getItem(props.directSelected) : null;\n        if (item === null) return;\n        let c = item[currentColorPropDef.accessor];\n        setCurrentColor(c ? c : \"#fff\");\n        d3.select(\"#colorPicker\").style(\"display\", \"block\");\n    }, [currentColorPropDef, props.scene, props.selected, props.directSelected]);\n\n    useEffect(() => {\n        if (currentColorPropDef === null) {\n            return;\n        }\n        d3.select(\"#\" + currentColorPropDef.id).style(\"background\", currentColor).property(\"value\", currentColor);\n        if (currentColorPropDef.id === \"canvasFillColor\") {\n            props.scene[currentColorPropDef.accessor] = currentColor;\n        } else if (props.selected.length > 0) {\n            let item = props.scene.getItem(props.selected[0]);\n            if (item.type === \"axis\" || item.type === \"gridlines\" || item.type === \"legend\") {\n                item[currentColorPropDef.accessor] = currentColor;\n            } else {\n                let prop = {};\n                prop[currentColorPropDef.accessor] = currentColor;\n                props.scene.setProperties(item, prop);\n            }\n        } else if (props.directSelected) {\n            let item = props.scene.getItem(props.directSelected);\n            let prop = {};\n            prop[currentColorPropDef.accessor] = currentColor;\n            props.scene.setProperties(item, prop);\n        }\n        props.renderer.render(props.scene);\n    }, [currentColor, currentColorPropDef, props.scene, props.selected, props.directSelected, props.renderer]);\n\n    useEffect(() => {\n        if (!props.itemUpdated.id || props.itemUpdated.source === \"inspector\") return;\n        const item = props.scene.getItem(props.itemUpdated.id);\n        if (item === undefined) return;\n        for (let prop in props.itemUpdated.properties) {\n            const def = getPropertyDef(item.type, prop);\n            if (def)\n                updatePropertyControl(def, item, props.scene);\n        }\n    }, [props.scene, props.itemUpdated])\n\n    useEffect(() => {\n        let type, selected = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : undefined;\n        if (!selected) {\n            type = \"canvas\";\n            selected = props.scene;\n            setCurrentDataTable(null);\n        } else {\n            //selected = props.scene.getItem(props.selected[0]);\n            type = selected.type;\n            let item = props.scene.getItem(props.selected[0]);\n            if (item.dataScope)\n                setCurrentDataTable(item.dataScope.dataTable);\n            else\n                setCurrentDataTable(null);\n        }\n        let panel = d3.select(\".propertyPanel\");\n        panel.selectAll(\".propertyGroupHeader\").style(\"display\", \"none\");\n        panel.selectAll(\".propertyRow\").style(\"display\", \"none\");\n        //if (props.selected.length === 1) {\n        if (selected) {\n            panel.selectAll(\".\" + type + \"-prop\").style(\"display\", \"inline-block\");\n            for (let g in properties) {\n                for (let prop in properties[g]) {\n                    if (properties[g][prop].class.indexOf(type + \"-prop\") >= 0)\n                        updatePropertyControl(properties[g][prop], selected, props.scene);\n                }\n            }\n        }\n    }, [props.scene, props.selected]);\n\n    useEffect(() => {\n        if (!props.directSelected) {\n            setCurrentDataTable(null);\n        } else {\n            let item = props.scene.getItem(props.directSelected);\n            if (item.dataScope)\n                setCurrentDataTable(item.dataScope.dataTable);\n            else if (item.parent.dataScope)\n                setCurrentDataTable(item.parent.dataScope.dataTable);\n            else\n                setCurrentDataTable(null);\n        }\n        let panel = d3.select(\".propertyPanel\");\n        panel.selectAll(\".propertyGroupHeader\").style(\"display\", \"none\");\n        panel.selectAll(\".propertyRow\").style(\"display\", \"none\");\n        if (props.directSelected) {\n            let ds = props.scene.getItem(props.directSelected), type = ds.type;\n            panel.selectAll(\".\" + type + \"-prop\").style(\"display\", \"inline-block\");\n            for (let g in properties) {\n                for (let prop in properties[g]) {\n                    if (properties[g][prop].class.indexOf(type + \"-prop\") >= 0)\n                        updatePropertyControl(properties[g][prop], ds, props.scene);\n                }\n            }\n        }\n    }, [props.scene, props.directSelected]);\n\n    const setCategoricalValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        let val = ctrl.property(\"value\");\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        if (item === undefined) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        const o = {};\n        //TODO: handle layout properties in o properly for dispatch\n        switch (attr.id) {\n            case \"axisOrientation\":\n                item[attr.accessor[0]] = val;\n                o[attr.accessor[0]] = val;\n                break;\n            case \"orientation\":\n            case \"horzGravity\":\n            case \"vertGravity\":\n                o[attr.accessor[0]] = val;\n                props.scene.setProperties(item.layout, o);\n                props.scene.reCreateRelatedAxes(item);\n                break;\n            case \"layoutType\":\n                o[\"layout\"] = val;\n                let l;\n                if (!(item.id in pastLayouts))\n                    pastLayouts[item.id] = [];\n                pastLayouts[item.id].unshift(item.layout);\n                if (pastLayouts[item.id].length > 0) {\n                    l = pastLayouts[item.id].find(d => d && d.type === val);\n                }\n                if (!l)\n                    l = getDefaultLayout(val);\n                props.scene.setProperties(item, {\"layout\": l});\n                //props.scene.reCreateRelatedAxes(item);\n                updatePropertyControl(attr, item, props.scene);\n                break;\n            case \"vxShape\":\n                o[attr.accessor[0]] = val;\n                props.scene.setProperties(item, o);\n                vertexShapeUpdated();\n                break;\n            default:\n                o[attr.accessor[0]] = val;\n                props.scene.setProperties(item, o);\n                break;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const setBooleanValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let val = ctrl.property(\"checked\");\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        item[attr.accessor[0]] = val;\n        const o = {};\n        o[attr.accessor[0]] = val;\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const setStringValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        let val = ctrl.property(\"value\");\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        addToStack(props.scene, props.datasets, props.undoStack);\n        const o = {};\n        switch (attr.id) {\n            case \"labelFormat\":\n                o[attr.accessor[0]] = val;\n                item[attr.accessor[0]] = val;\n                break;\n            default:\n                break;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const setNumericValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        let val = parseFloat(ctrl.property(\"value\"));\n        if (isNaN(val)) return;\n        if (attr.id !== \"rowGap\" && attr.id !== \"colGap\" && val < 0) return;\n        if (attr.type === \"numeric-integer\") {\n            val = parseInt(val);\n        }\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        addToStack(props.scene, props.datasets, props.undoStack);\n        const o = {};\n        switch (attr.id) {\n            case \"strokeWidth\":\n            case \"width\":\n            case \"height\":\n            case \"area\":\n            case \"fontSize\":\n            case \"vxWidth\":\n            case \"vxHeight\":\n            case \"vxRadius\":\n            case \"vxOpacity\":\n            case \"vxStrokeWidth\":\n            case \"opacity\":\n            case \"radius\":\n            case \"innerRadius\":\n            case \"outerRadius\":\n                o[attr.channel] = val;\n                props.scene.setProperties(item, o);\n                break;\n            case \"rowGap\":\n            case \"colGap\":\n            case \"numRows\":\n            case \"numCols\":\n                if (item.layout) {\n                    o[attr.id] = val;\n                    props.scene.setProperties(item.layout, o);\n                }\n                break;\n            case \"tickOffset\":\n            case \"labelOffset\":\n            case \"tickSize\":\n            case \"pathPos\":\n            case \"gridlineStrokeWidth\":\n                o[attr.accessor[0]] = val;\n                item[attr.accessor[0]] = val;\n                break;\n            case \"x\":\n            case \"collectionX\":\n            case \"glyphX\":\n                props.scene.translate(item, val - item.x, 0);\n                break;\n            case \"y\":\n            case \"collectionY\":\n            case \"glyphY\":\n                props.scene.translate(item, 0, val - item.y);\n                break;\n            default:\n                break;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const encode = (f, c, scale) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        if ((c === \"x\" || c === \"y\") && item.type !== \"area\" && item.parent.type === \"collection\" && item.parent.layout) {\n            props.scene.setProperties(item.parent, {\"layout\": undefined});\n        }\n        props.scene.encode(item, {field: f, channel: c, scale: scale});\n        let guide;\n        if (!scale) {\n            if (c.indexOf(\"Color\") > 0) {\n                guide = props.scene.legend(c, f);\n            } else if (c === \"width\" || c === \"height\" || c === \"x\" || c === \"y\") {\n                guide = props.scene.axis(c, f, {item: item});\n            }\n        } else {\n            props.scene.reCreateRelatedAxes(item);\n        }\n        \n        const o = {};\n        o[c] = \"encoded\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n        if (guide)\n            store.dispatch(createNewItem(guide.id));\n    }\n\n    const highlightAxis = (scale, show) => {\n        for (let c of props.scene.children) {\n            if (c.type === \"axis\" && c.encoding) {\n                if (c.encoding.scale === scale) {\n                    store.dispatch(toggleAxisHandle({axis: c.id, visible: show}));\n                    return;\n                }\n            }\n        }\n    }\n\n    const createNumericControl = (attr) => {\n        return <input id={attr.id} onChange={(e) => setNumericValue(attr)}></input>;\n        //return <div><button className=\"scaleBtn\" id={attr.id+\"ScaleBtn\"}></button><input id={attr.id} onChange={(e) => setNumericValue(attr)}></input></div>\n    }\n\n    const createStringControl = (attr) => {\n        return <input type=\"text\" id={attr.id} onInput={(e) => setStringValue(attr)}></input>\n    }\n\n    const createColorControl = (attr) => {\n        return <input id={attr.id} onClick={(e) => {setCurrentColorPropDef(attr);e.stopPropagation();}}></input>\n    }\n\n    const createCategoryControl = (attr) => {\n        return <select id={attr.id} onChange={(e) => setCategoricalValue(attr)}>{attr.options.map( o => <option value={o.value} key={o.display}>{o.display}</option>)}</select>\n    }\n\n    const createRangeControl = (attr) => {\n        return (\n            <div className=\"propertySliderDiv\">\n                <input type=\"range\" min={attr.range[0]} max={attr.range[1]} step={(attr.range[1] - attr.range[0])/10} className=\"propertySlider\" id={attr.id} onChange={(e) => setNumericValue(attr)}></input>\n                <div className=\"propertySliderMarks\"> \n                    <div style={{margin: 0, float: \"left\"}}>{attr.range[0]}</div>\n                    <div style={{margin: 0, float: \"right\"}}>{attr.range[1]}</div>\n                </div>\n            </div>\n        )\n    }\n\n    const createBooleanControl = (propDef) => {\n        return (\n            <input type=\"checkbox\" id={propDef.id} onChange={(e) => setBooleanValue(propDef)}></input>\n        )\n    }\n\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n        <button className='dropdown-item dropdown-toggle encodeFields' href=\"\" ref={ref}\n            // onMouseEnter={(e) => onClick(e)}\n            onClick={(e) => {\n                e.preventDefault();\n                onClick(e);\n            }}\n        >\n          {\"  \" + children}\n        </button>\n    ));\n\n    const changeAggregator = (channel, aggr) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let enc = props.scene.getEncodingByItem(item, channel);\n        if (!enc) return;\n        enc.aggregator = aggr;\n        props.scene.reCreateRelatedAxes(item);\n        \n        const o = {};\n        o[channel] = \"aggregator\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n    }\n\n    const changeScaleType = (channel, type) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let enc = props.scene.getEncodingByItem(item, channel);\n        if (!enc) return;\n        enc.scale.type = type;\n        props.scene.reCreateRelatedAxes(item);\n        \n        const o = {};\n        o[channel] = \"scaleType\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n    }\n\n    const createPropertyControl = (prop, propDef) => {\n        let classes = \"propertyRow \" + propDef.class.join(\" \");\n        return (\n        <tr className={classes} key={prop} id={propDef.id+\"_row\"}>\n            <td className= \"propertyName\">{prop}</td>\n            <td className=\"propertyInput\">\n            <Dropdown id={propDef.id+\"ScaleBtn\"} className=\"scaleBtnDiv\">\n                <Dropdown.Toggle className=\"scaleBtn\" variant=\"link\" bsPrefix=\"p-0\">\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"scaleMenu\">\n                    <div>\n                    <Form>\n                        <Form.Group style={{\"margin\": \"0 10px 0 10px\"}}>\n                            <Stack direction=\"horizontal\" gap={1}>\n                                <Form.Label style={{\"width\": \"125px\", \"marginTop\": \"7px\", \"fontWeight\": \"bold\"}}>Scale type</Form.Label>\n                                <Form.Select defaultValue={getScaleType(propDef.channel, props.selected, props.directSelected, props.scene)} onChange={(e) => changeScaleType(propDef.channel, e.target.value)} size=\"sm\">\n                                    <option value=\"linear\">Linear</option>\n                                    <option value=\"log\">Log</option>\n                                    <option value=\"sqrt\">Square Root</option>\n                                    <option value=\"power\">Power (2)</option>\n                                </Form.Select>\n                            </Stack>\n                        </Form.Group>\n                        <Form.Group style={{\"margin\": \"0 10px 0 10px\", \"display\": getAggregator(propDef.channel, props.selected, props.directSelected, props.scene) ? \"block\" : \"none\"}}>\n                            <Stack direction=\"horizontal\" gap={1}>\n                                <Form.Label style={{\"width\": \"125px\", \"marginTop\": \"7px\", \"fontWeight\": \"bold\"}}>Aggregator</Form.Label>\n                                <Form.Select defaultValue={getAggregator(propDef.channel, props.selected, props.directSelected, props.scene)} onChange={(e) => changeAggregator(propDef.channel, e.target.value)} size=\"sm\">\n                                    <option value=\"sum\">Sum</option>\n                                    <option value=\"avg\">Average</option>\n                                    <option value=\"max\">Maximum</option>\n                                    <option value=\"min\">Minimum</option>\n                                    <option value=\"median\">Median</option>\n                                    <option value=\"count\">Count</option>\n                                </Form.Select>\n                            </Stack>\n                        </Form.Group>\n                    </Form>\n                    </div>\n                </Dropdown.Menu>\n            </Dropdown>\n            {(function(){\n                switch(propDef.type) {\n                    case \"numeric\":\n                    case \"numeric-integer\":\n                        return createNumericControl(propDef);\n                    case \"numeric-range\":\n                        return createRangeControl(propDef);\n                    case \"color\":\n                        return createColorControl(propDef);\n                    case \"categorical\":\n                        return createCategoryControl(propDef);\n                    case \"boolean\":\n                        return createBooleanControl(propDef);\n                    case \"string\":\n                        return createStringControl(propDef);\n                    default:\n                        return createNumericControl(propDef);\n                }\n            })()}\n            </td>\n            {propDef.encodable ? (<td>\n                <button className=\"unencodeBtn\" id={propDef.id+\"UnencodeBtn\"}></button>\n                <Dropdown id={propDef.id+\"EncodeBtn\"}>\n                    <Dropdown.Toggle className=\"encodeBtn\" variant=\"link\" bsPrefix=\"p-0\">\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        {currentDataTable === null ? []: \n                            currentDataTable.getEncodableFields(propDef.channel).map((f, i) => {\n                                let scales = getReusableScales(currentDataTable.getFieldType(f), propDef.channel, props.scene);\n                                if (Object.keys(scales).length === 0) {\n                                    return (\n                                        <Dropdown.Item className=\"encodeFields\" key={f}\n                                            onClick={(e) => {encode(f, propDef.channel)}}>\n                                            {f}\n                                        </Dropdown.Item> \n                                    )\n                                } else {\n                                    let options = [];\n                                    for (let k in scales) {\n                                        options.push({fields: scales[k].map(d => d.field).join(\"/\"), scale: scales[k][0].scale})\n                                    }\n                                    return (\n                                        // <Dropdown.Item onMouseEnter={(e) => {console.log(f, propDef.channel)}} className=\"encodeFields\" key={f} eventKey={f}>{f}</Dropdown.Item>\n                                        <Dropdown id={propDef.id+\"_scale_\"+f} key={propDef.id+\"_scale_\"+f} drop='start'>\n                                            <Dropdown.Toggle as={CustomToggle} bsPrefix=\"p-0\">\n                                                {f}\n                                            </Dropdown.Toggle>\n                                            <Dropdown.Menu>\n                                                {[null].concat(options).map((enc, i) => {\n                                                    if (enc === null) {\n                                                        return (\n                                                        <Dropdown.Item className=\"encodeFields\" key={\"new\"+i}\n                                                            onClick={(e) => {encode(f, propDef.channel)}}\n                                                        >\n                                                        Create new scale\n                                                        </Dropdown.Item>);\n                                                    } else {\n                                                        return (\n                                                        <Dropdown.Item className=\"encodeFields\" key={enc.scale.id+\"_\"+i}\n                                                            onClick={(e) => {encode(f, propDef.channel, enc.scale)}}\n                                                            onMouseEnter={(e) => {highlightAxis(enc.scale, true)}}\n                                                            onMouseLeave={(e) => {highlightAxis(enc.scale, false)}}\n                                                        >\n                                                        {\"Merge with \" + enc.fields}\n                                                        </Dropdown.Item>);\n                                                    }\n                                                })}\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                    )\n                                }\n                            }\n                            )}\n                    </Dropdown.Menu>\n                </Dropdown>\n                </td>)\n                            : <td></td>\n            }\n        </tr>)\n    }\n\n    return (\n        <div>\n            {/* <div className=\"rightPanel\" onClick={(e) => setCurrentColorPropDef(null)}> */}\n                <div className=\"propertyPanel\" onClick={(e) => setCurrentColorPropDef(null)} style={{\"overflow\": \"visible\"}}>\n                    {Object.keys(properties).map(g => \n                    <div key={g}>\n                        <span className={headerClasses[g].concat([\"propertyGroupHeader\"]).join(\" \")}>{g}</span>\n                        <table>\n                            <tbody>\n                            {Object.keys(properties[g]).map(p => createPropertyControl(p, properties[g][p]))}\n                            </tbody>\n                        </table>\n                    </div>)}\n                </div>\n            {/* </div> */}\n            <div id=\"colorPicker\">\n                <SketchPicker disableAlpha={true} color={currentColor} onChangeComplete={e => setCurrentColor(e.hex)}/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default connect(mapStateToProps)(Inspector);","import './css/LayerView.css';\nimport { connect } from \"react-redux\";\nimport { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport store from \"./store\";\nimport { directSelect, select } from \"./canvasSlice\";\nimport { activateTool } from './toolSlice';\n\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    dataItemJoined: state.canvas.dataItemJoined,\n    newItemCreated: state.canvas.newItemCreated,\n    itemsDeleted: state.canvas.itemsDeleted\n});\n\nconst left = 20, offset = 25, lineHt = 25, top = 20;\n\nconst enumerateLayers = (item, list, level) => {\n    list.push({item: item, level: level});\n    if (item.children) {\n        switch (item.type) {\n            case \"collection\":\n                enumerateLayers(item.firstChild, list, level+1);\n                break;\n            case \"axis\":\n            case \"legend\":\n            case \"gridlines\":\n                break;\n            default:\n                for (let i = item.children.length - 1; i >= 0; i--) {\n                    enumerateLayers(item.children[i], list, level+1);\n                }\n                break;\n        }\n    }\n};\n\nconst getLayerLabel = (item) => {\n    if (item.type === \"axis\") {\n        return item.channel.substring(0, 1).toUpperCase() + item.channel.substring(1) + \" axis: \" + item.field;  \n    }\n    let l = item.type.substring(0, 1).toUpperCase() + item.type.substring(1);\n    if (item.dataScope) {\n        let peers = item.getScene().getPeers(item);\n        if (peers.length > 1)\n            l += \" (\" + peers.length + \")\";\n        let fields = item.dataScope.fields;\n        if (item.parent && item.parent.type === \"collection\" && item.parent.dataScope) {\n            fields = fields.filter(d => item.parent.dataScope.fields.indexOf(d) < 0);\n        }\n        let d = fields.join(\", \");\n        if (d === \"atlas_rowId\")\n            d = \"row ID\";\n        if (d !== \"\")\n            l += \": \" + d;\n    }\n    return l;\n};\n\nconst getLayerId = (item) => {\n    switch (item.type) {\n        case \"axis\":\n        case \"legend\":\n            return item.id;\n        default:\n            if (item.classId)\n                return item.classId;\n            else\n                return item.id;\n    }\n}\n\nfunction LayerView(props) {\n\n    useEffect(() => {\n        const layers = [];\n        enumerateLayers(props.scene, layers, -1);\n        layers.forEach((d, i) => d.index = i);\n        const lv = d3.select(\".layerView\");\n        lv.selectAll('*').remove();\n        lv.append(\"text\").text(\"Layers\").style(\"font-weight\", \"bold\").attr(\"class\", \"layerText\")\n            .attr(\"x\", 20).attr(\"y\", 16);\n        let g = lv.selectAll(\".layer\").data(layers.slice(1)).enter().append(\"g\").attr(\"class\", \"layer\");\n        \n        g.append(\"rect\").attr(\"class\", \"layerRow\").attr(\"id\", d => getLayerId(d.item))\n            .attr(\"x\", 0).attr(\"y\", d => top + lineHt * d.index - 3)\n            .attr(\"width\", 260).attr(\"height\", lineHt)\n            .on(\"click\", (e, d) => {\n                store.dispatch(directSelect(null));\n                store.dispatch(activateTool(\"Select\"));\n                store.dispatch(select([d.item.id]));\n            });\n        g.append(\"image\").attr(\"class\", \"layerIcon\")\n            .attr(\"x\", d => left + offset * d.level).attr(\"y\", d => top + lineHt * d.index + 2)\n            .attr(\"href\", d => \"/app/icons/\"+d.item.type + \".png\");\n        g.append(\"text\").attr(\"class\", \"layerText\")\n            .attr(\"x\", d => left + offset * d.level + 22).attr(\"y\", d => top + lineHt * d.index + 1)\n            .text(d => getLayerLabel(d.item));\n    }, [props.scene, props.dataItemJoined, props.newItemCreated, props.itemsDeleted]);\n\n    useEffect(() => {\n        d3.selectAll(\".layerRow\").classed(\"layerSelected\", false);\n        if (props.selected.length > 0) {\n            let itm = props.scene.getItem(props.selected[0]);\n            if (!itm) return;\n            d3.select(\".layerView\").select(\"#\"+getLayerId(itm)).classed(\"layerSelected\", true);\n        }\n    }, [props.scene, props.selected]);\n\n    return (\n        <svg className=\"layerView\">\n        </svg>\n    );\n}\n\nexport default connect(mapStateToProps)(LayerView);","import { connect } from \"react-redux\";\nimport './css/DataPanel.css';\nimport {useState, useEffect, useMemo, useRef } from 'react';\nimport { useFilters, useTable } from \"react-table\";\nimport { csvFromString } from \"atlas-vis\";\nimport { addToStack } from \"./Util\";\n\n\nfunction DataPanel (props) {\n\n    const [activeTbl, setActiveTbl] = useState(null);\n    const [dataScopeInfo, setDataScopeInfo] = useState(null);\n    const inputFile = useRef(null);\n\n    const cols = useMemo(() => {\n        if (activeTbl === null) return [{Header: \" \", accessor: \" \"}];\n        else {\n            let fields = activeTbl.fields;\n            let result = [];\n            for (let f of fields) {\n                //if (f === \"atlas_rowId\") continue;\n                result.push({\n                    Header: f === \"atlas_rowId\" ? \"Row ID\" : f,\n                    accessor: f,\n                    filter: \"equals\",\n                    Cell: ({value}) => activeTbl.getRawValue(f, value)\n                })\n            }\n            return result;\n        }\n    }, [activeTbl])\n\n    const data = useMemo(() => {\n        if (activeTbl === null) return [{col: 1}];\n        else {\n            return activeTbl.data;\n        }\n    }, [activeTbl])\n\n    const initState = { hiddenColumns: ['atlas_rowId'] };\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        setFilter,\n        setAllFilters,\n    } = useTable({columns: cols, data: data, initialState: initState}, useFilters);\n\n    const importData = function() {\n        inputFile.current.click();\n    }\n\n    const fileChanged = function(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        let f = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = function() {\n            addToStack(props.scene, props.datasets, props.undoStack);\n            let tbl = csvFromString(reader.result, f.name);\n            let ds = props.datasets.slice();\n            ds.push(tbl);\n            props.loadDataset(ds);\n            setActiveTbl(tbl);\n            // console.log(\"data imported\", props.selected);\n        }\n        if (f)\n            reader.readAsText(f);\n    }\n\n    const getHeaderIcon = function(field) {\n        if (!activeTbl)\n            return <span></span>;\n        switch (activeTbl.getFieldType(field)) {\n            case \"string\":\n                return <img src=\"/app/icons/string.png\" alt=\"(string) \" width=\"20px\" height=\"10px\" style={{\"margin\":\"0 4px 2px 0\"}}></img>;\n            case \"date\":\n                return <img src=\"/app/icons/date.png\" alt=\"(date) \" width=\"15px\" style={{\"margin\":\"0 3px 2px 0\"}}></img>;\n            default:\n                return <img src=\"/app/icons/number.png\" alt=\"(number) \" width=\"12px\" height=\"12px\" style={{\"margin\":\"0 2px 3px 0\"}}></img>;\n        }\n    }\n\n    useEffect(() => {\n        if (!props.datasets || props.datasets.length === 0) {\n            setActiveTbl(null);\n            setAllFilters([]);\n            setDataScopeInfo(null);\n            return;\n        }\n        if (props.selected.length === 0 && !props.directSelected) {\n            setActiveTbl(props.datasets[0]);\n            setAllFilters([]);\n            setDataScopeInfo(null);\n        } else if (props.selected.length > 0) {\n            const item = props.scene.getItem(props.selected[0]);\n            if (!item) {\n                setActiveTbl(props.datasets[0]);\n                setAllFilters([]);\n                setDataScopeInfo(null);\n                return;\n            }\n            if (item.dataScope) {\n                setActiveTbl(item.dataScope.dataTable);\n                const filters = item.dataScope.filters;\n                for (let f in filters) {\n                    setFilter(f, filters[f]);\n                }\n                setDataScopeInfo(\"Selected \" + item.type + \" has \" + item.dataScope.numTuples +  \" attached data rows\");\n            } else {\n                setActiveTbl(null);\n                setAllFilters([]);\n                setDataScopeInfo(\"Selected \" + item.type + \" has no attached data\");\n            } \n        } else if (props.directSelected) {\n            const itm = props.scene.getItem(props.directSelected);\n            if (!itm) {\n                setActiveTbl(props.datasets[0]);\n                setAllFilters([]);\n                setDataScopeInfo(null);\n            }\n            if (itm.dataScope) {\n                setActiveTbl(itm.dataScope.dataTable);\n                const filters = itm.dataScope.filters;\n                for (let f in filters) {\n                    setFilter(f, filters[f]);\n                }\n                setDataScopeInfo(\"Selected \" + itm.type + \" has \" + itm.dataScope.numTuples +  \" attached data rows\");\n            } else {\n                setActiveTbl(null);\n                setAllFilters([]);\n                setDataScopeInfo(\"Selected \" + itm.type + \" has no attached data\");\n            } \n\n        }\n    }, [props.selected, props.directSelected, props.scene, props.datasets, setAllFilters, setFilter]);\n\n    return (\n        <div id=\"dataPanel\">\n            <div id=\"datasetInfo\">\n                {props.datasets.map(d => \n                <div className={activeTbl && activeTbl.id === d.id ? \"activeTableTab\" : \"tableTab\"} key={d.id} onClick={(e) => setActiveTbl(d)}>\n                    {d.name + \" (\" + d.getRowCount() + \" rows)\"}\n                </div>)}\n                <button id=\"csvBtn\" onClick={importData}>Import Data</button>\n                <input type='file' id='file' ref={inputFile} style={{display: 'none'}} accept=\".csv\" onChange={fileChanged}/>\n            </div>\n            <div id=\"dataScopeInfo\" style={{display: dataScopeInfo ? \"block\" : \"none\"}}>\n                {dataScopeInfo ? dataScopeInfo : \"\"}\n            </div>\n            <div id=\"tableDiv\">\n                <table id=\"dataTable\" {...getTableProps()}>\n                        <thead>\n                            {// Loop over the header rows\n                                headerGroups.map(headerGroup => (\n                                    // Apply the header row props\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\n                                        {// Loop over the headers in each row\n                                            headerGroup.headers.map(column => (\n                                                // Apply the header cell props\n                                                <th {...column.getHeaderProps()}>\n                                                    {getHeaderIcon(column.Header)}\n                                                    {// Render the header\n                                                        column.render('Header')\n                                                    }\n                                                </th>\n                                            ))}\n                                    </tr>\n                                ))}\n                        </thead>\n                        {/* Apply the table body props */}\n                        <tbody {...getTableBodyProps()}>\n                            {// Loop over the table rows\n                                rows.map(row => {\n                                    // Prepare the row for display\n                                    prepareRow(row)\n                                    return (\n                                        // Apply the row props\n                                        <tr {...row.getRowProps()}>\n                                            {// Loop over the rows cells\n                                                row.cells.map(cell => {\n                                                    // Apply the cell props\n                                                    return (\n                                                        <td {...cell.getCellProps()}>\n                                                            {// Render the cell contents\n                                                                cell.render('Cell')}\n                                                        </td>\n                                                    )\n                                                })}\n                                        </tr>\n                                    )\n                                })}\n                        </tbody>\n                    </table> \n            </div>\n            \n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    directSelected: state.canvas.directSelected\n});\n\nexport default connect(mapStateToProps)(DataPanel);","import { useEffect, useState } from 'react';\nimport { SketchPicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport './css/InteractiveLegend.css';\n\nconst mapStateToProps = state => ({\n    legendClicked: state.canvas.legendClicked,\n});\n\nfunction InteractiveLegend(props) {\n\n    const [legend, setLegend] = useState(null);\n    const [color, setColor] = useState(\"#fff\");\n    const [value, setValue] = useState(null);\n    \n    useEffect(() => {\n        const l = props.legendClicked.legend, v = props.legendClicked.value;\n        if (l && v) {\n            d3.select(\"#legendColorPicker\").style(\"visibility\", \"visible\");\n            setLegend(props.scene.getItem(l));\n            setValue(v);\n            setColor(props.scene.getItem(l).encoding.scale.map(v));\n        } else {\n            d3.select(\"#legendColorPicker\").style(\"visibility\", \"hidden\");\n        }\n    }, [props.legendClicked, props.scene])\n    \n    const changeCompleted = (c, e) => {\n        setColor(c.hex);\n        const domain = legend.encoding.scale.domain, range = [];\n        for (let d of domain) {\n            if (d === value)\n                range.push(c.hex);\n            else\n                range.push(legend.encoding.scale.map(d));\n        }\n        legend.encoding.scale._setRange(range);\n        props.renderer.render(props.scene);\n    }\n\n    return (\n        <div id=\"legendColorPicker\">\n            <SketchPicker disableAlpha={true} color={color} onChangeComplete={changeCompleted}/>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps)(InteractiveLegend);","import Canvas from './Canvas';\nimport { useEffect, useState } from 'react';\nimport * as atlas from \"atlas-vis\";\nimport EventLayer from './EventLayer';\nimport ToolBar from './ToolBar';\nimport Inspector from './Inspector';\nimport LayerView from './LayerView';\nimport DataPanel from './DataPanel';\nimport './css/App.css';\nimport store from \"./store\";\nimport { directSelect, select, toggleAxisHandle } from \"./canvasSlice\";\nimport InteractiveLegend from './InteractiveLegend';\n\nfunction Authoring(props) {\n\n  const [renderer] = useState(atlas.renderer(\"svg\", \"canvas\"));\n  const [scene, setScene] = useState(atlas.scene());\n  const [spec, setSpec] = useState(\"\");\n  const [datasets, setDatasets] = useState([]);\n  const [undoStack, setUndoStack] = useState([]); \n  const [redoStack, setRedoStack] = useState([]); \n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#ddd\";\n    document.body.style.overflow = \"hidden\";\n  }, [])\n\n  useEffect(() => {\n    if (spec) {\n      fetch(\"app/scenes/\" + spec + \".alscn\")\n      .then(response => response.json())\n      .then(result => {\n        loadScene(result);\n      });\n    }\n  }, [spec]);\n\n  useEffect(() => {\n    store.dispatch(toggleAxisHandle({visible: false}));\n    store.dispatch(select([]));\n    store.dispatch(directSelect(null));\n    renderer.clear();\n    renderer.render(scene);\n  }, [renderer, scene]);\n\n  const loadScene = (json) => {\n    let loader = atlas.sceneLoader();\n    let scn = loader.load(json);\n    setScene(scn);\n    setDatasets(Object.values(loader.tables));\n    //setDatasets(Object.values(scn.getDataTables()));\n  }\n\n  const demos = [\n    \"Rect\",\n    \"BarChartHorz\",\n    \"BarChartVert\",\n    \"BoxPlot\",\n    \"BulletChart\",\n    \"DivergingBarChart\",\n    \"GanttChart\",\n    \"GroupedBarChart\",\n    \"HeatMap\",\n    \"Histogram\",\n    \"MosaicPlot\",\n    \"StackedBarChart\",\n    \"TowerChart\",\n    \"Treemap\",\n    \"WaffleChart\",\n    \"WaterfallChart\",\n    \"BubblePlot\",\n    \"CirclePacking\",\n    \"DotPlot\",\n    \"DoughnutChart\",\n    \"PieChart\",\n    \"RadialBarChart\",\n    \"Scatterplot\",\n    \"Sunburst\",\n    \"BumpChart\",\n    \"ConnectedScatterPlot\",\n    \"DumbbellChart\",\n    \"LineGraph\",\n    \"LineGraph2\",\n    \"LollipopChart\",\n    \"MultiLineGraph\",\n    \"ParallelCoordinates\",\n    \"RangeChart\",\n    \"SlopeGraph\",\n    \"StringlineChart\",\n    \"AreaChart\",\n    \"DensityPlot\",\n    \"RadarChart\",\n    \"RidgelinePlot\",\n    \"RoseChart\",\n    \"StackedAreaChart\",\n    \"StellarChart\",\n    \"StreamGraph\",\n    \"ViolinPlot\",\n    \"Isotype\",\n    \"GridAreaChart\",\n    \"MultipleBarCharts\",\n    \"MultipleBoxPlots\",\n    \"MultiplePieCharts\",\n    \"ScatterplotMatrix\",\n    \"Sparklines\",\n    \"GridStackedAreaChart\",\n    \"MultipleViolinPlots\"\n  ]\n\n  // const loadDataset = (d) => {\n  //   setDatasets(datasets.concat([d]));\n  // }\n\n  const resetStacks = () => {\n    setUndoStack([]);\n    setRedoStack([]);\n  }\n\n  return (\n    <div style={{overflow: \"hidden\"}}>\n      <Canvas scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} redoStack={redoStack} type=\"svg\"></Canvas>\n      <EventLayer scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} redoStack={redoStack}></EventLayer>\n      <div id=\"specList\" style={{display: 'none'}}>\n        <ul>\n          {demos.map(d => <li key={d} onClick={(e) => setSpec(d)}>{d}</li>)}\n        </ul>\n      </div>\n      <DataPanel scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} loadDataset={setDatasets}></DataPanel>\n      <LayerView scene={scene} renderer={renderer}></LayerView>\n      <ToolBar scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} redoStack={redoStack} resetStacks={resetStacks} loadScene={loadScene}></ToolBar>\n      <Inspector scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack}></Inspector>\n      <InteractiveLegend scene={scene} renderer={renderer}></InteractiveLegend>\n      <input type=\"text\" id=\"textElement\" style={{\"visibility\": 'hidden', \"position\": \"absolute\"}}></input>\n    </div>\n  )\n}\n\nexport default Authoring;\n","import Canvas from './Canvas';\nimport { useEffect, useState } from 'react';\nimport * as atlas from \"atlas-vis\";\nimport EventLayer from './EventLayer';\nimport ToolBar from './ToolBar';\nimport Inspector from './Inspector';\nimport LayerView from './LayerView';\nimport DataPanel from './DataPanel';\nimport './css/App.css';\nimport store from \"./store\";\nimport { select } from \"./canvasSlice\";\n\nfunction Templating(props) {\n    const renderer = atlas.renderer(\"svg\", \"canvas\");\n    const [scene, setScene] = useState(atlas.scene());\n    const [spec, setSpec] = useState('BarChartHorz');\n  \n    useEffect(() => {\n      document.body.style.backgroundColor = \"#ddd\";\n      document.body.style.overflow = \"hidden\";\n    }, [])\n  \n    useEffect(() => {\n      loadScene(\"specs/\" + spec + \".json\");\n    }, [spec]);\n  \n    useEffect(() => {\n      renderer.clear();\n      renderer.render(scene);\n    }, [renderer, scene]);\n  \n    const loadScene = async (url) => {\n      const spec = await loadJSON(url);\n      let exe = atlas.specExecutor();\n      let scene = await exe.run(spec);\n      store.dispatch(select([]));\n      setScene(scene);\n    }\n  \n    const demos = [\n      \"BarChartHorz\",\n      \"BarChartVert\",\n      \"BoxPlot\",\n      \"BulletChart\",\n      \"DivergingBarChart\",\n      \"GanttChart\",\n      \"GroupedBarChart\",\n      \"HeatMap\",\n      \"Histogram\",\n      \"MosaicPlot\",\n      \"StackedBarChart\",\n      \"TowerChart\",\n      \"Treemap\",\n      \"WaffleChart\",\n      \"WaterfallChart\"\n    ]\n  \n    return (\n      <div style={{overflow: \"hidden\"}}>\n        <Canvas scene={scene} renderer={renderer} type=\"svg\"></Canvas>\n        <EventLayer scene={scene} renderer={renderer}></EventLayer>\n        <div id=\"specList\">\n          <ul>\n            {demos.map(d => <li key={d} onClick={(e) => setSpec(d)}>{d}</li>)}\n          </ul>\n        </div>\n        <DataPanel scene={scene} renderer={renderer}></DataPanel>\n        <LayerView scene={scene} renderer={renderer}></LayerView>\n        <Inspector scene={scene} renderer={renderer}></Inspector>\n        <ToolBar></ToolBar>\n      </div>\n    )\n}\n\nasync function loadJSON(url) {\n    const response = await fetch(url);\n    const text = await response.text();\n    let json = JSON.parse(text);\n    return json;\n  }\n\nexport default Templating;","import './css/App.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Authoring from './Authoring';\nimport Templating from './Templating';\n\nfunction App(props) {\n  return (\n    <Router basename={'/app'}>\n      <div>\n        <Routes>\n          <Route path = \"/\" element={<Authoring/>}/>\n          <Route path = \"/reuse\" element={<Templating/>}/>\n        </Routes>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/bootstrap.min.css';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}