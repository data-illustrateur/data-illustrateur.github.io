{"version":3,"sources":["canvasSlice.js","toolSlice.js","store.js","Defs.js","Util.js","tools/PolylineTool.js","Canvas.js","tools/SelectionUI.js","tools/SelectTool.js","tools/DirectSelectTool.js","tools/RectTool.js","tools/CircleTool.js","tools/RingTool.js","tools/LineTool.js","EventLayer.js","tools/TextTool.js","ToolBar.js","Inspector.js","LayerView.js","DataPanel.js","InteractiveLegend.js","Authoring.js","Templating.js","App.js","reportWebVitals.js","index.js"],"names":["canvasSlice","createSlice","name","initialState","selected","directSelected","directSelectPreview","rectSelectRegion","itemUpdated","scaleUpdated","axisHandleVisible","legendClicked","dataItemJoined","newItemCreated","itemsDeleted","undoStackChanged","redoStackChanged","zoomLevel","panDelta","reducers","select","state","action","payload","directSelect","rectSelect","draw","console","log","updateItem","updateScale","toggleAxisHandle","customizeColorPalette","joinDataItem","createNewItem","deleteItems","updateUndoStack","updateRedoStack","setZoomLevel","pan","actions","toolSlice","activeTool","activateTool","configureStore","reducer","canvas","tool","properties","channel","accessor","options","display","value","undefined","parameters","id","divergingColorSchemes","sequentialColorSchemes","addToStack","scene","datasets","stack","type","stackType","scn","toJSON","t","tables","push","JSON","stringify","store","dispatch","length","getSVGPathData","items","vxSize","d","i","bounds","b","left","top","join","right","bottom","size","Math","max","width","height","radius","x","y","getAggregator","item","getItem","dataScope","numTuples","enc","getEncodingByItem","aggregator","getScheme","scale","scheme","getScaleType","canShareScale","channel1","channel2","c","indexOf","getDefaultCollectionLayout","numItems","ar","doubleGap","layout","rowGap","colGap","msc","getPositionInScene","clientX","clientY","svg","document","getElementById","pt","createSVGPoint","svgP","matrixTransform","getScreenCTM","inverse","getPropertyDef","itemType","prop","replace","toUpperCase","getPropertyID","g","p","pts","updateUI","vx","vy","d3","style","attr","finish","renderer","undoStack","r","mark","vertices","render","connect","resizeX","resizeY","props","useEffect","s","vb","bbox","node","getBoundingClientRect","wd","ht","parseInt","split","vbArr","map","translateByKey","getState","visible","pathY","pathX","pathPosition","translate","ds","itm","parent","_doTranslate","addEventListener","e","key","removeItem","PolylineTool","ctrlKey","metaKey","preventDefault","z","min","resetViewBox","className","getHandlePosition","nw","n","ne","se","sw","w","axisHandlePosition","updateAxisHandlePosition","axis","x1","y1","x2","y2","tx","ty","h","middle","isFlipped","center","text","encoding","rangeExtent","toFixed","redrawRect","styles","rect","attrs","a","resizeStarted","getResizeBounds","itmBounds","dx","dy","handles","downX","downY","selectAll","call","on","resizing","this","toChange","xRef","yRef","fs","floor","fontSize","setProperties","resizeEnded","peers","getPeersInScene","peerPathData","clone","cnt","parentStyles","itms","union","redrawSelection","seg","vertex1","vertex2","redrawDirectSelection","cb","cellBounds","numCols","numRows","data","abs","rects","enter","append","merge","sourceEvent","stopPropagation","datum","o","exit","remove","redrawGridGaps","redrawDirectSelectPreview","dir","newRE","getEncodedChannels","autoUpdateTicks","strokeWidth","stroke","fill","fontWeight","clickHeld","rectRegion","dragging","activeItem","itemX","itemY","hitTest","cg","sel","hit","dragItem","newX","newY","moved","EventLayer","deltaX","deltaY","onDoubleClick","children","child","SelectTool","onMouseDown","fieldType","pathHitTest","v","getFieldValue","legend","button","RectTool","CircleTool","RingTool","DirectSelectTool","LineTool","onMouseMove","pos","itmInSelection","shiftKey","cx","cy","angle","atan2","PI","angleR","round","dist","sqrt","pow","cos","sin","lp","onMouseUp","m","newSel","concat","filter","fillColor","outerRadius","innerRadius","anchor","property","fontFamily","focus","TextTool","tools","arrangements","getUsableTbls","dataTable","getOrientations","cmd","useDispatch","inputFile","useRef","useState","showRepeatModal","setShowRepeatModal","setCmd","tbls","setTbls","fields","setFields","orientations","setOrientations","joinMsg","setJoinMsg","switchTool","updatePreview","empty","clear","dataset","field","duplicate","strokeColor","addChild","coll","repeat","getUniqueFieldValues","divide","orientation","densify","classify","updateMsg","num","vals","msg","firstChild","classed","evt","CustomEvent","bubbles","cancelable","dispatchEvent","canRepeat","canDivide","canDensify","canClassify","canAlign","redoStack","onClick","current","click","ref","accept","onChange","f","target","files","reader","FileReader","onload","loadScene","parse","result","resetStacks","readAsText","getDataTables","fname","Object","values","saveAs","Blob","source","XMLSerializer","serializeToString","match","pop","title","getAttribute","usedFields","keys","nonNumericFields","toLowerCase","newPos","mean","forEach","doAlign","Modal","show","onShow","backdrop","keyboard","Header","Title","Body","Footer","Button","variant","reCreateRelatedAxes","headerClasses","classes","class","updatePropertyControl","propDef","val","sizeBound","positionBound","encodable","removeEncoding","info","anyItem","disabled","group","ct","na","params","paramDef","childrenOrder","ori","vertexShapeUpdated","currentColor","setCurrentColor","currentColorPropDef","setCurrentColorPropDef","currentDataTable","setCurrentDataTable","pastLayouts","setPastLayouts","def","panel","setCategoricalValue","ctrl","l","unshift","find","getDefaultLayout","setNumericValue","parseFloat","isNaN","encode","guide","firstVertex","lastVertex","highlightAxis","createNumericControl","createStringControl","onInput","setStringValue","createBooleanControl","setBooleanValue","CustomToggle","React","forwardRef","href","createPropertyControl","Dropdown","Toggle","bsPrefix","Menu","Form","Group","Stack","direction","gap","Label","Select","changeScaleType","aggr","changeAggregator","reCreateRelatedLegends","changeScheme","range","step","margin","float","createColorControl","createCategoryControl","getEncodableFields","scales","itmKey","encodings","encs","getFieldType","getReusableScales","Item","k","drop","as","onMouseEnter","onMouseLeave","htmlFor","src","alt","checked","toggleOrder","disableAlpha","color","onChangeComplete","hex","enumerateLayers","list","level","getLayerId","classId","layers","index","lv","slice","substring","getScene","getPeers","getLayerLabel","activeTbl","setActiveTbl","dataScopeInfo","setDataScopeInfo","useSearchParams","queryParameters","urlDataset","setUrlDataset","importDataset","useCallback","string","dname","tbl","csvFromString","loadDataset","err","warn","get","fetch","then","response","cols","useMemo","Cell","getRawValue","col","useTable","columns","hiddenColumns","useFilters","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","setAllFilters","getHeaderIcon","immerable","filters","getRowCount","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","row","getRowProps","cells","cell","getCellProps","setLegend","setColor","setValue","domain","_setRange","Authoring","setScene","setDatasets","setUndoStack","setRedoStack","body","backgroundColor","overflow","proj","json","loader","load","loadJSON","url","Templating","spec","setSpec","exe","run","window","onbeforeunload","event","returnValue","App","basename","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.59013232.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const canvasSlice = createSlice({\n  name: 'canvas',\n  initialState: {\n    selected: [],\n    directSelected: null,\n    directSelectPreview: null,\n    rectSelectRegion: {},\n    //item properties updated\n    itemUpdated: {},\n    //scale range or domain updated\n    scaleUpdated: {},\n    axisHandleVisible: false,\n    legendClicked: {},\n    dataItemJoined: {},\n    newItemCreated: {},\n    itemsDeleted: [],\n    undoStackChanged: {\"length\" : 0},\n    redoStackChanged: {\"length\" : 0},\n    zoomLevel: 100,\n    panDelta: {\"x\": 0, \"y\": 0}\n  },\n  reducers: {\n    select: (state, action) => {\n      state.selected = action.payload;\n    },\n    directSelect: (state, action) => {\n      state.directSelected = action.payload;\n    },\n    directSelectPreview: (state, action) => {\n      state.directSelectPreview = action.payload;\n    },\n    rectSelect: (state, action) => {\n      state.rectSelectRegion = action.payload;\n    },\n    draw: (state, action) => {\n      console.log(action);\n    },\n    updateItem: (state, action) => {\n      state.itemUpdated = action.payload;\n    },\n    updateScale: (state, action) => {\n      state.scaleUpdated = action.payload;\n    },\n    toggleAxisHandle: (state, action) => {\n      state.axisHandleVisible = action.payload;\n    },\n    customizeColorPalette: (state, action) => {\n      state.legendClicked = action.payload;\n    },\n    joinDataItem: (state, action) => {\n      state.dataItemJoined = action.payload;\n    },\n    createNewItem: (state, action) => {\n      state.newItemCreated = action.payload;\n    },\n    deleteItems: (state, action) => {\n      state.itemsDeleted = action.payload;\n    },\n    updateUndoStack: (state, action) => {\n      state.undoStackChanged = action.payload;\n    },\n    updateRedoStack: (state, action) => {\n      state.redoStackChanged = action.payload;\n    },\n    setZoomLevel: (state, action) => {\n      state.zoomLevel = action.payload;\n    },\n    pan: (state, action) => {\n      state.panDelta = action.payload;\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { select, directSelect, directSelectPreview, rectSelect, draw, updateItem, updateScale, toggleAxisHandle, customizeColorPalette, joinDataItem, createNewItem, deleteItems, updateUndoStack, updateRedoStack, setZoomLevel, pan } = canvasSlice.actions;\n\nexport default canvasSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\n\nexport const toolSlice = createSlice({\n  name: 'tool',\n  initialState: {\n    activeTool: \"Select\",\n  },\n  reducers: {\n    activateTool: (state, action) => {\n      state.activeTool = action.payload;\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { activateTool } = toolSlice.actions;\n\nexport default toolSlice.reducer;","import { configureStore } from '@reduxjs/toolkit'\nimport canvasSlice from './canvasSlice'\nimport toolSlice from './toolSlice'\n\nexport default configureStore({\n  reducer: {\n    canvas: canvasSlice,\n    tool: toolSlice\n  }\n})","const properties = {\n    // \"Peers\": {\n    //     \"Count\": {\"id\": \"sibling-count\", \"group\": \"Peers\", \"type\": \"numeric-range\", \"range\": [1, 100],\n    //         \"class\": [\"line-sibling-count-prop\", \"circle-sibling-count-prop\", \"rect-sibling-count-prop\", \"path-sibling-count-prop\", \"text-sibling-count-prop\", \"repeat-grid-sibling-count-prop\", \"partition-sibling-count-prop\", \"group-sibling-count-prop\"]},\n    //     \"Ordered By\": {\n    //         \"id\": \"peers-ordered-by\", \"group\": \"Peers\", \"type\": \"categorical\",\n    //         \"class\": [\"line-peers-ordered-by-prop\", \"circle-peers-ordered-by-prop\", \"rect-peers-ordered-by-prop\",\n    //             \"path-peers-ordered-by-prop\", \"text-peers-ordered-by-prop\", \"repeat-grid-peers-ordered-by-prop\",\n    //             \"partition-peers-ordered-by-prop\"],\n    //         \"options\": [{display:\"Data Source Order\", value: \"data-source-order\"}]\n    //     }\n    // },\n\n    \"Shape Position\": {\n        //need to add path-position-prop so that we can have \"scatterplots of paths\"\n        \"X\": {\"id\": \"x\", channel: \"x\", \"group\": \"Shape Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"pointText-prop\", \"path-prop\", \"polygon-prop\", \"image-prop\", \"group-prop\", \"area-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"y\", channel: \"y\", \"group\": \"Shape Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"pointText-prop\", \"path-prop\", \"polygon-prop\", \"image-prop\", \"group-prop\", \"area-prop\"], accessor: [\"y\"]},\n        \"Baseline\": {\"id\": \"baseline\", \"group\": \"Shape Position\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"area-prop\"], accessor: [\"baseline\"],\n            options: [{display:\"top\", value:'top'},\n            {display:\"middle\", value:'middle'},\n            {display:\"bottom\", value:'bottom'},\n            {display:\"left\", value:'left'},\n            {display:\"center\", value:'center'},\n            {display:\"right\", value:'right'}]\n        }\n    },\n\n    \"Segment Position\": {\n        \"X\": {\"id\": \"segmentX\", channel: \"x\", \"group\": \"Segment Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"segment-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"segmentY\", channel: \"y\", \"group\": \"Segment Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"segment-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Vertex Position\": {\n        \"X\": {\"id\": \"vxX\", channel: \"x\", \"group\": \"Vertex Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"vxY\", channel: \"y\", \"group\": \"Vertex Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Size\": {\n        \"Width\": {\"id\": \"width\", channel: \"width\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"rect-prop\", \"path-prop\", \"image-prop\", \"area-prop\"], accessor: [\"bounds\",\"width\"]},\n        \"Height\": {\"id\": \"height\", channel: \"height\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"rect-prop\", \"path-prop\", \"image-prop\", \"area-prop\"], accessor: [\"bounds\",\"height\"]},\n        \"Radius\": {\"id\": \"radius\", channel: \"radius\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"circle-prop\"], accessor: [\"radius\"]},\n        \"Inner Radius\": {\"id\": \"innerRadius\", channel: \"innerRadius\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"pie-prop\", \"ring-prop\"], accessor: [\"innerRadius\"]},\n        \"Outer Radius\": {\"id\": \"outerRadius\", channel: \"outerRadius\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"pie-prop\", \"ring-prop\"], accessor: [\"outerRadius\"]},\n        \"Angle\": {\"id\": \"angle\", channel: \"angle\", \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"pie-prop\"], accessor: [\"angle\"]},\n        \"Thickness\": {\"id\": \"thickness\", channel: \"thickness\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"arc-prop\", \"pie-prop\", \"ring-prop\"], accessor: [\"thickness\"]},\n        \"Area\": {\"id\": \"area\", channel: \"area\",  \"group\": \"Size\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"rect-prop\", \"circle-prop\"], accessor: [\"area\"]}\n    },\n\n    \"Text\": {\n        \"Content\": {\"id\": \"content\", channel: \"text\",  \"group\": \"Text\", \"type\": \"string\", \"encodable\": true, \"class\": [\"pointText-prop\"], accessor:[\"text\"]},\n        \"Font\": {\"id\": \"fontFamily\", channel: \"fontFamily\", \"group\": \"Text\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"pointText-prop\"], accessor:[\"fontFamily\"],\n            \"options\": [\n                {display:\"Arial\", value:\"Arial, sans-serif\"},\n                {display:\"Alegreya Sans\", value:\"'Alegreya Sans', sans-serif\"},\n                {display:\"Alegreya\", value:\"'Alegreya', serif\"},\n                {display:\"Calibri\", value:\"Calibri, sans-serif\"},\n                {display:\"Cambria\", value:\"Cambria, sans-serif\"},\n                {display:\"Chivo\", value:\"'Chivo', sans-serif\"},\n                {display:\"Comic Sans MS\", value:\"'Comic Sans MS', sans-serif\"},\n                {display:\"Consolas\", value:\"Consolas, monospace\"},\n                {display:\"Cormorant\", value:\"'Cormorant', serif\"},\n                {display:\"Courier New\", value:\"'Courier New', Courier, monospace\"},\n                {display:\"Eczar\", value:\"'Eczar', serif\"},\n                {display:\"Fira Sans\", value:\"'Fira Sans', sans-serif\"},\n                {display:\"Futura\", value:\"Futura, sans-serif\"},\n                {display:\"Georgia\", value:\"Georgia, serif\"},\n                {display:\"Helvetica Neue\", value:\"'HelveticaNeue', 'Helvetica Neue', 'HelveticaNeueRoman', 'HelveticaNeue-Roman', 'Helvetica Neue Roman', sans-serif\"},\n                {display:\"Impact\", value:\"Impact, Charcoal, sans-serif\"},\n                {display:\"Palatino\", value:\"Palatino, serif\"},\n                {display:\"Libre Franklin\", value:\"'Libre Franklin', sans-serif\"},\n                {display:\"Playfair Display\", value:\"'Playfair Display', serif\"},\n                {display:\"Playfair Display SC\", value:\"'Playfair Display SC', serif\"},\n                {display:\"Rubik\", value:\"'Rubik', sans-serif\"},\n                {display:\"Space Mono\", value:\"'Space Mono', monospace\"},\n                {display:\"Times New Roman\", value:\"'Times New Roman', TimesNewRoman, serif\"},\n                {display:\"Trebuchet MS\", value:\"'Trebuchet MS', sans-serif\"},\n                {display:\"Verdana\", value:\"Verdana, Geneva, sans-serif\"},\n                {display:\"Work Sans\", value:\"'Work Sans', sans-serif\"}\n            ]},\n        \"Color\": {\"id\": \"textColor\", channel: \"fillColor\", \"group\": \"Text\", \"type\": \"color\", \"encodable\": true, \"class\": [\"pointText-prop\"], accessor:[\"fillColor\"]},\n        \"Weight\": {\"id\": \"fontWeight\", channel: \"fontWeight\",  \"group\": \"Text\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"pointText-prop\"], accessor:[\"fontWeight\"], \"options\": [\n            {display: \"normal\", value: \"normal\"},\n            {display: \"bold\", value: \"bold\"}\n        ]},\n        \"Size (px)\": {\"id\": \"fontSize\", channel: \"fontSize\",  \"group\": \"Text\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"pointText-prop\"], accessor:[\"fontSize\"]},\n        \"Horz Anchor\": {\"id\": \"horzAnchor\", channel: \"horzAnchor\",  \"group\": \"Text\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"pointText-prop\"], accessor:[\"horzAnchor\"], \"options\": [\n            {display: \"left\", value: \"left\"},\n            {display: \"center\", value: \"center\"},\n            {display: \"right\", value: \"right\"}\n        ]},\n        \"Vert Anchor\": {\"id\": \"vertAnchor\", channel: \"vertAnchor\",  \"group\": \"Text\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"pointText-prop\"], accessor:[\"vertAnchor\"], \"options\": [\n            {display: \"top\", value: \"top\"},\n            {display: \"middle\", value: \"middle\"},\n            {display: \"bottom\", value: \"bottom\"}\n        ]},\n    },\n\n    \"Vertex Style\": {\n        \"Shape\": {\"id\": \"vxShape\", channel: \"shape\",  \"group\": \"Vertex Style\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"vertex-prop\"], accessor:[\"shape\"], \"options\": [\n            {display: \"none\", value: undefined},\n            {display: \"rectangle\", value: \"rect\"},\n            {display: \"circle\", value: \"circle\"}\n        ]},\n        \"Width\": {\"id\": \"vxWidth\", \"channel\": \"width\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"width\"]},\n        \"Height\": {\"id\": \"vxHeight\", \"channel\": \"height\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"height\"]},\n        \"Radius\": {\"id\": \"vxRadius\", \"channel\": \"radius\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"radius\"]},\n        \"Fill Color\": {\"id\": \"vxFillColor\", \"channel\": \"fillColor\", \"group\": \"Vertex Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"fillColor\"]},\n        \"Stroke Color\": {\"id\": \"vxStrokeColor\", \"channel\": \"strokeColor\", \"group\": \"Vertex Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"strokeColor\"]},\n        \"Stroke Width\": {\"id\": \"vxStrokeWidth\", \"channel\": \"strokeWidth\", \"group\": \"Vertex Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"vertex-prop\"], accessor: [\"strokeWidth\"]},\n        \"Opacity\": {\"id\": \"vxOpacity\", \"channel\": \"opacity\", \"group\": \"Vertex Style\", \"type\": \"numeric-range\", \"encodable\": false, \"class\": [\"vertex-prop\"], \"range\": [0, 1], accessor: [\"opacity\"]},\n    },\n\n    \"Style\": {\n        // \"Descriptor\": {\"id\": \"collection-descriptor\", \"group\": \"Style\", \"type\": \"categorical\", \"class\": [\"collection-prop\", \"partition-prop\"], \"options\": [\n        //     {display:\"Show\", value:'Show'},{display:\"Hide\", value:'Hide'}\n        // ]},\n        \"Curve Mode\": {\"id\": \"curveMode\", \"channel\": \"curveMode\", \"group\": \"Style\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"path-prop\", \"area-prop\"], accessor: [\"curveMode\"],\n            \"options\": [\n                {\"display\": \"Natural\", value: \"natural\", parameters: []},\n                {\"display\": \"Basis\", value: \"basis\", parameters: []},\n                {\"display\": \"BumpX\", value: \"bumpX\", parameters: []},\n                {\"display\": \"BumpY\", value: \"bumpY\", parameters: []},\n                {\"display\": \"Linear\", value: \"linear\", parameters: []},\n                {\"display\": \"Step\", value: \"step\", parameters: []},\n                {\"display\": \"CatmullRom\", value: \"CatmullRom\", parameters: []},\n                {\"display\": \"Cardinal\", value: \"cardinal\", parameters: []}\n            ]\n        },\n        \"Fill Color\": {\"id\": \"fillColor\", \"channel\": \"fillColor\", \"group\": \"Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], accessor: [\"fillColor\"]},\n        \"Stroke Color\": {\"id\": \"strokeColor\", \"channel\": \"strokeColor\", \"group\": \"Style\", \"type\": \"color\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], accessor: [\"strokeColor\"]},\n        \"Stroke Width\": {\"id\": \"strokeWidth\", \"channel\": \"strokeWidth\", \"group\": \"Style\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], accessor: [\"strokeWidth\"]},\n        \"Opacity\": {\"id\": \"opacity\", \"channel\": \"opacity\", \"group\": \"Style\", \"type\": \"numeric-range\", \"encodable\": false, \"class\": [\"line-prop\", \"circle-prop\", \"rect-prop\", \"path-prop\", \"polygon-prop\", \"arc-prop\", \"pie-prop\", \"text-prop\", \"area-prop\", \"ring-prop\"], \"range\": [0, 1], accessor: [\"opacity\"]}\n\n    },\n\n    \"Canvas\": {\n        \"Background\": {\"id\": \"canvasFillColor\", \"group\": \"canvas\", \"type\": \"color\", \"encodable\": false, \"class\": [\"canvas-prop\"], \"accessor\": [\"fillColor\"]}\n    },\n\n    \"Collection Properties\": {\n        \"X\": {\"id\": \"collectionX\", channel: \"x\", \"group\": \"collection\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"collection-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"collectionY\", channel: \"y\", \"group\": \"collection\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"collection-prop\"], accessor: [\"y\"]},\n        \"Children Order\": {\"id\": \"childrenOrder\", \"group\": \"collection\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"collection-prop\"], accessor: [\"childrenOrder\", \"field\"],\n            \"options\": [{display:\"Default\", value:'default', parameters: []}]\n        }        \n    },\n\n    \"Glyph Position\": {\n        \"X\": {\"id\": \"glyphX\", channel: \"x\", \"group\": \"Glyph Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"glyph-prop\"], accessor: [\"x\"]},\n        \"Y\": {\"id\": \"glyphY\", channel: \"y\", \"group\": \"Glyph Position\", \"type\": \"numeric\", \"encodable\": true, \"class\": [\"glyph-prop\"], accessor: [\"y\"]}\n    },\n\n    \"Layout\": {\n        \"Type\": {\"id\": \"layoutType\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"collection-prop\", \"grid-prop\", \"stack-prop\", \"none-prop\"],\n            \"options\": [{display:\"Grid\", value:'grid', parameters: ['Num Rows', 'Num Columns', 'Row Gap', 'Column Gap', 'Horz Gravity', 'Vert Gravity', 'Direction']},\n                        {display:\"Stack\", value:'stack', parameters: ['Orientation', 'Horz Gravity', 'Vert Gravity']},\n                        {display:\"Pack\", value:'packing', parameters: []},\n                        {display:\"Treemap\", value:'treemap', parameters: []},\n                        {display:\"None\", value:'none', parameters: []}\n                        ]\n        },\n        \"Num Rows\": {\"id\": \"numRows\", \"group\": \"Layout\", \"type\": \"numeric-integer\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"numRows\"]},\n        \"Num Columns\": {\"id\": \"numCols\", \"group\": \"Layout\", \"type\": \"numeric-integer\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"numCols\"]},\n        \"Row Gap\": {\"id\": \"rowGap\", \"group\": \"Layout\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"rowGap\"]},\n        \"Column Gap\": {\"id\": \"colGap\", \"group\": \"Layout\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"colGap\"]},\n        \"Orientation\": {\"id\": \"orientation\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"stack-prop\", \"layout-prop\"], accessor: [\"orientation\"], \n            \"options\": [{\"display\": \"Horizontal\", value: \"horizontal\", parameters: []}, {\"display\": \"Vertical\", value: \"vertical\", parameters: []}]\n        },\n        \"Horz Gravity\": {\"id\": \"horzGravity\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"grid-prop\", \"stack-prop\", \"layout-prop\"], accessor: [\"horzCellAlignment\"], \n            \"options\": [{\"display\": \"Left\", value: \"left\", parameters: []}, {\"display\": \"Center\", value: \"center\", parameters: []}, {\"display\": \"Right\", value: \"right\", parameters: []}]\n        },\n        \"Vert Gravity\": {\"id\": \"vertGravity\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"grid-prop\", \"stack-prop\", \"layout-prop\"], accessor: [\"vertCellAlignment\"], \n            \"options\": [{\"display\": \"Top\", value: \"top\", parameters: []}, {\"display\": \"Middle\", value: \"middle\", parameters: []}, {\"display\": \"Bottom\", value: \"bottom\", parameters: []}]\n        },\n        \"Direction\": {\"id\": \"direction\", \"group\": \"Layout\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"grid-prop\", \"layout-prop\"], accessor: [\"direction\"], \n            \"options\": [{\"display\": \"Left to Right, Bottom to Top\", value: 'l2r_b2t', parameters: []}, \n                        {\"display\": \"Left to Right, Top to Bottom\", value: 'l2r_t2b', parameters: []}, \n                        {\"display\": \"Right to Left, Bottom to Top\", value: 'r2l_b2t', parameters: []},\n                        {\"display\": \"Right to Left, Top to Bottom\", value: 'r2l_t2b', parameters: []}, \n                        {\"display\": \"Bottom to Top, Left to Right\", value: 'b2t_l2r', parameters: []}, \n                        {\"display\": \"Top to Bottom, Left to Right\", value: 't2b_l2r', parameters: []}, \n                        {\"display\": \"Bottom to Top, Right to Left\", value: 'b2t_r2l', parameters: []},\n                        {\"display\": \"Top to Bottom, Right to Left\", value: 't2b_r2l', parameters: []}\n                    ]\n        } \n        //\"Gap\": {\"id\": \"gap\", \"group\": \"Layout\", \"type\": \"numeric\", \"class\": [\"partition-prop\"]},\n    },\n\n    \"Axis\": {\n        \"Include 0\": {id: \"includeZero\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"includeZero\"]},\n        \"Show Path\": {id: \"showPath\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"pathVisible\"]},\n        \"Show Ticks\": {id: \"showTicks\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"tickVisible\"]},\n        \"Orientation\": {\"id\": \"axisOrientation\", \"group\": \"axis\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"orientation\"],\n            \"options\": [{display:\"top\", value:'top'},\n                        {display:\"bottom\", value:'bottom'},\n                        {display:\"left\", value:'left'},\n                        {display:\"right\", value:'right'}]\n        },\n        \"Stroke Color\": {\"id\": \"axisStrokeColor\", \"group\": \"axis\", \"type\": \"color\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"strokeColor\"]},\n        \"Text Color\": {\"id\": \"axisTextColor\", \"group\": \"axis\", \"type\": \"color\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"textColor\"]},\n        \"Path Position\": {\"id\": \"pathPos\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"pathPosition\"]},\n        \"Tick Offset\": {\"id\": \"tickOffset\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"tickOffset\"]},\n        \"Tick Size\": {\"id\": \"tickSize\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"tickSize\"]},\n        \"Label Offset\": {\"id\": \"labelOffset\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"labelOffset\"]},\n        \"Label Format\": {\"id\": \"labelFormat\", \"group\": \"axis\", \"type\": \"string\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"labelFormat\"]},\n        \"Label Rotation\": {\"id\": \"labelRotation\", \"group\": \"axis\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"labelRotation\"]},\n        \"Show Title\": {id: \"showTitle\", \"group\": \"axis\", \"type\": \"boolean\", \"encodable\": false, \"class\": [\"axis-prop\"], \"accessor\": [\"showTitle\"]},\n    },\n\n    \"Legend\": {\n        // \"X\": {\"id\": \"legendX\", channel: \"x\", \"group\": \"legend\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"legend-prop\"], accessor: [\"x\"]},\n        // \"Y\": {\"id\": \"legendY\", channel: \"y\", \"group\": \"legend\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"legend-prop\"], accessor: [\"y\"]},\n        \"Text Color\": {\"id\": \"legendTextColor\", \"group\": \"legend\", \"type\": \"color\", \"encodable\": false, \"class\": [\"legend-prop\"], \"accessor\": [\"textColor\"]},\n        \"Orientation\": {\"id\": \"legendOrientation\", \"group\": \"legend\", \"type\": \"categorical\", \"encodable\": false, \"class\": [\"legend-prop\"], \"accessor\": [\"orientation\"],\n                        \"options\": [{display:\"Horizontal\", value:'horizontal'}, {display:\"Vertical\", value:'vertical'}]}\n    },\n\n    \"Gridlines\": {\n        \"Stroke Color\": {\"id\": \"gridlineStrokeColor\", \"group\": \"Gridlines\", \"type\": \"color\", \"encodable\": false, \"class\": [\"gridlines-prop\"], accessor: [\"strokeColor\"]},\n        \"Stroke Width\": {\"id\": \"gridlineStrokeWidth\", \"group\": \"Gridlines\", \"type\": \"numeric\", \"encodable\": false, \"class\": [\"gridlines-prop\"], accessor: [\"strokeWidth\"]}\n    }\n\n    // \"Alignment in Cell\": {\n    //     \"Horizontal\": {\"id\": \"x-constraint\", \"group\": \"Float\", \"type\": \"categorical\", \"encodable\": false,\n    //         \"class\": [\"line-constraint-prop\", \"circle-constraint-prop\", \"rect-constraint-prop\", \"text-constraint-prop\",\"repeat-grid-constraint-prop\", \"partition-constraint-prop\"],\n    //         \"options\": [{display:\"Off\", value:'off'}, {display:\"Left\", value:'left'},{display:\"Center\", value:'center'},{display:\"Right\", value:'right'}]},\n    //     \"Vertical\": {\"id\": \"y-constraint\", \"group\": \"Float\", \"type\": \"categorical\", \"encodable\": false,\n    //         \"class\": [\"line-constraint-prop\", \"circle-constraint-prop\", \"rect-constraint-prop\", \"text-constraint-prop\",\"repeat-grid-constraint-prop\", \"partition-constraint-prop\"],\n    //         \"options\": [{display:\"Off\", value:'off'}, {display:\"Top\", value:'top'},{display:\"Middle\", value:'middle'},{display:\"Bottom\", value:'bottom'}]}\n    // }\n};\n\nconst divergingColorSchemes = {\n    \"interpolateBrBG\": \"BrownBlueGreen\",\n    \"interpolatePRGn\": \"PurpleGreen\",\n    \"interpolatePiYG\": \"PinkYellowGreen\",\n    \"interpolatePuOr\": \"PurpleOrange\",\n    \"interpolateRdBu\": \"RedBlue\",\n    \"interpolateRdGy\": \"RedGrey\",\n    \"interpolateRdYlBu\": \"RedYellowBlue\",\n    \"interpolateRdYlGn\": \"RedYellowGreen\",\n    \"interpolateSpectral\": \"Spectral\"\n};\n\nconst sequentialColorSchemes = {\n    \"interpolateTurbo\": \"Turbo\",\n    \"interpolateViridis\": \"Viridis\",\n    \"interpolateInferno\": \"Inferno\",\n    \"interpolateMagma\": \"Magma\",\n    \"interpolatePlasma\": \"Plasma\",\n    \"interpolateCividis\": \"Cividis\",\n    \"interpolateWarm\": \"Warm\",\n    \"interpolateCool\": \"Cool\",\n    \"interpolateCubehelixDefault\": \"CubehelixDefault\",\n    \"interpolateBuGn\": \"Blue-Green\",\n    \"interpolateBuPu\": \"Blue-Purple\",\n    \"interpolateGnBu\": \"Green-Blue\",\n    \"interpolateOrRd\": \"Orange-Red\",\n    \"interpolatePuBuGn\": \"Purple-Blue-Green\",\n    \"interpolatePuBu\": \"Purple-Blue\",\n    \"interpolatePuRd\": \"Purple-Red\",\n    \"interpolateRdPu\": \"Red-Purple\",\n    \"interpolateYlGnBu\": \"Yellow-Green-Blue\",\n    \"interpolateYlGn\": \"Yellow-Green\",\n    \"interpolateYlOrBr\": \"Yellow-Orange-Brown\",\n    \"interpolateYlOrRd\": \"Yellow-Orange-Red\" \n};\n\nexport { properties, divergingColorSchemes, sequentialColorSchemes }","import { properties } from \"./Defs\";\nimport * as msc from \"mascot-vis\";\nimport store from \"./store\";\nimport { updateRedoStack, updateUndoStack } from \"./canvasSlice\";\n\nconst addToStack = (scene, datasets, stack, type) => {\n    let stackType = type ? type : \"undo\";\n    let scn = scene.toJSON();\n    for (let t of datasets) {\n        if (!(t.id in scn.tables)) {\n            scn.tables[t.id] = t.toJSON();\n        }\n    }\n    // let s = stack.slice();\n    // s.push(JSON.stringify(scn));\n    // setStack(s);\n    stack.push(JSON.stringify(scn));\n    // console.log(\"added to stack\", stackType, stack.length);\n    if (stackType === \"undo\")\n        store.dispatch(updateUndoStack({\"length\": stack.length}));\n    else if (stackType === \"redo\")\n        store.dispatch(updateRedoStack({\"length\": stack.length}));\n}\n\nconst getSVGPathData = (items, vxSize) => {\n    let d = \"\";\n    for (let i of items) {\n        if (i.getSVGPathData)\n            d += i.getSVGPathData();\n        else if (i.bounds) {\n            let b = i.bounds;\n            d += [\"M\", b.left, b.top].join(\" \");\n            d += [\"L\", b.right, b.top].join(\" \");\n            d += [\"L\", b.right, b.bottom].join(\" \");\n            d += [\"L\", b.left, b.bottom, \"Z\"].join(\" \");\n        } else if (i.type === \"vertex\") {\n            let size = Math.max(i.width, i.height, i.radius, vxSize);\n            d += [\"M\", i.x - size/2, i.y - size/2].join(\" \");\n            d += [\"L\", i.x + size/2, i.y - size/2].join(\" \");\n            d += [\"L\", i.x + size/2, i.y + size/2].join(\" \");\n            d += [\"L\", i.x - size/2, i.y + size/2, \"Z\"].join(\" \");\n        }\n    }\n    return d;\n}\n\n// const getPathVerticesData = (p, vertexSize) => {\n//     let d = \"\";\n//     for (let v of p.vertices) {\n//         let size = Math.max(v.width, v.height, v.radius, vertexSize);\n//         d += [\"M\", v.x - size/2, v.y - size/2].join(\" \");\n//         d += [\"L\", v.x + size/2, v.y - size/2].join(\" \");\n//         d += [\"L\", v.x + size/2, v.y + size/2].join(\" \");\n//         d += [\"L\", v.x - size/2, v.y + size/2, \"Z\"].join(\" \");\n//     }\n//     return d;\n// }\n\nconst getReusableScales = (fieldType, channel, scene) => {\n    let r = {};\n    for (let itmKey in scene.encodings) {\n        let encs = scene.encodings[itmKey];\n        for (let c in encs) {\n            let enc = encs[c];\n            if (canShareScale(c, channel) && enc.dataTable.getFieldType(enc.field) === fieldType) {\n                if (!(enc.scale.id in r))\n                    r[enc.scale.id] = [];\n                r[enc.scale.id].push(enc);\n            }   \n        }\n    }\n    return r;\n}\n\nconst getAggregator = (channel, selected, directSelected, scene) => {\n    let item;\n    if (selected.length >= 1) {\n        item = scene.getItem(selected[0]);\n    } else if (directSelected) {\n        item = scene.getItem(directSelected);\n    }\n    if (!item) return null;\n    if (!item.dataScope) return null;\n    if (item.dataScope.numTuples === 1) return null; \n    let enc = scene.getEncodingByItem(item, channel);\n    if (!enc) return null;\n    return enc.aggregator;\n}\n\nconst getScheme = (channel, selected, directSelected, scene) => {\n    let item;\n    if (selected.length >= 1) {\n        item = scene.getItem(selected[0]);\n    } else if (directSelected) {\n        item = scene.getItem(directSelected);\n    }\n    if (!item) return null; \n    let enc = scene.getEncodingByItem(item, channel);\n    if (!enc) return null;\n    return enc.scale.scheme;\n}\n\nconst getScaleType = (channel, selected, directSelected, scene) => {\n    let item;\n    if (selected.length >= 1) {\n        item = scene.getItem(selected[0]);\n    } else if (directSelected) {\n        item = scene.getItem(directSelected);\n    }\n    if (!item) return null;\n    let enc = scene.getEncodingByItem(item, channel);\n    if (!enc) return null;\n    return enc.scale.type;\n}\n\nconst canShareScale = (channel1, channel2) => {\n    const candidates = [[\"x\", \"width\"], [\"y\", \"height\"], [\"fillColor\", \"strokeColor\"]];\n    for (let c of candidates) {\n        if (c.indexOf(channel1) >= 0 && c.indexOf(channel2) >= 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst getDefaultCollectionLayout = (item, numItems) => {\n    let ar = item.bounds.width/item.bounds.height,\n        doubleGap = item.type === \"collection\" && item.layout && item.layout.type === \"grid\",\n        rowGap = doubleGap ? item.layout.rowGap * 2 : 5,\n        colGap = doubleGap ? item.layout.colGap * 2 : 5;\n    // if (numItems > 50) {\n    //     return msc.layout(\"grid\", {\"numRows\": Math.floor(Math.sqrt(numItems)), \"rowGap\": rowGap, \"colGap\": colGap});\n    // } else {\n    if (ar > 2) {\n        return msc.layout(\"grid\", {\"numCols\": 1, \"rowGap\": rowGap});\n    } else {\n        return msc.layout(\"grid\", {\"numRows\": 1, \"colGap\": colGap});\n    }\n    //}\n}\n\nconst getPositionInScene = (clientX, clientY) => {\n    // const rect = document.getElementById(\"canvas\").getBoundingClientRect();\n    // return [clientX - rect.x, clientY - rect.y];\n    const svg = document.getElementById('canvas');\n    const pt = svg.createSVGPoint();\n    pt.x = clientX;\n    pt.y = clientY;\n    const svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\n    return [svgP.x, svgP.y];\n}\n\nconst getPositionInWindow = (sceneX, sceneY) => {\n    const rect = document.getElementById(\"canvas\").getBoundingClientRect();\n    return [sceneX + rect.x, rect.y + sceneY];\n}\n\nconst getDefaultLayout = (layout) => {\n    switch (layout) {\n        case \"stack\":\n            return msc.layout(\"stack\", {orientation: \"vertical\"});\n        case \"packing\":\n            return msc.layout(\"packing\");\n        case \"none\":\n            return undefined;\n        case \"grid\":\n        default:\n            return msc.layout(\"grid\", {numRows: 1});\n    }\n}\n\nconst getPropertyID = (itemType, prop) => {\n    switch (itemType) {\n        case \"vertex\":\n            return \"vx\" + prop.replace(/^\\w/, c => c.toUpperCase());;\n        case \"scene\":\n            return \"canvas\" + prop.replace(/^\\w/, c => c.toUpperCase());;\n        case \"collection\": \n        case \"segment\":\n        case \"legend\":\n            return itemType + prop.replace(/^\\w/, c => c.toUpperCase());\n        default:\n            return prop;\n    }\n}\n\nconst getPropertyDef = (itemType, prop) => {\n    const id = getPropertyID(itemType, prop);\n    for (let g in properties) {\n        for (let p in properties[g]) {\n            if (properties[g][p].id === id)\n                return properties[g][p];\n        }\n    }\n    return null;\n}\n\nexport {addToStack, getSVGPathData, getDefaultLayout, getScaleType, getAggregator, getScheme, getReusableScales, getPositionInScene, getPositionInWindow, getPropertyID, getPropertyDef, getDefaultCollectionLayout};","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet pts = [], x = undefined, y = undefined;\n\nexport const mouseDown = (e, scene) => {\n    //const p = getPositionInScene(e.clientX, e.clientY);\n    //pts.push([p[0], p[1]]);\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    if (x !== undefined && y !== undefined) {\n        let dist = Math.sqrt(Math.pow(x - pts[0][0], 2) + Math.pow(y - pts[0][1], 2));\n        if (dist < 2 && pts.length > 2) {\n            pts.push([pts[0][0], pts[0][1]]);\n            finish(scene, datasets, renderer, undoStack);\n        } else {\n            pts.push([x, y]);\n            updateUI();\n        }\n    } else {\n        const p = getPositionInScene(e.clientX, e.clientY);\n        pts.push([p[0], p[1]]);\n    }\n    d3.select(\"#selectionUI\").select(\"#vertexPreview\").style(\"visibility\", \"hidden\");\n}\n\nexport const updateUI = () => {\n    let d = [\"M\", pts[0][0], pts[0][1]].join(\" \");\n    for (let i = 1; i < pts.length; i++) {\n        let vx = pts[i][0], vy = pts[i][1];\n        if (vx === pts[0][0] && vy === pts[0][1]) {\n            d += \"Z\";\n        } else {\n            d += [\"L\", pts[i][0], pts[i][1]].join(\" \");\n        }\n    }\n    if (x !== undefined && y !== undefined)\n        d += [\"L\", x, y].join(\" \");\n    d3.select(\"#polylineToolUI\").style(\"visibility\", \"visible\").style(\"fill\", \"none\").attr(\"d\", d);\n}\n\nexport const mouseMove = (e, scene) => {\n    if (pts.length === 0) return;\n    let p = getPositionInScene(e.clientX, e.clientY), lp = pts[pts.length-1];\n    if (e.shiftKey) {\n        let angle = Math.atan2(p[1] - lp[1], p[0] - lp[0]) * 180 / Math.PI,\n            angleR = Math.round(angle/45) * 45 * Math.PI/180, \n            dist = Math.sqrt(Math.pow(p[1] - lp[1], 2) + Math.pow(p[0] - lp[0], 2));\n        x = lp[0] + Math.cos(angleR) * dist;\n        y = lp[1] + Math.sin(angleR) * dist;\n    } else {\n        x = p[0];\n        y = p[1];\n    }\n    let dist = Math.sqrt(Math.pow(x - pts[0][0], 2) + Math.pow(y - pts[0][1], 2));\n    if (dist < 2 && pts.length > 2) {\n        d3.select(\"#selectionUI\").select(\"#vertexPreview\").attr(\"x\", pts[0][0] - 5).attr(\"y\", pts[0][1] - 5)\n            .attr(\"width\", 10).attr(\"height\", 10).style(\"visibility\", \"visible\");\n    } else {\n        d3.select(\"#selectionUI\").select(\"#vertexPreview\").style(\"visibility\", \"hidden\");\n    }\n    updateUI();\n}\n\nexport const finish = (scene, datasets, renderer, undoStack) => {\n    if (!pts || pts.length === 0) {\n        return;\n    }\n    updateUI();\n    d3.select(\"#polylineToolUI\").style(\"visibility\", \"hidden\");\n    if (pts.length > 1) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"path\", {vertices: pts});\n        store.dispatch(createNewItem(r.id));\n        //store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    pts = [];\n    x = undefined;\n    y = undefined;\n}","import React from \"react\";\nimport './css/Canvas.css';\nimport { connect } from \"react-redux\";\nimport { useEffect } from 'react';\nimport { deleteItems, select, setZoomLevel, toggleAxisHandle, updateItem } from \"./canvasSlice\";\nimport store from \"./store\";\nimport * as PolylineTool from \"./tools/PolylineTool\";\nimport * as d3 from 'd3';\n\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    itemUpdated: state.canvas.itemUpdated,\n    scaleUpdated: state.canvas.scaleUpdated,\n    dataItemJoined: state.canvas.dataItemJoined,\n    itemsDeleted: state.canvas.itemsDeleted,\n    zoomLevel: state.canvas.zoomLevel,\n    panDelta: state.canvas.panDelta\n});\n\nfunction Canvas(props) {\n\n    useEffect(() => {\n        props.renderer.render(props.scene);\n    }, [props.scene, props.renderer, props.itemUpdated, props.scaleUpdated, props.dataItemJoined, props.itemsDeleted])\n\n    useEffect(() => {\n        if (!props.zoomLevel) return;\n        let svgs = [\"#canvas\", \"#evtLayer\"];\n        for (let s of svgs) {\n            let svg = d3.select(s), vb = svg.attr(\"viewBox\"), \n                bbox = svg.node().getBoundingClientRect(), wd = bbox.width, ht = bbox.height;\n            let left = vb? parseInt(vb.split(\" \")[0]) : 0, top = vb? parseInt(vb.split(\" \")[1]) : 0;\n            svg.attr(\"viewBox\", [left, top, left + wd*100/props.zoomLevel, top + ht*100/props.zoomLevel].join(\" \"));\n        }\n    }, [props.zoomLevel])\n\n    const resetViewBox = () => {\n        let svgs = [\"#canvas\", \"#evtLayer\"];\n        for (let s of svgs) {\n            let svg = d3.select(s),\n                bbox = svg.node().getBoundingClientRect(), wd = bbox.width, ht = bbox.height;\n            svg.attr(\"viewBox\", [0, 0, wd, ht].join(\" \"));\n        }\n    }\n\n    useEffect(() => {\n        if (!props.panDelta) return;\n        let svgs = [\"#canvas\", \"#evtLayer\"];\n        for (let s of svgs) {\n            let svg = d3.select(s), vb = svg.attr(\"viewBox\"),\n                bbox = svg.node().getBoundingClientRect(), wd = bbox.width, ht = bbox.height;\n            let vbArr = vb ? vb.split(\" \").map(d => parseInt(d)) : [0, 0, wd, ht];\n            svg.attr(\"viewBox\", [vbArr[0] + props.panDelta.x, vbArr[1] + props.panDelta.y, vbArr[2], vbArr[3]].join(\" \"));\n        }\n    }, [props.panDelta])\n\n    useEffect(() => {\n\n        const translateByKey = (x, y) => {\n            let s = store.getState().canvas.selected;\n            if (s && s.length > 0) {\n                let item = props.scene.getItem(s[0]);\n                if (item && item.type === \"axis\") {\n                    store.dispatch(toggleAxisHandle({visible: false}));\n                    if (item.channel === \"x\" || item.channel === \"width\") {\n                        item.pathY = item.pathY + y;\n                    } else if (item.channel === \"y\" || item.channel === \"height\") {\n                        item.pathX = item.pathX + x;\n                    }\n                    store.dispatch(updateItem({id: item.id, type: item.type, properties: {pathPosition: item.pathPosition}}));\n                } else if (item) {\n                    props.scene.translate(item, x, y);\n                    store.dispatch(updateItem({id: item.id, type: item.type, properties: {x: item.x, y: item.y}}));\n                }\n            }\n            let ds = store.getState().canvas.directSelected;\n            if (ds) {\n                let itm = props.scene.getItem(ds);\n                if (itm.parent.type === \"path\") {\n                    itm._doTranslate(x, y);\n                    store.dispatch(updateItem({id: itm.parent.id, type: itm.parent.type, properties: {x: itm.parent.x, y: itm.parent.y}}));\n                }\n            }\n        }\n\n        document.addEventListener('keydown', (e) => {\n            // e.preventDefault();\n            // e.stopPropagation();\n            switch(e.key) {\n                case \"Delete\": {\n                    let s = store.getState().canvas.selected;\n                    if (s && s.length > 0) {\n                        for (let i = s.length - 1; i >= 0; i--) {\n                            let item = props.scene.getItem(s[i]);\n                            if (item && item.parent === props.scene) {\n                                store.dispatch(select([]));\n                                props.scene.removeItem(item);\n                                store.dispatch(deleteItems([item].map(d => d.id)));\n                            }\n                        }\n                    }\n                    break;\n                }\n                case \"ArrowLeft\": {\n                    translateByKey(-5, 0);\n                    break;\n                }\n                case \"ArrowRight\": {\n                    translateByKey(5, 0);\n                    break;\n                }\n                case \"ArrowUp\": {\n                    translateByKey(0, -5);\n                    break;\n                }\n                case \"ArrowDown\": {\n                    translateByKey(0, 5);\n                    break;\n                }\n                case \"Escape\": {\n                    if (store.getState().tool.activeTool === \"Pen\") {\n                        PolylineTool.finish(props.scene, props.datasets, props.renderer, props.undoStack);\n                    }\n                    break;\n                }\n                // += - zoom in\n\t\t\t\tcase \"+\":\n                case \"=\":\n                    if(e.ctrlKey || e.metaKey) {\n                        e.preventDefault();\n                        let z = Math.min(400, store.getState().canvas.zoomLevel + 10);\n                        store.dispatch(setZoomLevel(z));\n                    }\n                    break;\n                // - - zoom out\n                case \"-\":\n                    if(e.ctrlKey || e.metaKey) {\n                        e.preventDefault();\n                        let z = Math.max(20, store.getState().canvas.zoomLevel - 10);\n                        store.dispatch(setZoomLevel(z));\n                    }\n                    break;\n                case \"0\":\n                    if(e.ctrlKey || e.metaKey) {\n                        e.preventDefault();\n                        resetViewBox();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    },[props.scene, props.datasets, props.renderer, props.undoStack])\n\n    switch(props.type) {\n        case \"canvas\":\n            return (\n                <canvas className=\"canvas\" id=\"canvas\"></canvas>\n            );\n        default:\n        case \"svg\":\n            return (\n                <svg className=\"canvas\" id=\"canvas\"></svg>\n            );\n    }\n}\n\nexport default connect(mapStateToProps)(Canvas);;","import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as d3 from 'd3';\nimport store from \"../store\";\nimport { updateItem, updateScale } from \"../canvasSlice\";\nimport { getSVGPathData } from \"../Util\";\nimport { getPeersInScene } from \"mascot-vis\";\n\nconst getHandlePosition = {\n    nw: (b) => ({x: b.left, y: b.top}),\n    n: (b) => ({x: b.x, y: b.top}),\n    ne: (b) => ({x: b.right, y: b.top}),\n    e: (b) => ({x: b.right, y: b.y}),\n    se: (b) => ({x: b.right, y: b.bottom}),\n    s: (b) => ({x: b.x, y: b.bottom}),\n    sw: (b) => ({x: b.left, y: b.bottom}),\n    w: (b) => ({x: b.left, y: b.y})\n}\n\nlet axisHandlePosition = undefined;\nconst showAxisHandle = (scene, axis) => {\n    if (!axis) return;\n    const h = d3.select(\"#axisHandle\").style(\"visibility\", \"visible\");\n    h.select(\"rect\").call(d3.drag()\n        .on(\"start\", function(e) {\n            if (axis.channel === \"x\" || axis.channel === \"width\") {\n                axisHandlePosition = axis.bounds.middle;\n            } else if (axis.channel === \"y\" || axis.channel === \"height\") {\n                axisHandlePosition = axis.bounds.center;\n            }\n        })\n        .on(\"end\", function(e) {\n            axisHandlePosition = undefined;\n        })\n        .on(\"drag\", function(e) {\n            e.sourceEvent.stopPropagation();\n            let dir = axis.isFlipped ? -1 : 1;\n            const scale = axis.encoding.scale;\n            if (axis.channel === \"x\" || axis.channel === \"width\") {\n                let newRE = scale.rangeExtent + e.dx * dir;\n                if (newRE <= 0) {\n                    if (scale.getEncodedChannels().indexOf(\"width\") < 0)\n                        scale.isFlipped = !scale.isFlipped;\n                    else\n                        return;\n                }\n                axis.encoding.scale.rangeExtent = newRE;\n                axis.autoUpdateTicks();\n            } else if (axis.channel === \"y\" || axis.channel === \"height\") {\n                let newRE = scale.rangeExtent - e.dy * dir;\n                if (newRE <= 0) {\n                    if (scale.getEncodedChannels().indexOf(\"height\") < 0)\n                        scale.isFlipped = !scale.isFlipped;\n                    else\n                        return;\n                }\n                axis.encoding.scale.rangeExtent = newRE;\n                axis.autoUpdateTicks();\n            }\n            store.dispatch(updateScale({id: axis.encoding.scale.id, type: axis.encoding.scale.type, axis: axis.id}));\n        }));\n    updateAxisHandlePosition(axis);\n}\n\nconst updateAxisHandlePosition = (axis) => {\n    if (!axis) return;\n    const h = d3.select(\"#axisHandle\");\n    let x1, y1, x2, y2, x, y, wd, ht, tx, ty;\n    switch (axis.channel) {\n        case \"x\":\n        case \"width\":\n            x1 = axis.bounds.left;\n            y1 = axisHandlePosition ? axisHandlePosition : axis.bounds.middle;\n            x2 = axis.bounds.right;\n            y2 = y1;\n            wd = 45;\n            ht = 16;\n            x = axis.isFlipped ? axis.bounds.left : axis.bounds.right - wd;\n            y = y1 - ht/2;\n            tx = x + 5;\n            ty = y + ht/2;\n            h.select(\"text\").style(\"writing-mode\", \"lr\")\n            break;\n        case \"y\":\n        case \"height\":\n            x1 = axisHandlePosition ? axisHandlePosition : axis.bounds.center;\n            y1 = axis.bounds.top;\n            x2 = x1;\n            y2 = axis.bounds.bottom;\n            wd = 16;\n            ht = 45;\n            x = x1 - wd/2;\n            y = axis.isFlipped ? axis.bounds.bottom - ht : axis.bounds.top;\n            tx = x1 + 3;\n            ty = y + 5;\n            h.select(\"text\").style(\"writing-mode\", \"tb\").style(\"glyph-orientation-vertical\", 0);\n            break;\n        default:\n            break;\n    }\n    h.select(\"line\").attr(\"x1\", x1).attr(\"x2\", x2).attr(\"y1\", y1).attr(\"y2\", y2);\n    h.select(\"rect\").attr(\"x\", x).attr(\"y\", y).attr(\"width\", wd).attr(\"height\", ht).attr(\"rx\", 6).attr(\"ry\", 6);\n    h.select(\"text\").text(axis.encoding.scale.rangeExtent.toFixed(0) + \"px\").attr(\"x\", tx).attr(\"y\", ty);\n}\n\nconst hideAxisHandle = () => {\n    d3.select(\"#axisHandle\").style(\"visibility\", \"hidden\");\n}\n\nconst redrawRect = (b, styles, rect) => {\n    const attrs = {\n        \"x\": b.left,\n        \"y\": b.top, \n        \"width\": b.width,\n        \"height\": b.height\n    };\n    for (let a in attrs)\n        rect.attr(a, attrs[a]);\n    for (let s in styles)\n        rect.style(s, styles[s]);\n};\n\nconst redrawSelection = (selected, scene) => {\n    //clear selection first\n    d3.select(\"#selectionUI\").selectAll(\"circle\").style(\"visibility\", \"hidden\");\n    d3.select(\"#handleG\").style(\"visibility\", \"hidden\");\n    d3.selectAll(\".openGroup\").style(\"visibility\", \"hidden\");\n    d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n    d3.select(\"#selectPeerOutline\").style(\"visibility\", \"hidden\");\n    d3.select(\"#boundsOutline\").style(\"visibility\", \"hidden\");\n    \n    if (selected.length === 1) {\n        const itm = scene.getItem(selected[0]);\n        if (!itm) return;\n        //draw peer outline\n        let peers = getPeersInScene(itm);\n        if (peers.length > 1) {\n            let peerPathData = getSVGPathData(peers, 2);\n            d3.select(\"#selectPeerOutline\").style(\"visibility\", \"visible\").attr(\"d\", peerPathData);\n        }\n\n        //draw item outline\n        let styles, b;\n        if (itm.type === \"collection\" || itm.type === \"axis\" || itm.type === \"legend\") {\n            styles = {\"stroke\": \"#1ecb40\", \"stroke-dasharray\": \"5,5\", \"stroke-width\": 2, \"fill\": \"none\"};\n        } else {\n            styles = {\"stroke\": \"#1592e6\", \"stroke-dasharray\": \"none\", \"stroke-width\": 1.5,  \"fill\": \"none\"};\n        }\n        if (itm.type === \"legend\") {\n            b = itm.bounds.clone();\n            b.left -= 10;\n            b.top -= 10;\n            b.width += 20;\n            b.height += 20;\n        } else {\n            b = itm.bounds;\n        }\n        if (itm.type === \"path\" || itm.type === \"area\" || itm.type === \"polygon\" || itm.type === \"arc\" || itm.type === \"pie\") {\n            d3.select(\"#boundsOutline\").style(\"visibility\", \"hidden\");\n            d3.select(\"#pathOutline\").style(\"visibility\", \"visible\");\n            d3.select(\"#pathSegments\").attr(\"d\", itm.getSVGPathData());\n            d3.select(\"#pathVertices\").attr(\"d\", getSVGPathData(itm.vertices, 2));\n        } else {\n            d3.select(\"#boundsOutline\").style(\"visibility\", \"visible\");\n            d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n            //d3.select(\"#itemOutline\").style(\"visibility\", \"visible\");\n            redrawRect(b, styles, d3.select(\"#boundsOutline\"));\n        }\n\n        //draw parents\n        d3.selectAll(\".openGroup\").style(\"visibility\", \"hidden\");\n        let parent = itm.parent, cnt = 1;\n        const parentStyles = {\"stroke\": \"#1ecb40\", \"stroke-width\": 4, \"fill\": \"none\", \"opacity\": 0.15, \"visibility\": \"visible\"};\n        while (parent && parent.type !== \"scene\") {\n            redrawRect(parent.bounds, parentStyles, d3.select(\"#openGroup\"+cnt));\n            parent = parent.parent;\n            cnt += 1;\n        }\n\n        //draw handles\n        d3.select(\"#handleG\").style(\"visibility\", \"visible\");\n        const g = d3.select(\"#selectionUI\"), resizable = [\"rect\", \"circle\", \"line\", \"pointText\"];\n        if (resizable.indexOf(itm.type) < 0) {\n            g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n            return;\n        } \n        \n        for (let h of handles) {\n            let p = getHandlePosition[h](b);\n            g.select(\".\" + h).style(\"cursor\", h+\"-resize\").attr(\"cx\", p.x).attr(\"cy\", p.y).style(\"visibility\", \"visible\");\n        }\n\n        if (itm.type === \"line\") {\n            if (itm.bounds.width === 0) {\n                g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n                g.select(\".n\").style(\"visibility\", \"visible\");\n                g.select(\".s\").style(\"visibility\", \"visible\");\n            }\n            if (itm.bounds.height === 0) {\n                g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n                g.select(\".e\").style(\"visibility\", \"visible\");\n                g.select(\".w\").style(\"visibility\", \"visible\");\n            }\n        } else if (itm.type === \"pointText\") {\n            //todo: show se anchor\n            g.selectAll(\"circle\").style(\"visibility\", \"hidden\");\n            g.select(\".se\").style(\"visibility\", \"visible\");\n        } \n    } else if (selected.length > 1) {\n        const itms = selected.map(d => scene.getItem(d));\n        d3.select(\"#handleG\").style(\"visibility\", \"visible\");\n        let styles = {\"stroke\": \"#1592e6\", \"stroke-dasharray\": \"none\", \"stroke-width\": 1.5,  \"fill\": \"none\", \"visibility\": \"visible\"};\n        let bounds = itms[0].bounds.clone();\n        for (let i = 1; i < itms.length; i++)\n            bounds = bounds.union(itms[i].bounds);\n        redrawRect(bounds, styles, d3.select(\"#boundsOutline\"));\n        d3.select(\"#selectPeerOutline\").style(\"visibility\", \"hidden\");\n        d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n    }\n}\n\nconst redrawDirectSelection = (directSelected, scene) => {\n    d3.selectAll(\".directSelectPreview\").style(\"visibility\", \"hidden\");\n    if (directSelected) {\n        const itm = scene.getItem(directSelected);\n        if (!itm) {\n            d3.selectAll(\".directSelected\").style(\"visibility\", \"hidden\");\n            d3.select(\"#directSelectPeerOutline\").style(\"visibility\", \"hidden\");\n            return;\n        }\n        //draw peer outline\n        let peers = getPeersInScene(itm);\n        if (peers.length > 1) {\n            let peerPathData = getSVGPathData(peers, 4);\n            d3.select(\"#directSelectPeerOutline\").style(\"visibility\", \"visible\").attr(\"d\", peerPathData);\n        }\n\n        const styles = {\"stroke\": \"#1592e6\", \"stroke-width\": 2, \"fill\": \"none\", \"visibility\": \"visible\"};\n        if (itm.type === \"segment\") {\n            let seg = d3.select(\"#segment\").attr(\"x1\", itm.vertex1.x).attr(\"y1\", itm.vertex1.y)\n                        .attr(\"x2\", itm.vertex2.x).attr(\"y2\", itm.vertex2.y);\n            for (let s in styles)\n                seg.style(s, styles[s]);\n            d3.select(\"#vertex\").style(\"visibility\", \"hidden\");\n        } else {\n            let b = {left: itm.x - 2, top: itm.y - 2, width: 4, height: 4};\n            redrawRect(b, styles, d3.select(\"#vertex\"));\n            d3.select(\"#segment\").style(\"visibility\", \"hidden\");\n        } \n    } else {\n        d3.selectAll(\".directSelected\").style(\"visibility\", \"hidden\");\n        d3.select(\"#directSelectPeerOutline\").style(\"visibility\", \"hidden\");\n    }\n}\n\nconst redrawDirectSelectPreview = (directSelected, scene) => {\n    d3.selectAll(\".directSelectPreview\").style(\"visibility\", \"hidden\");\n    if (directSelected) {\n        const itm = scene.getItem(directSelected);\n        if (!itm) return;\n        const styles = {\"stroke\": \"#79AFE0\", \"stroke-width\": 2, \"fill\": \"none\", \"visibility\": \"visible\"};\n        if (itm.type === \"segment\") {\n            let seg = d3.select(\"#segmentPreview\").attr(\"x1\", itm.vertex1.x).attr(\"y1\", itm.vertex1.y)\n                        .attr(\"x2\", itm.vertex2.x).attr(\"y2\", itm.vertex2.y);\n            for (let s in styles)\n                seg.style(s, styles[s]);\n        } else {\n            let b = {left: itm.x - 3, top: itm.y - 3, width: 6, height: 6};\n            redrawRect(b, styles, d3.select(\"#vertexPreview\"));\n        } \n    }\n}\n\nconst redrawGridGaps = (selected, scene) => {\n    if (selected.length === 1) {\n        const itm = scene.getItem(selected[0]);\n        if (itm && itm.type === \"collection\" && itm.layout && itm.layout.type === \"grid\") {\n            const layout = itm.layout, cb = layout.cellBounds, numCols = layout.numCols, numRows = layout.numRows;\n            let data = [];// numRects = numCols + numRows - 2;\n            for (let i = 0; i < numCols - 1; i++) {\n                let x = layout.colGap < 0 ? cb[i].right + layout.colGap : cb[i].right;\n                data.push({x: x, y: cb[i].top, width: Math.abs(layout.colGap), height: itm.bounds.height, type: \"c\"});\n            }\n            for (let i = 0; i < numRows - 1; i++) {\n                let y = layout.rowGap < 0 ? cb[i * numCols].bottom + layout.rowGap : cb[i * numCols].bottom;\n                data.push({x: cb[0].left, y: y, width: itm.bounds.width, height: Math.abs(layout.rowGap), type: \"r\"});\n            }\n            let rects = d3.select(\"#gridGaps\").style(\"visibility\", \"visible\").selectAll(\"rect\").data(data);\n            rects.enter().append(\"rect\").merge(rects)\n                .attr(\"x\", d => d.x).attr(\"y\", d => d.y)\n                .attr(\"width\", d => d.width).attr(\"height\", d => d.height)\n                .style(\"fill\", \"pink\").style(\"opacity\", 0.2)\n                .style(\"cursor\", d => d.type === \"r\" ? \"ns-resize\" : \"ew-resize\")\n                .call(d3.drag().on(\"drag\", function(e) {\n                    e.sourceEvent.stopPropagation();\n                    const type = d3.select(this).datum().type;\n                    let o = {}, g = type === \"r\" ? \"rowGap\" : \"colGap\", d = type === \"r\" ? e.dy : e.dx;\n                    o[g] = itm.layout[g] + d;\n                    scene.setProperties(itm.layout, o);\n                    store.dispatch(updateItem({id: selected[0], type: itm.type, properties: o}));\n                }))\n                ;\n            rects.exit().remove();\n        } else {\n            d3.select(\"#gridGaps\").style(\"visibility\", \"hidden\");\n        }\n    } else {\n        d3.select(\"#gridGaps\").style(\"visibility\", \"hidden\");\n    }\n}\n\nvar resizeX, resizeY;\n\nconst resizeStarted = (e) => {\n    resizeX = e.x;\n    resizeY = e.y;\n};\n\nconst resizing = function(e, h, selected) {\n    let dx = e.x - resizeX, dy = e.y - resizeY;\n    let b = getResizeBounds(h, selected.bounds, dx, dy);\n    let g = d3.select(\"#handleG\");\n    d3.select(\"#boundsOutline\").attr(\"x\", b.left).attr(\"y\", b.top).attr(\"width\", b.width).attr(\"height\", b.height);\n    for (let h of handles) {\n        let p = getHandlePosition[h](b);\n        g.select(\".\" + h).attr(\"cx\", p.x).attr(\"cy\", p.y);\n    }\n};\n\nconst resizeEnded = function(e, h, selected, scene) {\n    let dx = e.x - resizeX, dy = e.y - resizeY;\n    let b = getResizeBounds(h, selected.bounds, dx, dy);\n    let toChange;\n    if (selected.type === \"rect\" || selected.type === \"line\") {\n        toChange = {width: b.width, height: b.height, xRef: (h.indexOf(\"e\") < 0 ? \"right\" : \"left\"), yRef: (h.indexOf(\"n\") < 0 ? \"top\" : \"bottom\")};\n    } else if (selected.type === \"circle\") {\n        toChange = {radius: Math.max(b.width, b.height)/2, xRef: (h.indexOf(\"e\") < 0 ? \"right\" : \"left\"), yRef: (h.indexOf(\"n\") < 0 ? \"top\" : \"bottom\")};\n    } else if (selected.type === \"pointText\") {\n        let fs = Math.floor(parseInt(selected.fontSize) * b.width/selected.bounds.width);\n        fs = Math.max(4, fs);\n        toChange = {\"fontSize\": fs+\"px\"}\n    }\n\n    if (toChange) {\n        scene.setProperties(selected, toChange);\n        store.dispatch(updateItem({id: selected.id, type: selected.type, properties: toChange}));\n    }\n};\n\nconst getResizeBounds = (h, itmBounds, dx, dy) => {\n    let b = {\n        top: itmBounds.top,\n        height: itmBounds.height,\n        left: itmBounds.left,\n        width: itmBounds.width\n    };\n\n    if (h.indexOf(\"s\") >= 0) {\n        if (dy < -itmBounds.height + 1)\n            dy = -itmBounds.height + 1;\n        b.height += dy;\n    } else if (h.indexOf(\"n\") >= 0) {\n        if (dy > itmBounds.height - 1)\n            dy = itmBounds.height - 1;\n        b.height -= dy;\n        b.top += dy;   \n    }\n\n    if (h.indexOf(\"e\") >= 0) {\n        if (dx < -itmBounds.width + 1)\n            dx = -itmBounds.width + 1;\n        b.width += dx;\n    } else if (h.indexOf(\"w\") >= 0) {\n        if (dx > itmBounds.width - 1)\n            dx = itmBounds.width - 1;\n        b.left += dx;\n        b.width -= dx;\n    }\n\n    b.right = b.left + b.width;\n    b.bottom = b.top + b.height;\n    b.x = (b.left + b.right)/2;\n    b.y = (b.top + b.bottom)/2;\n\n    return b;\n}\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    directSelected: state.canvas.directSelected,\n    directSelectPreview: state.canvas.directSelectPreview,\n    itemUpdated: state.canvas.itemUpdated,\n    axisHandleVisible: state.canvas.axisHandleVisible,\n    scaleUpdated: state.canvas.scaleUpdated,\n    rectSelectRegion: state.canvas.rectSelectRegion\n});\n\nconst handles = [\"nw\", \"n\", \"ne\", \"w\", \"sw\", \"s\", \"se\", \"e\"];\n\nfunction SelectionUI(props) {\n\n    useEffect(() => {\n        if (props.selected.length === 0) return;\n        let selected = props.scene.getItem(props.selected[0]);\n        d3.select(\"#selectionUI\").selectAll(\"circle\").style(\"stroke\", \"#1592e6\").style(\"fill\", \"white\")\n            .call(d3.drag().on(\"start\", resizeStarted).on(\"drag\", function(e) { resizing(e, d3.select(this).attr(\"class\"), selected) })\n            .on(\"end\", function(e) {\n                resizeEnded(e, d3.select(this).attr(\"class\"), selected, props.scene);\n            }))\n    }, [props.scene, props.selected]);\n\n    useEffect(() => {\n        redrawSelection(props.selected, props.scene);\n        redrawDirectSelection(props.directSelected, props.scene);\n        redrawGridGaps(props.selected, props.scene);\n    }, [props.scene, props.selected, props.directSelected, props.itemUpdated, props.scaleUpdated]);\n\n    useEffect(() => {\n        redrawDirectSelectPreview(props.directSelectPreview, props.scene);\n    }, [props.directSelectPreview, props.scene])\n\n    useEffect(() => {\n        if (props.axisHandleVisible.visible)\n            showAxisHandle(props.scene, props.scene.getItem(props.axisHandleVisible.axis));\n        else\n            hideAxisHandle();\n    }, [props.scene, props.axisHandleVisible]);\n\n    useEffect(() => {\n        if (props.rectSelectRegion.width === 0 || props.rectSelectRegion.height === 0)\n            d3.select(\"#rectSelectRegion\").style(\"visibility\", \"hidden\");\n        const styles = {\"stroke\": \"#ccc\", \"stroke-width\": 2, \"fill\": \"none\", \"stroke-dasharray\": \"5,5\", \"opacity\": 1, \"visibility\": \"visible\"};\n        redrawRect(props.rectSelectRegion, styles, d3.select(\"#rectSelectRegion\"));\n    }, [props.rectSelectRegion]);\n\n    useEffect(() => {\n        if (props.scaleUpdated.axis)\n            updateAxisHandlePosition(props.scene.getItem(props.scaleUpdated.axis));\n    }, [props.scene, props.scaleUpdated]);\n\n    return (\n        <g id=\"selectionUI\">\n            <rect id=\"openGroup1\" className=\"openGroup\"></rect>\n            <rect id=\"openGroup2\" className=\"openGroup\"></rect>\n            <rect id=\"openGroup3\" className=\"openGroup\"></rect>\n            <rect id=\"openGroup4\" className=\"openGroup\"></rect>\n            <path id=\"selectPeerOutline\" style={{\"stroke\": \"#60bdf0\", \"strokeWidth\": 1,  \"fill\": \"none\"}}></path>\n            <path id=\"directSelectPeerOutline\" style={{\"stroke\": \"#60bdf0\", \"strokeWidth\": 1,  \"fill\": \"none\"}}></path>\n            <rect id=\"boundsOutline\"></rect>\n            <g id=\"handleG\">\n                {handles.map(h => <circle key={h} className={h} r=\"4\"></circle>)}\n            </g>\n            <g id=\"axisHandle\">\n                <line style={{strokeWidth:\"2px\", stroke:\"#1ecb40\"}}></line>\n                <rect style={{fill:\"#1ecb40\"}}></rect>\n                <text style={{fill:\"white\", \"fontSize\": \"11px\", \"pointerEvents\": \"none\", fontWeight: \"bold\", \"alignmentBaseline\": \"middle\", \"dominantBaseline\": \"middle\"}}></text>\n            </g>\n            <g id=\"pathOutline\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": 2,  \"fill\": \"none\"}}>\n                <path id=\"pathSegments\"></path>\n                <path id=\"pathVertices\"></path>\n            </g>\n            <g id=\"gridGaps\">\n                <rect></rect>\n            </g>\n            <rect id=\"rectSelectRegion\"></rect>\n            <line id=\"segment\" className=\"directSelected\"></line>\n            <rect id=\"vertex\" className=\"directSelected\"></rect>\n            <line id=\"segmentPreview\" className=\"directSelectPreview\"></line>\n            <rect id=\"vertexPreview\" className=\"directSelectPreview\"></rect>\n        </g>\n    )\n}\n\nexport default connect(mapStateToProps)(SelectionUI);\nexport {showAxisHandle, hideAxisHandle};","import store from \"../store\";\nimport { getPositionInScene } from \"../Util\";\nimport * as msc from \"mascot-vis\";\nimport { select, toggleAxisHandle, customizeColorPalette, rectSelect } from \"../canvasSlice\";\nimport { updateItem } from \"../canvasSlice\";\n\nvar clickHeld = false, rectRegion = false, dragging = false, activeItem = null, downX, downY, itemX = {}, itemY = {};\n\nexport const hitTest = (e, scene) => {\n    const p = getPositionInScene(e.clientX, e.clientY);\n    const cg = store.getState().canvas.selected;\n    //if nothing is selected, find target among scene's children\n    if (cg.length === 0) {\n        return msc.hitTest(scene, p[0], p[1]);\n    }\n    const sel = scene.getItem(cg[0]);\n    if (sel.type === \"axis\" || sel.type === \"legend\") {\n        return msc.hitTest(scene, p[0], p[1]);\n    } else {\n        //if selected is leaf, find target among its parent's children\n        //this is useful for selecting a sibling of the current selection\n        let itm = sel.parent;\n        while (itm) {\n            let hit = msc.hitTest(itm, p[0], p[1]);\n            if (hit) return hit;\n            else itm = itm.parent;\n        }\n        return null;\n    }\n}\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    downX = e.clientX;\n    downY = e.clientY;\n    let itm = hitTest(e, scene);\n    if (itm !== null && itm.type === \"legend\") {\n        if (itm.channel.indexOf(\"Color\") > 0 && itm.fieldType === \"string\") {\n            const p = getPositionInScene(e.clientX, e.clientY);\n            const mark = itm.pathHitTest(p[0], p[1]);\n            if (mark !== null) {\n                //customize categorical color mapping\n                const v = mark.dataScope.getFieldValue(\"category\");\n                store.dispatch(customizeColorPalette({legend: itm.id, value: v}));\n                return;\n            }\n        }\n    }\n\n    store.dispatch(customizeColorPalette({legend: null, value: null}));\n    activeItem = itm;\n    if (itm === null && e.button === 0) {\n        rectRegion = true;\n    } else if (itm !== null) {\n        let items = store.getState().canvas.selected.length > 0 ? store.getState().canvas.selected.map(d => scene.getItem(d)) : [itm];\n        for (let item of items) {\n            itemX[item.id] = item.type === \"axis\" && (item.channel === \"y\" || item.channel === \"height\") ? item.pathX : item.x;\n            itemY[item.id] = item.type === \"axis\" && (item.channel === \"x\" || item.channel === \"width\") ? item.pathY : item.y;\n        }\n        \n    }\n}\n\nconst dragItem = (item, scene, newX, newY, dx, dy) => {\n    if (item.type === \"axis\") {\n        store.dispatch(toggleAxisHandle({visible: false}));\n        if (item.channel === \"x\" || item.channel === \"width\") {\n            item.pathY = newY;\n        } else if (item.channel === \"y\" || item.channel === \"height\") {\n            item.pathX = newX;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: {pathPosition: item.pathPosition}}));\n    } else {\n        scene.translate(item, dx, dy);\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: {x: item.x, y: item.y}}));\n    }\n}\n\nexport const mouseMove = (e, scene, renderer) => {\n\n    if (!clickHeld) { //hovering\n        const item = hitTest(e, scene);\n        if (item && item.type === \"axis\" && item.encoding) {\n            store.dispatch(toggleAxisHandle({axis: item.id, visible: true}));\n        } else {\n            store.dispatch(toggleAxisHandle({visible: false}));\n        }\n        return;\n    }\n \n    //clickHeld\n    if (rectRegion) { //rect select\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: wd, height: ht}));\n    } else if (activeItem) { //dragging\n        let sel = store.getState().canvas.selected, itmInSelection = sel.indexOf(activeItem.id) >= 0;;\n        if (sel.length === 0 || !itmInSelection) {\n            store.dispatch(select([activeItem.id]));\n            dragging = true;\n            dragItem(activeItem, scene, itemX[activeItem.id] + e.clientX - downX, itemY[activeItem.id] + e.clientY - downY, itemX[activeItem.id] + e.clientX - downX - activeItem.x, itemY[activeItem.id] + e.clientY - downY - activeItem.y);\n        } else if (itmInSelection) {\n            dragging = true;\n            for (let s of store.getState().canvas.selected) {\n                const item = scene.getItem(s);\n                dragItem(item, scene, itemX[item.id] + e.clientX - downX, itemY[item.id] + e.clientY - downY, itemX[item.id] + e.clientX - downX - item.x, itemY[item.id] + e.clientY - downY - item.y);\n            }\n        } \n        \n        // const s1 = store.getState().canvas.selected[0];\n        // if (!s1) return;\n    }\n}\n\nexport const mouseUp = (e, scene) => {\n    if (rectRegion) {\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: 0, height: 0}));\n        let r = {left: left, top: top, width: wd, height: ht, right: left + wd, bottom: top + ht};\n        let itms = msc.rectHitTest(scene, r).map(d => d.id);\n        for (let m of itms) {\n            const itm = scene.getItem(m);\n            itemX[itm.id] = itm.type === \"axis\" && (itm.channel === \"y\" || itm.channel === \"height\") ? itm.pathX : itm.x;\n            itemY[itm.id] = itm.type === \"axis\" && (itm.channel === \"x\" || itm.channel === \"width\") ? itm.pathY : itm.y;\n        }\n        store.dispatch(select(itms));\n    } else if (!dragging) { //not dragging\n        if (activeItem === null)\n            store.dispatch(select([]));\n        else {\n            let sel = store.getState().canvas.selected, newSel;\n            let itmInSelection = sel.indexOf(activeItem.id) >= 0;\n            if (e.shiftKey && !itmInSelection) {\n                newSel = sel.concat(activeItem.id);\n            } else if (e.shiftKey && itmInSelection) {\n                newSel = sel.filter(d => d !== activeItem.id);\n                itemX[activeItem.id] = activeItem.type === \"axis\" && (activeItem.channel === \"y\" || activeItem.channel === \"height\") ? activeItem.pathX : activeItem.x;\n                itemY[activeItem.id] = activeItem.type === \"axis\" && (activeItem.channel === \"x\" || activeItem.channel === \"width\") ? activeItem.pathY : activeItem.y;\n            } else {\n                newSel = [activeItem.id];\n            }\n            store.dispatch(select(newSel));\n        }\n    }\n    \n    // else if (store.getState().canvas.selected.length > 0){\n    //     let item = scene.getItem(store.getState().canvas.selected[0]);\n    //     if (item === null && !dragging) {\n    //         store.dispatch(select([]));\n    //     }\n    // }\n    // let sel = store.getState().canvas.selected;\n    // let itmInSelection = sel.indexOf(itm.id) >= 0;\n    // if (e.shiftKey) {\n    //     store.dispatch(select(sel.concat(itm.id)));\n    // } else {\n    //     store.dispatch(select([itm.id]));\n    // }\n\n    clickHeld = false;\n    rectRegion = false;\n    dragging = false;\n    activeItem = null;\n    // itemX = {};\n    // itemY = {};\n}\n\nexport const doubleClick = (e, scene) => {\n    const cg = store.getState().canvas.selected;\n    if (cg.length> 0) {\n        const itm = scene.getItem(cg[0]);\n        if (itm && itm.type !== \"axis\" && itm.type !== \"legend\" && itm.children && itm.children.length > 0) {\n            const p = getPositionInScene(e.clientX, e.clientY);\n            let child = msc.hitTest(itm, p[0], p[1]);\n            if (child) {\n                store.dispatch(select([child.id]));\n            }\n        }\n    }\n}","import * as msc from \"mascot-vis\";\nimport { getPositionInScene } from \"../Util\";\nimport store from \"../store\";\nimport { directSelect, directSelectPreview, rectSelect, toggleAxisHandle } from \"../canvasSlice\";\n\nvar downX, downY, clickHeld = false;\n\nexport const mouseDown = (e, scene) => {\n    const p = getPositionInScene(e.clientX, e.clientY);\n    const item = msc.inMarkHitTest(scene, p[0], p[1], 4);\n    if (!item) {\n        downX = e.clientX;\n        downY = e.clientY;\n        clickHeld = true;\n    }\n}\n\nexport const mouseUp = (e, scene, renderer) => {\n    if (clickHeld) {\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: 0, height: 0}));\n        let r = {left: left, top: top, width: wd, height: ht, right: left + wd, bottom: top + ht};\n        let itm = msc.inMarkRectHitTest(scene, r, 2);\n        store.dispatch(directSelect(itm ? itm.id : null));\n        clickHeld = false;\n    } else {\n        const p = getPositionInScene(e.clientX, e.clientY);\n        const item = msc.inMarkHitTest(scene, p[0], p[1], 4);\n        store.dispatch(directSelect(item ? item.id : null));\n    }\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) {\n        const p = getPositionInScene(e.clientX, e.clientY);\n        const itm = msc.hitTest(scene, p[0], p[1]);\n        if (itm && itm.type === \"axis\" && itm.encoding) {\n            store.dispatch(toggleAxisHandle({axis: itm.id, visible: true}));\n        } else {\n            store.dispatch(toggleAxisHandle({visible: false}));\n                // const item = msc.inMarkHitTest(scene, p[0], p[1], 4);\n                // store.dispatch(directSelectPreview(item ? item.id : null));\n        }\n\n        const item = msc.inMarkHitTest(scene, p[0], p[1], 4);\n        store.dispatch(directSelectPreview(item ? item.id : null));\n\n        // const leafItem = msc.hitTestAll(scene, p[0], p[1]);\n        // if (leafItem && leafItem.type === \"path\" && !store.getState().canvas.directSelected) {\n        //     d3.select(\"#pathOutline\").style(\"visibility\", \"visible\");\n        //     d3.select(\"#pathSegments\").attr(\"d\", leafItem.getSVGPathData());\n        //     d3.select(\"#pathVertices\").attr(\"d\", getSVGPathData(leafItem.vertices, 2));\n        // } else {\n        //     d3.select(\"#pathOutline\").style(\"visibility\", \"hidden\");\n        // }\n    } else {\n        let pos = getPositionInScene(Math.min(downX, e.clientX), Math.min(downY, e.clientY));\n        let left = pos[0], top = pos[1], wd = Math.abs(e.clientX - downX), ht = Math.abs(e.clientY - downY);\n        store.dispatch(rectSelect({left: left, top: top, width: wd, height: ht}));\n    }\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, downX, downY, moved = false;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let rect = d3.select(\"#rectToolUI\");\n    rect.style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"rect\", {left: parseInt(rect.attr(\"x\")), top: parseInt(rect.attr(\"y\")), \n                width: parseInt(rect.attr(\"width\")), height: parseInt(rect.attr(\"height\"))});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY);\n    let x1 = downX, x2 = p[0], y1 = downY, y2 = p[1];\n    let x, y, width, height;\n    x = Math.min(x1, x2);\n    y = Math.min(y1, y2);\n    width = Math.abs(x1 - x2);\n    height = Math.abs(y1 - y2);\n    if (e.shiftKey) {\n        width = Math.min(width, height);\n        height = width;\n        x = x1 < x2 ? x1 : x1 - width;\n        y = y1 < y2 ? y1 : y1 - height;\n    }\n    d3.select(\"#rectToolUI\").style(\"visibility\", \"visible\").attr(\"x\", x).attr(\"y\", y)\n        .attr(\"width\", width).attr(\"height\", height);\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, moved = false, downX, downY;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let c = d3.select(\"#circleToolUI\");\n    c.style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"circle\", {x: parseInt(c.attr(\"cx\")), y: parseInt(c.attr(\"cy\")), \n                radius: parseInt(c.attr(\"r\")), fillColor: \"none\"});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY);\n    let x1 = downX, x2 = p[0], y1 = downY, y2 = p[1];\n    let cx = (x1 + x2)/2, cy = (y1 + y2)/2, r = Math.min(Math.abs(x1 - x2)/2, Math.abs(y1 - y2)/2);\n    d3.select(\"#circleToolUI\").style(\"visibility\", \"visible\").attr(\"cx\", cx).attr(\"cy\", cy)\n        .attr(\"r\", r);\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, moved = false, downX, downY;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let c = d3.select(\"#ringToolOuterUI\");\n    c.style(\"visibility\", \"hidden\");\n    d3.select(\"#ringToolInnerUI\").style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"ring\", {x: parseInt(c.attr(\"cx\")), y: parseInt(c.attr(\"cy\")), \n                outerRadius: parseInt(c.attr(\"r\")), innerRadius: parseInt(c.attr(\"r\")) * 2/3, fillColor: \"none\"});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY);\n    let x1 = downX, x2 = p[0], y1 = downY, y2 = p[1];\n    let cx = (x1 + x2)/2, cy = (y1 + y2)/2, r = Math.min(Math.abs(x1 - x2)/2, Math.abs(y1 - y2)/2);\n    d3.select(\"#ringToolOuterUI\").style(\"visibility\", \"visible\").attr(\"cx\", cx).attr(\"cy\", cy)\n        .attr(\"r\", r);\n    d3.select(\"#ringToolInnerUI\").style(\"visibility\", \"visible\").attr(\"cx\", cx).attr(\"cy\", cy)\n        .attr(\"r\", r * 2/3);\n}","import * as d3 from 'd3';\nimport { addToStack, getPositionInScene } from \"../Util\";\nimport { createNewItem, select } from \"../canvasSlice\";\nimport store from \"../store\";\n\nlet clickHeld = false, moved = false, downX, downY;\n\nexport const mouseDown = (e, scene) => {\n    clickHeld = true;\n    const p = getPositionInScene(e.clientX, e.clientY);\n    downX = p[0];\n    downY = p[1];\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    clickHeld = false;\n    let c = d3.select(\"#lineToolUI\");\n    c.style(\"visibility\", \"hidden\");\n    if (moved) {\n        addToStack(scene, datasets, undoStack);\n        let r = scene.mark(\"line\", {x1: parseInt(c.attr(\"x1\")), y1: parseInt(c.attr(\"y1\")), \n            x2: parseInt(c.attr(\"x2\")), y2: parseInt(c.attr(\"y2\"))});\n        store.dispatch(createNewItem(r.id));\n        store.dispatch(select([r.id]));\n        renderer.render(scene);\n    }\n    moved = false;\n}\n\nexport const mouseMove = (e, scene) => {\n    if (!clickHeld) return;\n    moved = true;\n    let p = getPositionInScene(e.clientX, e.clientY), x2, y2;\n    if (e.shiftKey) {\n        let angle = Math.atan2(p[1] - downY, p[0] - downX) * 180 / Math.PI,\n            angleR = Math.round(angle/45) * 45 * Math.PI/180, \n            dist = Math.sqrt(Math.pow(p[1] - downY, 2) + Math.pow(p[0] - downX, 2));\n        x2 = downX + Math.cos(angleR) * dist;\n        y2 = downY + Math.sin(angleR) * dist;\n    } else {\n        x2 = p[0];\n        y2 = p[1];\n    }\n    d3.select(\"#lineToolUI\").style(\"visibility\", \"visible\").attr(\"x1\", downX).attr(\"y1\", downY)\n            .attr(\"x2\", x2).attr(\"y2\", y2);\n}","import store from './store';\nimport SelectionUI from \"./tools/SelectionUI\";\nimport * as SelectTool from \"./tools/SelectTool\";\nimport * as DirectSelectTool from \"./tools/DirectSelectTool\";\nimport * as RectTool from \"./tools/RectTool\";\nimport * as CircleTool from \"./tools/CircleTool\";\nimport * as RingTool from \"./tools/RingTool\";\nimport * as LineTool from \"./tools/LineTool\";\nimport * as PolylineTool from \"./tools/PolylineTool\";\nimport * as TextTool from \"./tools/TextTool\";\nimport { useEffect } from 'react';\nimport { pan } from './canvasSlice';\n\n\nexport default function EventLayer(props) {\n\n    const handleMouseDown = (e) => {\n        e.preventDefault();\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.mouseDown(e, props.scene);\n                break;\n            case \"Rect\":\n                RectTool.mouseDown(e, props.scene);\n                break;\n            case \"Ellipse\":\n                CircleTool.mouseDown(e, props.scene);\n                break;\n            case \"Ring\":\n                RingTool.mouseDown(e, props.scene);\n                break;\n            case \"DirectSelect\":\n                DirectSelectTool.mouseDown(e, props.scene);\n                break;\n            case \"Line\":\n                LineTool.mouseDown(e, props.scene);\n                break;\n            case \"Pen\":\n                PolylineTool.mouseDown(e, props.scene);\n                break;\n            default:\n                break;\n        }\n    };\n\n    // const handleMouseDown = useCallback((e) => {\n    //     console.log(\"mouse down\", e);\n    // }, []);\n\n    const handleMouseMove = (e) => {\n        e.preventDefault();\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.mouseMove(e, props.scene, props.renderer);\n                break;\n            case \"Rect\":\n                RectTool.mouseMove(e, props.scene);\n                break;\n            case \"Ellipse\":\n                CircleTool.mouseMove(e, props.scene);\n                break;\n            case \"Ring\":\n                RingTool.mouseMove(e, props.scene);\n                break;\n            case \"DirectSelect\":\n                DirectSelectTool.mouseMove(e, props.scene);\n                break;\n            case \"Line\":\n                LineTool.mouseMove(e, props.scene);\n                break;\n            case \"Pen\":\n                PolylineTool.mouseMove(e, props.scene);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleMouseUp = (e) => {\n        e.preventDefault();\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.mouseUp(e, props.scene);\n                break;\n            case \"Rect\":\n                RectTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Ellipse\":\n                CircleTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Ring\":\n                RingTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Line\":\n                LineTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"DirectSelect\":\n                DirectSelectTool.mouseUp(e, props.scene);\n                break;\n            case \"Pen\":\n                PolylineTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            case \"Text\":\n                TextTool.mouseUp(e, props.scene, props.datasets, props.renderer, props.undoStack, props.updateUndoStack);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleDoubleClick = (e) => {\n        switch (store.getState().tool.activeTool) {\n            case \"Select\":\n                SelectTool.doubleClick(e, props.scene);\n                break;\n            default:\n                break;\n        }\n    };\n\n\n    useEffect(() => {\n        document.getElementById(\"evtLayer\").addEventListener('wheel', e => {\n            e.preventDefault();\n            store.dispatch(pan({\"x\": e.deltaX, \"y\": e.deltaY}));\n        })\n    }, []);\n\n    return (\n        <svg\n            id=\"evtLayer\"\n            className=\"canvas\"\n            onDoubleClick={handleDoubleClick}\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n        >\n            <SelectionUI scene={props.scene} renderer={props.renderer}></SelectionUI>\n            <rect id=\"rectToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></rect>\n            <circle id=\"circleToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></circle>\n            <line id=\"lineToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\"}}></line>\n            <path id=\"polylineToolUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\"}}></path>\n            <circle id=\"ringToolOuterUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></circle>\n            <circle id=\"ringToolInnerUI\" style={{\"stroke\": \"#1592e6\", \"strokeWidth\": \"1.5px\", \"visibility\": \"hidden\", \"fillOpacity\": \"0\"}}></circle>\n        </svg>\n    )\n\n}","import * as d3 from 'd3';\nimport { createNewItem } from '../canvasSlice';\nimport store from '../store';\nimport { addToStack, getPositionInScene } from '../Util';\nimport * as msc from \"mascot-vis\";\n\nexport const mouseDown = (e, scene) => {\n\n}\n\nexport const mouseUp = (e, scene, datasets, renderer, undoStack) => {\n    const p = getPositionInScene(e.clientX, e.clientY);\n    let item = msc.hitTest(scene, p[0], p[1]);\n    if (!item && d3.select(\"#textElement\").style(\"visibility\") === \"visible\") {\n        d3.select(\"#textElement\").style(\"visibility\", \"hidden\");\n        renderer.render(scene);\n        return;\n    }\n    if (!item || item.type !== \"pointText\") {\n        addToStack(scene, datasets, undoStack);\n        item = scene.mark(\"text\", {x: e.clientX, y: e.clientY, text: \"\", anchor: [\"left\", \"top\"]});\n        store.dispatch(createNewItem(item.id));\n        renderer.render(scene);\n    }\n    //show editing input\n    d3.select(\"#textElement\").style(\"visibility\", \"visible\").style(\"left\", item.bounds.left+\"px\").style(\"top\", (item.bounds.top - 1)+\"px\")\n        .property(\"value\", item.text).style(\"font-family\", item.fontFamily)\n        .style(\"font-size\", item.fontSize+\"px\").style(\"font-weight\", item.fontWeight).style(\"height\", item.bounds.height)\n        .on(\"input\", (e) => { item.text = d3.select(\"#textElement\").property(\"value\")});\n    document.getElementById(\"textElement\").focus();\n}","import './css/ToolBar.css';\nimport { useDispatch } from \"react-redux\";\nimport { activateTool } from './toolSlice';\nimport { connect } from \"react-redux\";\nimport { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { canDensify, canDivide, canRepeat, canClassify } from 'mascot-vis';\nimport { Button, Modal } from \"react-bootstrap\";\nimport * as msc from \"mascot-vis\";\nimport { addToStack, getDefaultCollectionLayout } from './Util';\nimport store from \"./store\";\nimport { select, joinDataItem, directSelect, updateUndoStack, updateRedoStack, updateItem } from \"./canvasSlice\";\nimport {saveAs} from \"file-saver\";\n\nconst tools = [\"Select\", \"DirectSelect\", \"Line\", \"Rect\", \"Ellipse\", \"Ring\", \"Pen\", \"Text\"];\nconst arrangements = [\"Align Top\", \"Align Middle\", \"Align Bottom\", \"Align Left\", \"Align Center\", \"Align Right\"];\n\nconst mapStateToProps = state => ({\n    activeTool: state.tool.activeTool,\n    selected: state.canvas.selected,\n    undoStackChanged: state.canvas.undoStackChanged,\n    redoStackChanged: state.canvas.redoStackChanged\n});\n\nconst renderer = msc.renderer(\"svg\", \"preview\")\n    const scn = msc.scene();\n\n// const drawPreview = (selectedItem, cmd, dataset, field) => {\n//     if (d3.select(\"#preview\").empty())\n//         return;\n//     scn.removeAll();\n//     if (selectedItem && cmd && field && dataset) {\n//         let item = selectedItem.duplicate();\n//         scn.addChild(item);\n//         if (cmd === \"Repeat\") {\n//             let coll = scn.repeat(item, dataset, {field: field, layout: getDefaultCollectionLayout(item.bounds, dataset.getUniqueFieldValues(field).length)});\n//             let vb = [coll.bounds.left, coll.bounds.top, coll.bounds.width, coll.bounds.height].join(\" \");\n//             d3.select(\"#preview\").attr(\"viewBox\", vb);\n//         }\n//         renderer.clear();\n//         renderer.render(scn);\n//     }\n// }\n\nconst getUsableTbls = (item, datasets) => {\n    let t = {};\n    if (!item) return t;\n    if (item.dataScope) {\n        t[item.dataScope.dataTable.id] = item.dataScope.dataTable;\n    } else {\n        for (let d of datasets) {\n            t[d.id] = d;\n        }\n    }\n    return t;\n}\n\nconst getOrientations = function(type, cmd) {\n    if (cmd === \"Divide\") {\n        switch (type) {\n            case \"rect\":\n                return [\"horizontal\", \"vertical\"];\n            case \"circle\":\n                return [\"angular\", \"radial\"];\n            case \"ring\":\n                return [\"angular\"];\n            case \"pie\":\n                return [\"radial\"];\n            default:\n                return [\"horizontal\", \"vertical\"];\n        }\n    } else if (cmd === \"Densify\") {\n        return [\"horizontal\", \"vertical\"];\n    }\n}\n\nfunction ToolBar(props) {\n\n    const dispatch = useDispatch();\n    const inputFile = useRef(null);\n\n    const [showRepeatModal, setShowRepeatModal] = useState(false);\n    //const [selectedItem, setSelectedItem] = useState(null);\n    // const [datasetId, setDatasetId] = useState(null);\n    //const [dataset, setDataset] = useState(undefined);\n    const [cmd, setCmd] = useState(null);\n    const [tbls, setTbls] = useState({});\n    const [fields, setFields] = useState([]);\n    const [orientations, setOrientations] = useState([]);\n    const [joinMsg, setJoinMsg] = useState(\"\");\n    \n    const doJoin = () => {\n        setShowRepeatModal(false);\n        addToStack(props.scene, props.datasets, props.undoStack);\n        if (cmd === \"Repeat\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n                field = d3.select(\"#fieldSelect\").property(\"value\");\n            let layout = getDefaultCollectionLayout(item, dataset.getUniqueFieldValues(field).length);\n            let coll = props.scene.repeat(item, dataset, {field: field, layout: layout});\n            if (coll.children.length < 25) {\n                if (layout.numCols === 1) {\n                    props.scene.axis(\"y\", field, {item: item});\n                } else if (layout.numRows === 1) {\n                    props.scene.axis(\"x\", field, {item: item});\n                }\n            }\n            props.scene.reCreateRelatedAxes(coll);\n            store.dispatch(select([coll.id]));\n            store.dispatch(joinDataItem({}));\n        } else if (cmd === \"Divide\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n                field = d3.select(\"#fieldSelect\").property(\"value\"), \n                o = d3.select(\"#orientationSelect\").property(\"value\");\n            let coll = props.scene.divide(item, dataset, {field: field, orientation: o});\n            // if (item.type === \"rect\" && coll.layout && !coll.parent.layout) {\n            if (coll.firstChild.type === \"rect\" && coll.layout && coll.parent.type === \"scene\") {\n                if (coll.layout.orientation === \"vertical\") {\n                    props.scene.axis(\"y\", field, {item: coll.firstChild});\n                } else if (coll.layout.orientation === \"horizontal\") {\n                    props.scene.axis(\"x\", field, {item: coll.firstChild});\n                }\n            }\n            props.scene.reCreateRelatedAxes(coll);\n            store.dispatch(select([coll.id]));\n            store.dispatch(joinDataItem({}));\n        } else if (cmd === \"Densify\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n                field = d3.select(\"#fieldSelect\").property(\"value\"), \n                o = d3.select(\"#orientationSelect\").property(\"value\");\n            let itm = props.scene.densify(item, dataset, {field: field, orientation: o});\n            store.dispatch(select([itm.id]));\n            store.dispatch(joinDataItem({}));\n        } else if (cmd === \"Classify\") {\n            let item = props.scene.getItem(props.selected[0]);\n            store.dispatch(select([]));\n            let field = d3.select(\"#fieldSelect\").property(\"value\");\n            props.scene.classify(item, {field: field, layout: msc.layout(\"grid\", {\"numRows\": 1})});\n            item.layout = msc.layout(\"grid\", {\"numCols\": 1, \"rowGap\": 20})\n            if (item.children.length < 25) {\n                props.scene.axis(\"y\", field, {item: item.firstChild});\n            }\n            store.dispatch(select([item.id]));\n            store.dispatch(joinDataItem({}));\n        }\n    }\n\n    const switchTool = (t) => {\n        d3.select(\"#textElement\").style(\"visibility\", \"hidden\");\n        props.renderer.render(props.scene);\n        switch (t) {\n            case \"Rect\":\n            case \"Ellipse\":\n            case \"Line\":\n            case \"Ring\":\n            case \"Pen\":\n                dispatch(directSelect(null));\n                dispatch(select([]));\n                d3.select(\"#evtLayer\").style(\"cursor\", \"crosshair\");\n                break;\n            case \"Select\":\n                // dispatch(select([]));\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                dispatch(directSelect(null));\n                break;\n            case \"DirectSelect\":\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                dispatch(select([]));\n                break;\n            default:\n                d3.select(\"#evtLayer\").style(\"cursor\", \"default\");\n                break;\n        }\n        dispatch(activateTool(t));\n    }\n\n    const repeatBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Repeat\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        let t = getUsableTbls(item, props.datasets);\n        // let options = d3.select(\"#datasetSelect\").selectAll(\"option\").data(Object.values(t));\n        // options.enter().append(\"option\").merge(options).property(\"key\", d => d.id).text(d => d.name);\n        // options.exit().remove();\n        setTbls(t);\n        let usedFields = item.firstChild && item.firstChild.dataScope ? item.firstChild.dataScope.fields: [], \n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const divideBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Divide\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        setOrientations(getOrientations(item.type, \"Divide\"));\n        let t = getUsableTbls(item, props.datasets);\n        setTbls(t);\n        let usedFields = item.dataScope ? item.dataScope.fields: [],\n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const densifyBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Densify\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        setOrientations(getOrientations(item.type, \"Densify\"));\n        let t = getUsableTbls(item, props.datasets);\n        setTbls(t);\n        let usedFields = item.dataScope ? item.dataScope.fields: [],\n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const classifyBtnClicked = (e) => {\n        switchTool(\"Select\");\n        if (props.selected.length === 0) return;\n        setCmd(\"Classify\");\n        setShowRepeatModal(true);\n        let item = props.scene.getItem(props.selected[0]);\n        // setOrientations(getOrientations(item.type, \"Densify\"));\n        let t = getUsableTbls(item, props.datasets);\n        setTbls(t);\n        let usedFields = item.dataScope ? item.dataScope.fields: [],\n            fields = t[Object.keys(t)[0]].nonNumericFields.concat([\"atlas_rowId\"]);\n        fields = fields.filter(d => usedFields.indexOf(d) < 0);\n        setFields(fields);\n    }\n\n    const exportSVG = (e) => {\n        let svg = document.getElementById(\"canvas\");\n        var serializer = new XMLSerializer();\n        var source = serializer.serializeToString(svg);\n\n        //add name spaces.\n        if(!source.match(/^<svg[^>]+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)){\n            source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n        }\n        if(!source.match(/^<svg[^>]+\"http:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)){\n            source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n        }\n\n        //add xml declaration\n        source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n        let tbls = props.scene.getDataTables();\n        let fname = (Object.values(tbls).length > 0) ? Object.values(tbls)[0].name + \".svg\" : \"visualization.svg\";\n        saveAs(new Blob([source], {\"type\":\"text/plain;charset=utf-8\"}), fname);\n    }\n\n    const saveScene = (e) => {\n        let tbls = props.scene.getDataTables();\n        let fname = (Object.values(tbls).length > 0) ? Object.values(tbls)[0].name + \".msc\" : \"visualization.msc\";\n        let scn = JSON.stringify(props.scene.toJSON());\n        saveAs(new Blob([scn], {\"type\":\"text/plain;charset=utf-8\"}), fname);\n    }\n\n    const fileChanged = function(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        let f = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = function() {\n            props.loadScene(JSON.parse(reader.result));\n            props.resetStacks();\n        }\n        reader.readAsText(f);\n    }\n\n    const undo = (e) => {\n        // console.log(\"undoing\", props.undoStack.length);\n        if (props.undoStack.length === 0) return;\n        addToStack(props.scene, props.datasets, props.redoStack, \"redo\");\n\n        let scn = props.undoStack.pop();\n        props.loadScene(JSON.parse(scn));\n        // console.log(\"finished undo\", props.undoStack.length);\n        store.dispatch(updateUndoStack({length: props.undoStack.length}));\n    }\n\n    const redo = (e) => {\n        if (props.redoStack.length === 0) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n\n        let scn = props.redoStack.pop();\n        props.loadScene(JSON.parse(scn));\n        store.dispatch(updateRedoStack({length: props.redoStack.length}));\n        //props.setRedoStack(props.redoStack.slice());\n    }\n\n    const openScene = (e) => {\n        inputFile.current.click();\n    }\n\n    const updatePreview = () => {\n        if (d3.select(\"#preview\").empty())\n            return;\n        scn.clear();\n        let selected = props.scene.getItem(props.selected[0]),\n            dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n            field = d3.select(\"#fieldSelect\").property(\"value\");\n        if (selected && cmd && field && dataset) {\n            let item = selected.duplicate();\n            if (item.fillColor === \"none\")\n                item.fillColor = \"#f5f5f5\";\n            item.strokeColor = \"#222\";\n            scn.addChild(item);\n            if (cmd === \"Repeat\") {\n                let coll = scn.repeat(item, dataset, {field: field, layout: getDefaultCollectionLayout(item, dataset.getUniqueFieldValues(field).length)});\n                let vb = [coll.bounds.left - 2, coll.bounds.top - 2, coll.bounds.width + 4, coll.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            } else if (cmd === \"Divide\") {\n                item.strokeWidth = Math.max(item.strokeWidth, 1);\n                let o = d3.select(\"#orientationSelect\").property(\"value\");\n                let coll = scn.divide(item, dataset, {field: field, orientation: o});\n                let vb = [coll.bounds.left - 2, coll.bounds.top - 2, coll.bounds.width + 4, coll.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            } else if (cmd === \"Densify\") {\n                item.strokeWidth = Math.max(item.strokeWidth, 1);\n                let o = d3.select(\"#orientationSelect\").property(\"value\");\n                let itm = scn.densify(item, dataset, {field: field, orientation: o});\n                scn.setProperties(itm, {\"vxShape\": \"rect\", \"vxWidth\": 4, \"vxHeight\": 4, \"vxStrokeColor\": \"#1592e6\", \"vxStrokeWidth\": 1});\n                let vb = [itm.bounds.left - 2, itm.bounds.top - 2, itm.bounds.width + 4, itm.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            } else if (cmd === \"Classify\") {\n                item.strokeWidth = Math.max(item.strokeWidth, 1);\n                scn.classify(item, {field: field, layout: msc.layout(\"grid\", {\"numRows\": 1, \"colGap\": 1})});\n                item.layout = msc.layout(\"grid\", {\"numCols\": 1, \"rowGap\": 20})\n                let vb = [item.bounds.left - 2, item.bounds.top - 2, item.bounds.width + 4, item.bounds.height + 4].join(\" \");\n                d3.select(\"#preview\").attr(\"viewBox\", vb);\n            }\n            renderer.clear();\n            renderer.render(scn);\n        }\n    }\n\n    const updateMsg = () => {\n        if (props.selected.length === 0 || !cmd) {\n            setJoinMsg(\"\");\n            return;\n        }\n        let selected = props.scene.getItem(props.selected[0]),\n            dataset = tbls[d3.select(\"#datasetSelect\").property(\"value\")],\n            field = d3.select(\"#fieldSelect\").property(\"value\");\n        let vals = dataset.getUniqueFieldValues(field), num, msg = \"\";\n        if (selected.dataScope) {\n            num = selected.dataScope.getUniqueFieldValues(field).length;\n        } else {\n            num = vals.length;\n        }\n        if (cmd === \"Repeat\") {\n            msg = [num, selected.type + \"s\", \"will be created,\"].join(\" \");\n        } else if (cmd === \"Divide\") {\n            msg = [\"Divide the\", selected.type, \"into\", num, \"parts,\"].join(\" \");\n        } else if (cmd === \"Densify\") {\n            if (selected.type === \"rect\") {\n                let o = d3.select(\"#orientationSelect\").property(\"value\");\n                msg = [\"Densify the\", o === \"horizontal\" ? \"top/bottom side\" : \"left/right side\", \"of the rect with\", num, \"vertices,\"].join(\" \");\n            } else {\n                msg = [\"Densify the\", selected.type, \"with\", num, \"vertices, one for each\"].join(\" \");\n            }\n        } else if (cmd === \"Classify\") {\n            msg = [\"Group the\", selected.children.length, selected.firstChild.type + \"s\", \"into\",  num, \"collections\"].join(\" \");\n        }\n        d3.select(\"#msg\").text(msg);\n    }\n\n    useEffect(() => {\n        d3.selectAll(\".iconBtn\").classed(\"active\", false);\n        d3.select(\"#\"+props.activeTool+\"Btn\").classed(\"active\", true);\n    }, [props.activeTool]);\n\n    //manually trigger change event because repopulating options does not fire change event\n    useEffect(() => {\n        let fs = document.getElementById(\"fieldSelect\");\n        if (fs) {\n            // let evt = document.createEvent(\"Event\");\n            // evt.initEvent('change', true, false);\n            let evt = new CustomEvent('change', {bubbles: true, cancelable: false});\n            fs.dispatchEvent(evt);\n        }\n    }, [fields])\n\n    //TODO: need to use mascot's canAlign when it is finalized\n    const canAlign = (items, scene) => {\n        if (items.length < 2) return false;\n        for (let item of items) {\n            if (item.parent !== scene)\n                return false;\n        }\n        return true;\n    }\n\n    //TODO: need to use align constraints in mascot when it's ready\n    const doAlign = (dir) => {\n        // let items = props.selected.map(d => props.scene.getItem(d));\n        // let cstrs = props.scene.getRelatedConstraints(items);\n        // let o = [\"top\", \"middle\", \"bottom\"].indexOf(dir) >= 0 ? \"vertical\" : \"horizontal\";\n        // for (let c of cstrs) {\n        //     if (c.orientation === o) {\n        //         props.scene.removeConstraint(c);\n        //     }\n        // } \n        // props.scene.align(items, dir);\n        let newPos, items = props.selected.map(d => props.scene.getItem(d));\n        switch(dir) {\n            case \"bottom\":\n            case \"right\":\n                newPos = Math.max(...items.map(d => d.bounds[dir]));\n                break;\n            case \"center\":\n            case \"middle\":\n                newPos = Math.mean(...items.map(d => d.bounds[dir]));\n                break;\n            default:\n                newPos = Math.min(...items.map(d => d.bounds[dir]));\n                break;\n        }\n        if ([\"top\", \"middle\", \"bottom\"].indexOf(dir) >= 0)\n            items.forEach(d => props.scene.translate(d, 0, newPos - d.bounds[dir]));\n        else\n            items.forEach(d => props.scene.translate(d, newPos - d.bounds[dir], 0));\n        store.dispatch(updateItem({id: items[0].id, type: items[0].type, properties: {x: items[0].x, y: items[0].y}}));\n        props.renderer.render(props.scene);\n    }\n\n    useEffect(() => {\n        if (props.selected.length === 0) {\n            d3.select(\"#repeatBtn\").property(\"disabled\", true);\n            d3.select(\"#divideBtn\").property(\"disabled\", true);\n            d3.select(\"#densifyBtn\").property(\"disabled\", true);\n            d3.select(\"#classifyBtn\").property(\"disabled\", true);\n            d3.selectAll(\".alignBtn\").property(\"disabled\", true);\n            return;\n        }\n        let item = props.scene.getItem(props.selected[0]);\n        d3.select(\"#repeatBtn\").property(\"disabled\", !item || !canRepeat(item) || props.datasets.length === 0);\n        d3.select(\"#divideBtn\").property(\"disabled\", !item || !canDivide(item) || props.datasets.length === 0);\n        d3.select(\"#densifyBtn\").property(\"disabled\", !item || !canDensify(item) || props.datasets.length === 0);\n        d3.select(\"#classifyBtn\").property(\"disabled\", !item || !canClassify(item) || props.datasets.length === 0);\n        d3.selectAll(\".alignBtn\").property(\"disabled\", !canAlign(props.selected.map(d => props.scene.getItem(d)), props.scene));\n    }, [props.selected, props.scene, props.datasets]);\n\n    useEffect(() => {\n        d3.select(\"#undoBtn\").property(\"disabled\", props.undoStackChanged.length <= 0);\n    }, [props.undoStackChanged]);\n\n    useEffect(() => {\n       d3.select(\"#redoBtn\").property(\"disabled\", props.redoStackChanged.length <= 0);\n    }, [props.redoStackChanged]);\n\n    useEffect(() => {\n        d3.select(\"#undoBtn\").property(\"disabled\", props.undoStack.length <= 0);\n        d3.select(\"#redoBtn\").property(\"disabled\", props.redoStack.length <= 0);\n    }, [props.undoStack, props.redoStack])\n\n    return (\n        <div>\n            <div className=\"myToolBar\">\n                <div className=\"myBtnGroup\">\n                    <button key=\"open\" className=\"myTextBtn\" id=\"openBtn\" onClick={openScene}>Open</button>\n                    <input type='file' id='scnFile' ref={inputFile} style={{display: 'none'}} accept=\".msc\" onChange={fileChanged}/>\n                    <button key=\"save\" className=\"myTextBtn\" id=\"saveBtn\" onClick={saveScene}>Save</button>\n                    <button key=\"export\" className=\"myTextBtn\" id=\"exportBtn\" onClick={exportSVG}>Export</button>\n                </div>\n                <div className=\"myBtnGroup\">\n                    <button key=\"undo\" className=\"myTextBtn\" id=\"undoBtn\" onClick={undo}>Undo</button>\n                    <button key=\"redo\" className=\"myTextBtn\" id=\"redoBtn\" onClick={redo}>Redo</button>\n                </div>\n                <div className=\"myBtnGroup\">\n                    {tools.map(t => <button key={t} className=\"iconBtn\" title={t} id={t+\"Btn\"} tool={t} onClick={(e) => switchTool(e.target.getAttribute(\"tool\"))}></button>)}\n                </div>\n                <div className=\"myBtnGroup\">\n                    <button key=\"repeat\" className=\"myTextBtn\" id=\"repeatBtn\" onClick={repeatBtnClicked}>Repeat</button>\n                    <button key=\"divide\" className=\"myTextBtn\" id=\"divideBtn\" onClick={divideBtnClicked}>Divide</button>\n                    <button key=\"densify\" className=\"myTextBtn\" id=\"densifyBtn\" onClick={densifyBtnClicked}>Densify</button>\n                    <button key=\"classify\" className=\"myTextBtn\" id=\"classifyBtn\" onClick={classifyBtnClicked}>Classify</button>\n                </div>\n                <div className=\"myBtnGroup\">\n                    {arrangements.map(t => <button key={t.replace(\" \", \"\")} className=\"alignBtn\" dir={t.split(\" \")[1].toLowerCase()} title={t} id={t.replace(\" \", \"\")+\"Btn\"} onClick={(e) => doAlign(e.target.getAttribute(\"dir\"))}></button>)}\n                </div>\n            </div>\n            <Modal show={showRepeatModal} onShow={(e)=>{updatePreview();updateMsg();}}  backdrop=\"static\" keyboard={false}>\n                <Modal.Header>\n                <Modal.Title>{cmd}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                <div style={{\"clear\": \"both\", \"marginBottom\": \"10px\"}}>\n                    <div id=\"msg\" style={{\"clear\": \"both\", \"marginBottom\": \"7px\", \"display\": \"block\"}}>{joinMsg}</div>\n                    one for each <select id=\"fieldSelect\" onChange={(e)=>{updatePreview();updateMsg();}} style={{\"marginLeft\": \"8px\"}}>\n                        {fields.map(o => <option value={o} key={o}>{o === \"atlas_rowId\" ? \"row of data\" : o}</option>)}\n                    </select>\n                    <div style={{\"marginTop\": \"12px\", \"clear\": \"left\"}}>from dataset \n                        <select id=\"datasetSelect\" onChange={(e) => {setFields(tbls[e.target.value].nonNumericFields.concat([\"atlas_rowId\"]));}} style={{\"marginLeft\": \"7px\"}}>\n                            {Object.values(tbls).map( o => <option value={o.id} key={o.id}>{o.name}</option>)}\n                        </select>\n                    </div>\n                    <div style={{\"marginTop\": \"15px\", \"display\": cmd === \"Repeat\" || cmd === \"Classify\" || (cmd === \"Densify\" && props.selected[0] && props.scene.getItem(props.selected[0]).type !== \"rect\") ? \"none\" : \"block\"}}>\n                        Orientation \n                        <select id=\"orientationSelect\" onChange={(e)=>{updatePreview()}} style={{\"marginLeft\": \"7px\"}}>\n                            {orientations.map(o => <option value={o} key={o}>{o}</option>)}\n                        </select>\n                    </div>\n                </div>\n                <svg id=\"preview\" style={{\"width\": \"470px\", \"height\": \"180px\", \"border\": \"solid 0px #ddd\", \"padding\": \"5px\"}}></svg>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={(e) => {setShowRepeatModal(false)}}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={doJoin}>OK</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n\n}\n\nexport default connect(mapStateToProps)(ToolBar);\n","import './css/Inspector.css';\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { divergingColorSchemes, properties, sequentialColorSchemes } from './Defs';\nimport { addToStack, getAggregator, getDefaultLayout, getPropertyDef, getReusableScales, getScaleType, getScheme } from './Util';\nimport { SketchPicker } from 'react-color';\nimport store from './store';\nimport { createNewItem, toggleAxisHandle, updateItem } from './canvasSlice';\nimport { Dropdown, Form, Stack } from 'react-bootstrap';\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    directSelected: state.canvas.directSelected,\n    itemUpdated: state.canvas.itemUpdated\n});\n\nconst headerClasses = {};\nfor (let g in properties) {\n    let classes = [];\n    for (let prop in properties[g]) {\n        for (let c of properties[g][prop].class) {\n            if (classes.indexOf(c) < 0)\n                classes.push(c);\n        }\n    }\n    headerClasses[g] = classes;\n}\n\nconst updatePropertyControl = (propDef, item, scene) => {\n\n    d3.select(\"#\" + propDef.id).style(\"padding-left\", \"3px\");\n    d3.select(\"#\" + propDef.id + \"ScaleBtn\").style(\"display\", \"none\");\n\n    if (propDef.accessor) {\n        let val = item;\n\n        for (let a of propDef.accessor)\n            val = val[a];\n\n        if (propDef.type === \"numeric\")\n            val = val.toFixed(1);\n\n        if (propDef.id === \"vxShape\" && !val)\n            val = \"none\";\n\n        if (propDef.type === \"color\") {\n            d3.select(\"#\" + propDef.id).style(\"background\", val).property(\"value\", val);\n        } else if (propDef.type === \"boolean\") {\n            d3.select(\"#\" + propDef.id).property(\"checked\", val);    \n        } else {\n            d3.select(\"#\" + propDef.id).property(\"value\", val).property(\"disabled\", propDef.channel === \"area\");\n        }\n    }\n\n    //check if bound to data\n    if (propDef.channel) {\n        let enc;\n        if (propDef.channel === \"width\" || propDef.channel === \"height\" || propDef.channel === \"area\" || propDef.channel === \"radius\") {\n            enc = scene.sizeBound(item, propDef.channel);\n        } else if (propDef.channel === \"x\" || propDef.channel === \"y\") {\n            enc = scene.positionBound(item, propDef.channel);\n        } else {\n            enc = scene.getEncodingByItem(item, propDef.channel);\n        }\n        let encodable = item.type === \"segment\" ? item.parent.dataScope : item.type === \"vertex\" ? item.parent.dataScope || item.dataScope : item.dataScope;\n        if (enc) {\n            if (enc.channel === propDef.channel) {\n                d3.select(\"#\" + propDef.id).property(\"value\", enc.field).property(\"disabled\", true).style(\"pointer-events\", \"none\");\n                d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"inline-block\")\n                    .on(\"click\", function(e){\n                        scene.removeEncoding(enc);\n                        let o = {};\n                        o[enc.channel] = true;\n                        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n                    });\n                d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"none\");\n                let scaleCustomizable = (propDef.type === \"numeric\" && [\"linear\", \"sqrt\", \"log\", \"power\"].indexOf(enc.scale.type) >= 0) || \n                                            (propDef.type === \"color\" && [\"sequentialColor\", \"divergingColor\"].indexOf(enc.scale.type) >= 0);\n                if (scaleCustomizable) {\n                    d3.select(\"#\" + propDef.id).style(\"padding-left\", \"23px\");\n                    d3.select(\"#\" + propDef.id + \"ScaleBtn\").style(\"display\", \"inline-block\");\n                }\n            } else {\n                let info = (enc.anyItem.type === \"vertex\" || enc.anyItem.type === \"segment\")? \"[see \" + enc.anyItem.type + \"]\" : \"[see \" + enc.channel + \"]\";\n                d3.select(\"#\" + propDef.id).property(\"value\", info).property(\"disabled\", true).style(\"pointer-events\", \"none\");\n                d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"none\");\n                d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"none\");\n            }\n        } else if (encodable) {\n            let disabled = (propDef.group === \"Segment Position\" || propDef.group === \"Vertex Position\");\n            d3.select(\"#\" + propDef.id).property(\"disabled\", disabled).style(\"pointer-events\", \"all\");\n            d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"none\");\n            d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"inline-block\");\n        } else {\n            let disabled = (propDef.group === \"Segment Position\" || propDef.group === \"Vertex Position\");\n            d3.select(\"#\" + propDef.id).property(\"disabled\", disabled).style(\"pointer-events\", \"all\");\n            d3.select(\"#\" + propDef.id + \"UnencodeBtn\").style(\"display\", \"none\");\n            d3.select(\"#\" + propDef.id + \"EncodeBtn\").style(\"display\", \"none\");\n        }\n    }\n\n    if (propDef.id === \"layoutType\") {\n        const layout = item.layout ? item.layout.type : \"none\";\n        d3.select(\"#\" + propDef.id).property(\"value\", layout);\n        d3.selectAll(\".layout-prop\").style(\"display\", \"none\");\n        d3.selectAll(\".\" + layout + \"-prop\").style(\"display\", \"inline-block\");\n        let options = d3.select(\"#\"+propDef.id).selectAll(\"option\");\n        let ct = item.firstChild.type, na = [];\n        if (ct === \"rect\") {\n            na.push(\"packing\");\n            if (!scene.getEncodingByItem(item.firstChild, \"area\")) {\n                na.push(\"treemap\");\n            }\n        } else if (ct === \"circle\") {\n            na.push(\"treemap\");\n        } else if (ct === \"collection\") {\n            na = na.concat([\"packing\", \"treemap\"]);\n        } //TODO: handle other item types\n        \n        options.property(\"disabled\", function(d, i) {\n            const v = d3.select(this).property(\"value\");\n            return na.indexOf(v) >= 0;\n        })\n        \n        const params = propDef.options.filter(d => d.value === layout)[0].parameters;\n        for (const p of params) {\n            const paramDef = properties[\"Layout\"][p];\n            let v = item.layout[paramDef.accessor[0]];\n            if (paramDef.type === \"numeric-integer\")\n                v = v.toFixed(0);\n            else if (paramDef.type === \"numeric\")\n                v = v.toFixed(1);\n            //handle layout parameter controls\n            d3.select(\"#\" + paramDef.id).property(\"value\", v);\n            d3.select(\"#\" + paramDef.id + \"ScaleBtn\").style(\"display\", \"none\");\n        }\n    }\n\n    if (propDef.id === \"childrenOrder\") {\n        d3.select(\"#\" + propDef.id).selectAll(\"option\").remove();\n        if (item.dataScope) {\n            let options = item.dataScope.dataTable.fields;\n            d3.select(\"#\" + propDef.id).selectAll(\"option\").data(options).enter().append(\"option\")\n                .property(\"value\", d => d).text(d => d === \"atlas_rowId\" ? \"default\" : d);\n            d3.select(\"#\" + propDef.id).property(\"value\", item.childrenOrder.field);\n        } //TODO: hide childrenOrder if item has no data scope\n    }\n\n    if (propDef.id === \"axisOrientation\") {\n        let options = d3.select(\"#\"+propDef.id).selectAll(\"option\");\n        if (item.channel === \"x\" || item.channel === \"width\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"top\" && v !== \"bottom\";\n            })\n        } else if (item.channel === \"y\" || item.channel === \"height\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"left\" && v !== \"right\";\n            })\n        } else {\n            options.property(\"disabled\", true);\n        }\n    }\n\n    if (propDef.id === \"includeZero\") {\n        if (item.channel !== \"y\") {\n            d3.select(\"#\" + propDef.id + \"_row\").style(\"display\", \"none\");\n        } else {\n            d3.select(\"#\" + propDef.id + \"_row\").style(\"display\", \"inline-block\");\n        }\n    }\n\n    if (propDef.id === \"baseline\") {\n        let options = d3.select(\"#\"+propDef.id).selectAll(\"option\");\n        let ori = item.orientation;\n        if (ori === \"horizontal\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"top\" && v!== \"middle\" && v !== \"bottom\";\n            })\n        } else if (ori === \"vertical\") {\n            options.property(\"disabled\", function(d, i) {\n                const v = d3.select(this).property(\"value\");\n                return v !== \"left\" && v!== \"center\" && v !== \"right\";\n            })\n        } else {\n            options.property(\"disabled\", true);\n        }\n    }\n\n    if (propDef.id === \"vxShape\") {\n        vertexShapeUpdated();\n    }\n}\n\nconst vertexShapeUpdated = () => {\n    let v = d3.select(\"#vxShape\").property(\"value\");\n    if (v === \"rect\") {\n        d3.select(\"#vxRadius_row\").style(\"display\", \"none\");\n        d3.select(\"#vxWidth_row\").style(\"display\", \"inline-block\");\n        d3.select(\"#vxHeight_row\").style(\"display\", \"inline-block\");\n    } else if (v === \"circle\") {\n        d3.select(\"#vxRadius_row\").style(\"display\", \"inline-block\");\n        d3.select(\"#vxWidth_row\").style(\"display\", \"none\");\n        d3.select(\"#vxHeight_row\").style(\"display\", \"none\");\n    } else {\n        d3.select(\"#vxRadius_row\").style(\"display\", \"none\");\n        d3.select(\"#vxWidth_row\").style(\"display\", \"none\");\n        d3.select(\"#vxHeight_row\").style(\"display\", \"none\");\n    }\n}\n\nfunction Inspector(props) {\n    // const dispatch = useDispatch();\n    const [currentColor, setCurrentColor] = useState(\"#fff\");\n    const [currentColorPropDef, setCurrentColorPropDef] = useState(null);\n    const [currentDataTable, setCurrentDataTable] = useState(null);\n    const [pastLayouts, setPastLayouts] = useState({});\n\n    useEffect(() => {\n        setPastLayouts({});\n    }, [props.scene]);\n\n    useEffect(() => {\n        if (currentColorPropDef === null) {\n            d3.select(\"#colorPicker\").style(\"display\", \"none\");\n            return;\n        }\n        let item = currentColorPropDef.id === \"canvasFillColor\" ? props.scene : \n                    props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : \n                        props.directSelected ? props.scene.getItem(props.directSelected) : null;\n        if (item === null) return;\n        let c = item[currentColorPropDef.accessor];\n        setCurrentColor(c ? c : \"#fff\");\n        d3.select(\"#colorPicker\").style(\"display\", \"block\");\n    }, [currentColorPropDef, props.scene, props.selected, props.directSelected]);\n\n    useEffect(() => {\n        if (currentColorPropDef === null) {\n            return;\n        }\n        d3.select(\"#\" + currentColorPropDef.id).style(\"background\", currentColor).property(\"value\", currentColor);\n        if (currentColorPropDef.id === \"canvasFillColor\") {\n            props.scene[currentColorPropDef.accessor] = currentColor;\n        } else if (props.selected.length > 0) {\n            let item = props.scene.getItem(props.selected[0]);\n            if (item.type === \"axis\" || item.type === \"gridlines\" || item.type === \"legend\") {\n                item[currentColorPropDef.accessor] = currentColor;\n            } else {\n                let prop = {};\n                prop[currentColorPropDef.accessor] = currentColor;\n                props.scene.setProperties(item, prop);\n            }\n        } else if (props.directSelected) {\n            let item = props.scene.getItem(props.directSelected);\n            let prop = {};\n            prop[currentColorPropDef.accessor] = currentColor;\n            props.scene.setProperties(item, prop);\n        }\n        props.renderer.render(props.scene);\n    }, [currentColor, currentColorPropDef, props.scene, props.selected, props.directSelected, props.renderer]);\n\n    useEffect(() => {\n        if (!props.itemUpdated.id || props.itemUpdated.source === \"inspector\") return;\n        const item = props.scene.getItem(props.itemUpdated.id);\n        if (item === undefined) return;\n        for (let prop in props.itemUpdated.properties) {\n            const def = getPropertyDef(item.type, prop);\n            if (def)\n                updatePropertyControl(def, item, props.scene);\n        }\n    }, [props.scene, props.itemUpdated])\n\n    useEffect(() => {\n        let type, selected = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : undefined;\n        if (!selected) {\n            type = \"canvas\";\n            selected = props.scene;\n            setCurrentDataTable(null);\n        } else {\n            //selected = props.scene.getItem(props.selected[0]);\n            type = selected.type;\n            let item = props.scene.getItem(props.selected[0]);\n            if (item.dataScope)\n                setCurrentDataTable(item.dataScope.dataTable);\n            else\n                setCurrentDataTable(null);\n        }\n        let panel = d3.select(\".propertyPanel\");\n        panel.selectAll(\".propertyGroupHeader\").style(\"display\", \"none\");\n        panel.selectAll(\".propertyRow\").style(\"display\", \"none\");\n        //if (props.selected.length === 1) {\n        if (selected) {\n            panel.selectAll(\".\" + type + \"-prop\").style(\"display\", \"inline-block\");\n            for (let g in properties) {\n                for (let prop in properties[g]) {\n                    if (properties[g][prop].class.indexOf(type + \"-prop\") >= 0)\n                        updatePropertyControl(properties[g][prop], selected, props.scene);\n                }\n            }\n        }\n    }, [props.scene, props.selected]);\n\n    useEffect(() => {\n        if (!props.directSelected) {\n            setCurrentDataTable(null);\n        } else {\n            let item = props.scene.getItem(props.directSelected);\n            if (item.dataScope)\n                setCurrentDataTable(item.dataScope.dataTable);\n            else if (item.parent.dataScope)\n                setCurrentDataTable(item.parent.dataScope.dataTable);\n            else\n                setCurrentDataTable(null);\n        }\n        let panel = d3.select(\".propertyPanel\");\n        panel.selectAll(\".propertyGroupHeader\").style(\"display\", \"none\");\n        panel.selectAll(\".propertyRow\").style(\"display\", \"none\");\n        if (props.directSelected) {\n            let ds = props.scene.getItem(props.directSelected), type = ds.type;\n            panel.selectAll(\".\" + type + \"-prop\").style(\"display\", \"inline-block\");\n            for (let g in properties) {\n                for (let prop in properties[g]) {\n                    if (properties[g][prop].class.indexOf(type + \"-prop\") >= 0)\n                        updatePropertyControl(properties[g][prop], ds, props.scene);\n                }\n            }\n        }\n    }, [props.scene, props.directSelected]);\n\n    const setCategoricalValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        let val = ctrl.property(\"value\");\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        if (item === undefined) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        const o = {};\n        //TODO: handle layout properties in o properly for dispatch\n        switch (attr.id) {\n            case \"axisOrientation\":\n            case \"legendOrientation\":\n                item[attr.accessor[0]] = val;\n                o[attr.accessor[0]] = val;\n                break;\n            case \"orientation\":\n            case \"horzGravity\":\n            case \"vertGravity\":\n            case \"direction\":\n                o[attr.accessor[0]] = val;\n                props.scene.setProperties(item.layout, o);\n                //props.scene.reCreateRelatedAxes(item);\n                break;\n            case \"layoutType\":\n                o[\"layout\"] = val;\n                let l;\n                if (!(item.id in pastLayouts))\n                    pastLayouts[item.id] = [];\n                pastLayouts[item.id].unshift(item.layout);\n                if (pastLayouts[item.id].length > 0) {\n                    l = pastLayouts[item.id].find(d => d && d.type === val);\n                }\n                if (!l)\n                    l = getDefaultLayout(val);\n                props.scene.setProperties(item, {\"layout\": l});\n                updatePropertyControl(attr, item, props.scene);\n                break;\n            case \"vxShape\":\n                o[attr.accessor[0]] = val;\n                props.scene.setProperties(item, o);\n                vertexShapeUpdated();\n                break;\n            case \"childrenOrder\":\n                let dir = d3.select(\"#childrenOrderDirBtn\").property(\"checked\") ? \"desc\" : \"asc\";\n                o[attr.accessor[0]] = {\"field\": val, \"direction\": dir};\n                props.scene.setProperties(item, o);\n                //props.scene.reCreateRelatedAxes(item);\n                break;\n            default:\n                o[attr.accessor[0]] = val;\n                props.scene.setProperties(item, o);\n                break;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const setBooleanValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let val = ctrl.property(\"checked\");\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        item[attr.accessor[0]] = val;\n        const o = {};\n        o[attr.accessor[0]] = val;\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const setStringValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        let val = ctrl.property(\"value\");\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        addToStack(props.scene, props.datasets, props.undoStack);\n        const o = {};\n        switch (attr.id) {\n            case \"labelFormat\":\n                o[attr.accessor[0]] = val;\n                item[attr.accessor[0]] = val;\n                break;\n            default:\n                break;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const setNumericValue = (attr) => {\n        let ctrl = d3.select(\"#\"+attr.id);\n        if (ctrl.empty()) return;\n        let val = parseFloat(ctrl.property(\"value\"));\n        if (isNaN(val)) return;\n        if (attr.id !== \"rowGap\" && attr.id !== \"colGap\" && attr.id !== \"labelRotation\" && val < 0) return;\n        if (attr.type === \"numeric-integer\") {\n            val = parseInt(val);\n        }\n        let item = props.selected.length > 0 ? props.scene.getItem(props.selected[0]) : props.scene.getItem(props.directSelected); \n        addToStack(props.scene, props.datasets, props.undoStack);\n        const o = {};\n        switch (attr.id) {\n            case \"strokeWidth\":\n            case \"width\":\n            case \"height\":\n            case \"area\":\n            case \"fontSize\":\n            case \"vxWidth\":\n            case \"vxHeight\":\n            case \"vxRadius\":\n            case \"vxOpacity\":\n            case \"vxStrokeWidth\":\n            case \"opacity\":\n            case \"radius\":\n            case \"innerRadius\":\n            case \"outerRadius\":\n                o[attr.channel] = val;\n                props.scene.setProperties(item, o);\n                break;\n            case \"rowGap\":\n            case \"colGap\":\n            case \"numRows\":\n            case \"numCols\":\n                if (item.layout) {\n                    o[attr.id] = val;\n                    props.scene.setProperties(item.layout, o);\n                }\n                break;\n            case \"tickOffset\":\n            case \"labelOffset\":\n            case \"labelRotation\":\n            case \"tickSize\":\n            case \"pathPos\":\n            case \"gridlineStrokeWidth\":\n                o[attr.accessor[0]] = val;\n                item[attr.accessor[0]] = val;\n                break;\n            case \"x\":\n            case \"collectionX\":\n            case \"glyphX\":\n                props.scene.translate(item, val - item.x, 0);\n                break;\n            case \"y\":\n            case \"collectionY\":\n            case \"glyphY\":\n                props.scene.translate(item, 0, val - item.y);\n                break;\n            default:\n                break;\n        }\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n    }\n\n    const encode = (f, c, scale) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        if ((c === \"x\" || c === \"y\") && item.type !== \"area\" && item.parent.type === \"collection\" && item.parent.layout) {\n            props.scene.setProperties(item.parent, {\"layout\": undefined});\n        }\n        props.scene.encode(item, {field: f, channel: c, scale: scale});\n        let guide;\n        if (!scale) {\n            if (c.indexOf(\"Color\") > 0) {\n                guide = props.scene.legend(c, f);\n            } else if (c === \"width\" || c === \"height\" || c === \"x\" || c === \"y\") {\n                guide = props.scene.axis(c, f, {item: item});\n            }\n        } else { //if merging scale, generate a new axis only when binding to line/path vertex, and the line/path orientation is orthogonal to the channel \n            if (item.type === \"vertex\" && [\"path\", \"line\"].indexOf(item.parent.type) >= 0 ) {\n                let p = item.parent;\n                let r = Math.abs((p.firstVertex.y - p.lastVertex.y + 1)/(p.firstVertex.x - p.lastVertex.x + 1));\n                if ((r < 1 && c === \"y\") || (r > 1 && c === \"x\")) {\n                    guide = props.scene.axis(c, f, {item: item});\n                }\n            }\n        }\n        props.scene.reCreateRelatedAxes(item);\n        \n        const o = {};\n        o[c] = \"encoded\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n        if (guide)\n            store.dispatch(createNewItem(guide.id));\n    }\n\n    const highlightAxis = (scale, show) => {\n        for (let c of props.scene.children) {\n            if (c.type === \"axis\" && c.encoding) {\n                if (c.encoding.scale === scale) {\n                    store.dispatch(toggleAxisHandle({axis: c.id, visible: show}));\n                    return;\n                }\n            }\n        }\n    }\n\n    const createNumericControl = (attr) => {\n        return <input id={attr.id} onChange={(e) => setNumericValue(attr)}></input>;\n        //return <div><button className=\"scaleBtn\" id={attr.id+\"ScaleBtn\"}></button><input id={attr.id} onChange={(e) => setNumericValue(attr)}></input></div>\n    }\n\n    const createStringControl = (attr) => {\n        return <input type=\"text\" id={attr.id} onInput={(e) => setStringValue(attr)}></input>\n    }\n\n    const createColorControl = (attr) => {\n        return <input id={attr.id} onClick={(e) => {setCurrentColorPropDef(attr);e.stopPropagation();}}></input>\n    }\n\n    const createCategoryControl = (attr) => {\n        return <select id={attr.id} onChange={(e) => setCategoricalValue(attr)}>{attr.options.map( o => <option value={o.value} key={o.display}>{o.display}</option>)}</select>\n    }\n\n    const createRangeControl = (attr) => {\n        return (\n            <div className=\"propertySliderDiv\">\n                <input type=\"range\" min={attr.range[0]} max={attr.range[1]} step={(attr.range[1] - attr.range[0])/10} className=\"propertySlider\" id={attr.id} onChange={(e) => setNumericValue(attr)}></input>\n                <div className=\"propertySliderMarks\"> \n                    <div style={{margin: 0, float: \"left\"}}>{attr.range[0]}</div>\n                    <div style={{margin: 0, float: \"right\"}}>{attr.range[1]}</div>\n                </div>\n            </div>\n        )\n    }\n\n    const createBooleanControl = (propDef) => {\n        return (\n            <input type=\"checkbox\" id={propDef.id} onChange={(e) => setBooleanValue(propDef)}></input>\n        )\n    }\n\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n        <button className='dropdown-item dropdown-toggle encodeFields' href=\"\" ref={ref}\n            // onMouseEnter={(e) => onClick(e)}\n            onClick={(e) => {\n                e.preventDefault();\n                onClick(e);\n            }}\n        >\n          {\"  \" + children}\n        </button>\n    ));\n\n    const changeAggregator = (channel, aggr) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let enc = props.scene.getEncodingByItem(item, channel);\n        if (!enc) return;\n        enc.aggregator = aggr;\n        props.scene.reCreateRelatedAxes(item);\n        \n        const o = {};\n        o[channel] = \"aggregator\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n    }\n\n    const changeScaleType = (channel, type) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let enc = props.scene.getEncodingByItem(item, channel);\n        if (!enc) return;\n        enc.scale.type = type;\n        props.scene.reCreateRelatedAxes(item);\n        \n        const o = {};\n        o[channel] = \"scaleType\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n    }\n\n    const changeScheme = (channel, scheme) => {\n        let item;\n        if (props.selected.length >= 1) {\n            item = props.scene.getItem(props.selected[0]);\n        } else if (props.directSelected) {\n            item = props.scene.getItem(props.directSelected);\n        }\n\n        if (!item) return;\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let enc = props.scene.getEncodingByItem(item, channel);\n        if (!enc) return;\n        enc.scale.scheme = scheme;\n        props.scene.reCreateRelatedLegends(item);\n        const o = {};\n        o[channel] = \"scheme\";\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n    };\n\n    const toggleOrder = (e, propDef) => {\n        let dir = e.target.checked ? \"desc\" : \"asc\";\n        d3.select(\"#childrenOrderDirBtnImg\").attr(\"src\", \"/app/icons/\" + dir + \".png\");\n        addToStack(props.scene, props.datasets, props.undoStack);\n        let item = props.scene.getItem(props.selected[0]); \n        const o = {};\n        o[propDef.accessor[0]] = {field: item[propDef.accessor[0]].field, direction: dir};\n        props.scene.setProperties(item, o);\n        //props.scene.reCreateRelatedAxes(item);\n        store.dispatch(updateItem({id: item.id, type: item.type, properties: o, source: \"inspector\"}));\n        // let o = {};\n        // o[enc.channel] = true;\n        // store.dispatch(updateItem({id: item.id, type: item.type, properties: o}));\n    };\n\n\n    const createPropertyControl = (prop, propDef) => {\n        let classes = \"propertyRow \" + propDef.class.join(\" \");\n        return (\n        <tr className={classes} key={prop} id={propDef.id+\"_row\"}>\n            <td className= \"propertyName\">{prop}</td>\n            <td className=\"propertyInput\">\n            <Dropdown id={propDef.id+\"ScaleBtn\"} className=\"scaleBtnDiv\">\n                <Dropdown.Toggle className=\"scaleBtn\" variant=\"link\" bsPrefix=\"p-0\">\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"scaleMenu\">\n                    <div>\n                    <Form>\n                        <Form.Group style={{\"margin\": \"0 10px 0 10px\", \"display\": prop.indexOf(\"Color\") < 0 ? \"block\" : \"none\"}}>\n                            <Stack direction=\"horizontal\" gap={1}>\n                                <Form.Label className=\"scaleMenuLabel\">Scale type</Form.Label>\n                                <Form.Select value={getScaleType(propDef.channel, props.selected, props.directSelected, props.scene) ? getScaleType(propDef.channel, props.selected, props.directSelected, props.scene) : \"\"} onChange={(e) => changeScaleType(propDef.channel, e.target.value)} size=\"sm\">\n                                    <option value=\"linear\">Linear</option>\n                                    <option value=\"log\">Log</option>\n                                    <option value=\"sqrt\">Square Root</option>\n                                    <option value=\"power\">Power (2)</option>\n                                </Form.Select>\n                            </Stack>\n                        </Form.Group>\n                        <Form.Group style={{\"margin\": \"0 10px 0 10px\", \"display\": getAggregator(propDef.channel, props.selected, props.directSelected, props.scene) ? \"block\" : \"none\"}}>\n                            <Stack direction=\"horizontal\" gap={1}>\n                                <Form.Label className=\"scaleMenuLabel\">Aggregator</Form.Label>\n                                <Form.Select value={getAggregator(propDef.channel, props.selected, props.directSelected, props.scene) ? getAggregator(propDef.channel, props.selected, props.directSelected, props.scene) : \"\"} onChange={(e) => changeAggregator(propDef.channel, e.target.value)} size=\"sm\">\n                                    <option value=\"sum\">Sum</option>\n                                    <option value=\"avg\">Average</option>\n                                    <option value=\"max\">Maximum</option>\n                                    <option value=\"min\">Minimum</option>\n                                    <option value=\"median\">Median</option>\n                                    <option value=\"count\">Count</option>\n                                </Form.Select>\n                            </Stack>\n                        </Form.Group>\n                        <Form.Group style={{\"margin\": \"0 10px 0 10px\", \"display\": prop.indexOf(\"Color\") > 0 ? \"block\" : \"none\"}}>\n                            <Stack direction=\"horizontal\" gap={1}>\n                                <Form.Label className=\"scaleMenuLabel\">Color Scheme</Form.Label>\n                                <Form.Select value={getScheme(propDef.channel, props.selected, props.directSelected, props.scene) ? getScheme(propDef.channel, props.selected, props.directSelected, props.scene) : \"\"} onChange={(e) => changeScheme(propDef.channel, e.target.value)} size=\"sm\">\n                                    {getScaleType(propDef.channel, props.selected, props.directSelected, props.scene) === \"divergingColor\" ? \n                                        Object.keys(divergingColorSchemes).map(o => <option value={o} key={o}>{divergingColorSchemes[o]}</option>) :\n                                        Object.keys(sequentialColorSchemes).map(o => <option value={o} key={o}>{sequentialColorSchemes[o]}</option>) \n                                    }\n                                </Form.Select>\n                            </Stack>\n                        </Form.Group>\n                    </Form>\n                    </div>\n                </Dropdown.Menu>\n            </Dropdown>\n            {(function(){\n                switch(propDef.type) {\n                    case \"numeric\":\n                    case \"numeric-integer\":\n                        return createNumericControl(propDef);\n                    case \"numeric-range\":\n                        return createRangeControl(propDef);\n                    case \"color\":\n                        return createColorControl(propDef);\n                    case \"categorical\":\n                        return createCategoryControl(propDef);\n                    case \"boolean\":\n                        return createBooleanControl(propDef);\n                    case \"string\":\n                        return createStringControl(propDef);\n                    default:\n                        return createNumericControl(propDef);\n                }\n            })()}\n            </td>\n            {propDef.encodable ? (<td>\n                <button className=\"unencodeBtn\" id={propDef.id+\"UnencodeBtn\"}></button>\n                <Dropdown id={propDef.id+\"EncodeBtn\"}>\n                    <Dropdown.Toggle className=\"encodeBtn\" variant=\"link\" bsPrefix=\"p-0\">\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        {currentDataTable === null ? []: \n                            currentDataTable.getEncodableFields(propDef.channel).map((f, i) => {\n                                let scales = getReusableScales(currentDataTable.getFieldType(f), propDef.channel, props.scene);\n                                if (Object.keys(scales).length === 0) {\n                                    return (\n                                        <Dropdown.Item className=\"encodeFields\" key={f}\n                                            onClick={(e) => {encode(f, propDef.channel)}}>\n                                            {f}\n                                        </Dropdown.Item> \n                                    )\n                                } else {\n                                    let options = [];\n                                    for (let k in scales) {\n                                        options.push({fields: scales[k].map(d => d.field).join(\"/\"), scale: scales[k][0].scale})\n                                    }\n                                    return (\n                                        // <Dropdown.Item onMouseEnter={(e) => {console.log(f, propDef.channel)}} className=\"encodeFields\" key={f} eventKey={f}>{f}</Dropdown.Item>\n                                        <Dropdown id={propDef.id+\"_scale_\"+f} key={propDef.id+\"_scale_\"+f} drop='start'>\n                                            <Dropdown.Toggle as={CustomToggle} bsPrefix=\"p-0\">\n                                                {f}\n                                            </Dropdown.Toggle>\n                                            <Dropdown.Menu>\n                                                {[null].concat(options).map((enc, i) => {\n                                                    if (enc === null) {\n                                                        return (\n                                                        <Dropdown.Item className=\"encodeFields\" key={\"new\"+i}\n                                                            onClick={(e) => {encode(f, propDef.channel)}}\n                                                        >\n                                                        Create new scale\n                                                        </Dropdown.Item>);\n                                                    } else {\n                                                        return (\n                                                        <Dropdown.Item className=\"encodeFields\" key={enc.scale.id+\"_\"+i}\n                                                            onClick={(e) => {encode(f, propDef.channel, enc.scale)}}\n                                                            onMouseEnter={(e) => {highlightAxis(enc.scale, true)}}\n                                                            onMouseLeave={(e) => {highlightAxis(enc.scale, false)}}\n                                                        >\n                                                        {\"Merge with \" + enc.fields}\n                                                        </Dropdown.Item>);\n                                                    }\n                                                })}\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                    )\n                                }\n                            }\n                            )}\n                    </Dropdown.Menu>\n                </Dropdown>\n                </td>) :\n             propDef.id === \"childrenOrder\" ? (<td><label htmlFor=\"childrenOrderDirBtn\"><img id=\"childrenOrderDirBtnImg\" src=\"/app/icons/asc.png\" className=\"orderDirBtn\" alt=\"ascending\"/></label>\n                                                <input type=\"checkbox\" id=\"childrenOrderDirBtn\" style={{\"display\": \"none\"}} onChange={(e) => toggleOrder(e, propDef)}></input></td>) : <td></td>\n            }\n        </tr>)\n    }\n\n    return (\n        <div>\n            {/* <div className=\"rightPanel\" onClick={(e) => setCurrentColorPropDef(null)}> */}\n                <div className=\"propertyPanel\" onClick={(e) => setCurrentColorPropDef(null)} style={{\"overflow\": \"visible\"}}>\n                    {Object.keys(properties).map(g => \n                    <div key={g}>\n                        <span className={headerClasses[g].concat([\"propertyGroupHeader\"]).join(\" \")}>{g}</span>\n                        <table>\n                            <tbody>\n                            {Object.keys(properties[g]).map(p => createPropertyControl(p, properties[g][p]))}\n                            </tbody>\n                        </table>\n                    </div>)}\n                </div>\n            {/* </div> */}\n            <div id=\"colorPicker\">\n                <SketchPicker disableAlpha={true} color={currentColor} onChangeComplete={e => setCurrentColor(e.hex)}/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default connect(mapStateToProps)(Inspector);","import './css/LayerView.css';\nimport { connect } from \"react-redux\";\nimport { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport store from \"./store\";\nimport { directSelect, select } from \"./canvasSlice\";\nimport { activateTool } from './toolSlice';\n\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    dataItemJoined: state.canvas.dataItemJoined,\n    newItemCreated: state.canvas.newItemCreated,\n    itemsDeleted: state.canvas.itemsDeleted\n});\n\nconst left = 20, offset = 25, lineHt = 25, top = 20;\n\nconst enumerateLayers = (item, list, level) => {\n    list.push({item: item, level: level});\n    if (item.children) {\n        switch (item.type) {\n            case \"collection\":\n                enumerateLayers(item.firstChild, list, level+1);\n                break;\n            case \"axis\":\n            case \"legend\":\n            case \"gridlines\":\n                break;\n            default:\n                for (let i = item.children.length - 1; i >= 0; i--) {\n                    enumerateLayers(item.children[i], list, level+1);\n                }\n                break;\n        }\n    }\n};\n\nconst getLayerLabel = (item) => {\n    if (item.type === \"axis\") {\n        return item.channel.substring(0, 1).toUpperCase() + item.channel.substring(1) + \" axis: \" + item.field;  \n    }\n    let l = item.type.substring(0, 1).toUpperCase() + item.type.substring(1);\n    if (item.dataScope) {\n        let peers = item.getScene().getPeers(item);\n        if (peers.length > 1)\n            l += \" (\" + peers.length + \")\";\n        let fields = item.dataScope.fields;\n        if (item.parent && item.parent.type === \"collection\" && item.parent.dataScope) {\n            fields = fields.filter(d => item.parent.dataScope.fields.indexOf(d) < 0);\n        }\n        let d = fields.join(\", \");\n        if (d === \"atlas_rowId\")\n            d = \"row ID\";\n        if (d !== \"\")\n            l += \": \" + d;\n    }\n    return l;\n};\n\nconst getLayerId = (item) => {\n    switch (item.type) {\n        case \"axis\":\n        case \"legend\":\n            return item.id;\n        default:\n            if (item.classId)\n                return item.classId;\n            else\n                return item.id;\n    }\n}\n\nfunction LayerView(props) {\n\n    useEffect(() => {\n        const layers = [];\n        enumerateLayers(props.scene, layers, -1);\n        layers.forEach((d, i) => d.index = i);\n        const lv = d3.select(\".layerView\");\n        lv.selectAll('*').remove();\n        lv.append(\"text\").text(\"Layers\").style(\"font-weight\", \"bold\").attr(\"class\", \"layerText\")\n            .attr(\"x\", 20).attr(\"y\", 16);\n        let g = lv.selectAll(\".layer\").data(layers.slice(1)).enter().append(\"g\").attr(\"class\", \"layer\");\n        \n        g.append(\"rect\").attr(\"class\", \"layerRow\").attr(\"id\", d => getLayerId(d.item))\n            .attr(\"x\", 0).attr(\"y\", d => top + lineHt * d.index - 3)\n            .attr(\"width\", 260).attr(\"height\", lineHt)\n            .on(\"click\", (e, d) => {\n                store.dispatch(directSelect(null));\n                store.dispatch(activateTool(\"Select\"));\n                store.dispatch(select([d.item.id]));\n            });\n        g.append(\"image\").attr(\"class\", \"layerIcon\")\n            .attr(\"x\", d => left + offset * d.level).attr(\"y\", d => top + lineHt * d.index + 2)\n            .attr(\"href\", d => \"/app/icons/\"+d.item.type + \".png\");\n        g.append(\"text\").attr(\"class\", \"layerText\")\n            .attr(\"x\", d => left + offset * d.level + 22).attr(\"y\", d => top + lineHt * d.index + 1)\n            .text(d => getLayerLabel(d.item));\n    }, [props.scene, props.dataItemJoined, props.newItemCreated, props.itemsDeleted]);\n\n    useEffect(() => {\n        d3.selectAll(\".layerRow\").classed(\"layerSelected\", false);\n        if (props.selected.length > 0) {\n            for (let s of props.selected) {\n                let itm = props.scene.getItem(s);\n                if (!itm) return;\n                d3.select(\".layerView\").select(\"#\"+getLayerId(itm)).classed(\"layerSelected\", true);\n            }\n        }\n    }, [props.scene, props.selected]);\n\n    return (\n        <svg className=\"layerView\">\n        </svg>\n    );\n}\n\nexport default connect(mapStateToProps)(LayerView);","import { connect } from \"react-redux\";\nimport './css/DataPanel.css';\nimport {useState, useEffect, useMemo, useRef, useCallback } from 'react';\nimport { useFilters, useTable } from \"react-table\";\nimport { csvFromString } from \"mascot-vis\";\nimport { addToStack } from \"./Util\";\nimport { immerable } from \"immer\";\nimport { useSearchParams } from 'react-router-dom';\n\n\nfunction DataPanel (props) {\n\n    const [activeTbl, setActiveTbl] = useState(null);\n    const [dataScopeInfo, setDataScopeInfo] = useState(null);\n    const inputFile = useRef(null);\n\n    const [queryParameters] = useSearchParams();\n    const [urlDataset, setUrlDataset] = useState(null);\n\n    const importDataset = useCallback((string, dname) => {\n        try {\n            //TODO: need to check if string is valid csv\n            let tbl = csvFromString(string, dname);\n            let ds = props.datasets.slice();\n            ds.push(tbl);\n            props.loadDataset(ds);\n            setActiveTbl(tbl);\n        } catch (err) {\n            console.warn(\"Invalid data file: \" + dname);\n        }\n    }, [props]); \n\n    useEffect(() => {\n        let ds = queryParameters.get(\"dataset\");\n        if (ds && !urlDataset) {\n            setUrlDataset(ds);\n            fetch(\"/app/csv/\" + ds + \".csv\")\n                .then(response => {\n                    return response.text()\n                })\n                .then(result => {\n                    importDataset(result, ds);\n                });\n        }\n    }, [queryParameters, urlDataset, importDataset])\n    \n    const cols = useMemo(() => {\n        if (activeTbl === null) return [{Header: \" \", accessor: \" \"}];\n        else {\n            let fields = activeTbl.fields;\n            let result = [];\n            for (let f of fields) {\n                //if (f === \"atlas_rowId\") continue;\n                result.push({\n                    Header: f === \"atlas_rowId\" ? \"Row ID\" : f,\n                    accessor: f,\n                    filter: \"equals\",\n                    Cell: ({value}) => activeTbl.getRawValue(f, value)\n                })\n            }\n            return result;\n        }\n    }, [activeTbl])\n\n    const data = useMemo(() => {\n        if (activeTbl === null) return [{col: 1}];\n        else {\n            return activeTbl.data;\n        }\n    }, [activeTbl])\n\n    const initState = { hiddenColumns: ['atlas_rowId'] };\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        setFilter,\n        setAllFilters,\n    } = useTable({columns: cols, data: data, initialState: initState}, useFilters);\n\n    const importBtnClicked = function() {\n        inputFile.current.click();\n    }\n\n    const fileChanged = function(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        let f = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = function() {\n            addToStack(props.scene, props.datasets, props.undoStack);\n            let tbl = csvFromString(reader.result, f.name);\n            let ds = props.datasets.slice();\n            ds.push(tbl);\n            props.loadDataset(ds);\n            setActiveTbl(tbl);\n            // console.log(\"data imported\", props.selected);\n        }\n        if (f)\n            reader.readAsText(f);\n    }\n\n    const getHeaderIcon = function(field) {\n        if (!activeTbl)\n            return <span></span>;\n        switch (activeTbl.getFieldType(field)) {\n            case \"string\":\n                return <img src=\"/app/icons/string.png\" alt=\"(string) \" width=\"20px\" height=\"10px\" style={{\"margin\":\"0 4px 2px 0\"}}></img>;\n            case \"date\":\n                return <img src=\"/app/icons/date.png\" alt=\"(date) \" width=\"15px\" style={{\"margin\":\"0 3px 2px 0\"}}></img>;\n            default:\n                return <img src=\"/app/icons/number.png\" alt=\"(number) \" width=\"12px\" height=\"12px\" style={{\"margin\":\"0 2px 3px 0\"}}></img>;\n        }\n    }\n\n    useEffect(() => {\n        if (!props.datasets || props.datasets.length === 0) {\n            setActiveTbl(null);\n            setAllFilters([]);\n            setDataScopeInfo(null);\n            return;\n        }\n        if (props.selected.length === 0 && !props.directSelected) {\n            setActiveTbl(props.datasets[0]);\n            setAllFilters([]);\n            setDataScopeInfo(null);\n        } else if (props.selected.length > 0) {\n            const item = props.scene.getItem(props.selected[0]);\n            if (!item || item.type === \"axis\" || item.type === \"legend\" || immerable.type === \"gridlines\") {\n                setActiveTbl(props.datasets[0]);\n                setAllFilters([]);\n                setDataScopeInfo(null);\n                return;\n            }\n            if (item.dataScope) {\n                setActiveTbl(item.dataScope.dataTable);\n                const filters = item.dataScope.filters;\n                for (let f in filters) {\n                    setFilter(f, filters[f]);\n                }\n                setDataScopeInfo(\"Selected \" + item.type + \" has \" + item.dataScope.numTuples +  \" attached data rows\");\n            } else {\n                setActiveTbl(null);\n                setAllFilters([]);\n                setDataScopeInfo(\"Selected \" + item.type + \" has no attached data\");\n            } \n        } else if (props.directSelected) {\n            const itm = props.scene.getItem(props.directSelected);\n            if (!itm) {\n                setActiveTbl(props.datasets[0]);\n                setAllFilters([]);\n                setDataScopeInfo(null);\n            }\n            if (itm.dataScope) {\n                setActiveTbl(itm.dataScope.dataTable);\n                const filters = itm.dataScope.filters;\n                for (let f in filters) {\n                    setFilter(f, filters[f]);\n                }\n                setDataScopeInfo(\"Selected \" + itm.type + \" has \" + itm.dataScope.numTuples +  \" attached data rows\");\n            } else {\n                setActiveTbl(null);\n                setAllFilters([]);\n                setDataScopeInfo(\"Selected \" + itm.type + \" has no attached data\");\n            } \n\n        }\n    }, [props.selected, props.directSelected, props.scene, props.datasets, setAllFilters, setFilter]);\n\n    return (\n        <div id=\"dataPanel\">\n            <div id=\"datasetInfo\">\n                {props.datasets.map(d => \n                <div className={activeTbl && activeTbl.id === d.id ? \"activeTableTab\" : \"tableTab\"} key={d.id} onClick={(e) => setActiveTbl(d)}>\n                    {d.name + \" (\" + d.getRowCount() + \" rows)\"}\n                </div>)}\n                <button id=\"csvBtn\" onClick={importBtnClicked}>Import Data</button>\n                <input type='file' id='file' ref={inputFile} style={{display: 'none'}} accept=\".csv\" onChange={fileChanged}/>\n            </div>\n            <div id=\"dataScopeInfo\" style={{display: dataScopeInfo ? \"block\" : \"none\"}}>\n                {dataScopeInfo ? dataScopeInfo : \"\"}\n            </div>\n            <div id=\"tableDiv\">\n                <table id=\"dataTable\" {...getTableProps()}>\n                        <thead>\n                            {// Loop over the header rows\n                                headerGroups.map(headerGroup => (\n                                    // Apply the header row props\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\n                                        {// Loop over the headers in each row\n                                            headerGroup.headers.map(column => (\n                                                // Apply the header cell props\n                                                <th {...column.getHeaderProps()}>\n                                                    {getHeaderIcon(column.Header)}\n                                                    {// Render the header\n                                                        column.render('Header')\n                                                    }\n                                                </th>\n                                            ))}\n                                    </tr>\n                                ))}\n                        </thead>\n                        {/* Apply the table body props */}\n                        <tbody {...getTableBodyProps()}>\n                            {// Loop over the table rows\n                                rows.map(row => {\n                                    // Prepare the row for display\n                                    prepareRow(row)\n                                    return (\n                                        // Apply the row props\n                                        <tr {...row.getRowProps()}>\n                                            {// Loop over the rows cells\n                                                row.cells.map(cell => {\n                                                    // Apply the cell props\n                                                    return (\n                                                        <td {...cell.getCellProps()}>\n                                                            {// Render the cell contents\n                                                                cell.render('Cell')}\n                                                        </td>\n                                                    )\n                                                })}\n                                        </tr>\n                                    )\n                                })}\n                        </tbody>\n                    </table> \n            </div>\n            \n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    selected: state.canvas.selected,\n    directSelected: state.canvas.directSelected\n});\n\nexport default connect(mapStateToProps)(DataPanel);","import { useEffect, useState } from 'react';\nimport { SketchPicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport * as d3 from 'd3';\nimport './css/InteractiveLegend.css';\n\nconst mapStateToProps = state => ({\n    legendClicked: state.canvas.legendClicked,\n});\n\nfunction InteractiveLegend(props) {\n\n    const [legend, setLegend] = useState(null);\n    const [color, setColor] = useState(\"#fff\");\n    const [value, setValue] = useState(null);\n    \n    useEffect(() => {\n        const l = props.legendClicked.legend, v = props.legendClicked.value;\n        if (l && v) {\n            d3.select(\"#legendColorPicker\").style(\"visibility\", \"visible\");\n            setLegend(props.scene.getItem(l));\n            setValue(v);\n            setColor(props.scene.getItem(l).encoding.scale.map(v));\n        } else {\n            d3.select(\"#legendColorPicker\").style(\"visibility\", \"hidden\");\n        }\n    }, [props.legendClicked, props.scene])\n    \n    const changeCompleted = (c, e) => {\n        setColor(c.hex);\n        const domain = legend.encoding.scale.domain, range = [];\n        for (let d of domain) {\n            if (d === value)\n                range.push(c.hex);\n            else\n                range.push(legend.encoding.scale.map(d));\n        }\n        legend.encoding.scale._setRange(range);\n        props.renderer.render(props.scene);\n    }\n\n    return (\n        <div id=\"legendColorPicker\">\n            <SketchPicker disableAlpha={true} color={color} onChangeComplete={changeCompleted}/>\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps)(InteractiveLegend);","import Canvas from './Canvas';\nimport { useEffect, useState } from 'react';\nimport * as msc from \"mascot-vis\";\nimport EventLayer from './EventLayer';\nimport ToolBar from './ToolBar';\nimport Inspector from './Inspector';\nimport LayerView from './LayerView';\nimport DataPanel from './DataPanel';\nimport './css/App.css';\nimport store from \"./store\";\nimport { directSelect, select, toggleAxisHandle } from \"./canvasSlice\";\nimport InteractiveLegend from './InteractiveLegend';\nimport { useSearchParams } from 'react-router-dom';\n\nfunction Authoring(props) {\n\n  const [queryParameters] = useSearchParams();\n  const [renderer] = useState(msc.renderer(\"svg\", \"canvas\"));\n  const [scene, setScene] = useState(msc.scene());\n  // const [spec, setSpec] = useState(\"\");\n  const [datasets, setDatasets] = useState([]);\n  const [undoStack, setUndoStack] = useState([]); \n  const [redoStack, setRedoStack] = useState([]); \n\n  useEffect(() => {\n    document.body.style.backgroundColor = \"#ddd\";\n    document.body.style.overflow = \"hidden\";\n  }, [])\n\n  useEffect(() => {\n    let proj = queryParameters.get(\"project\");\n    if (proj) {\n      fetch(\"/app/scenes/\" + proj + \".msc\")\n      .then(response => {\n        return response.text()\n      })\n      .then(result => {\n        try {\n          const scn = JSON.parse(result);\n          loadScene(scn);\n        } catch (err) {\n          console.warn(\"Invalid project: \" + proj);\n        }\n      });\n    }\n  }, [queryParameters])\n\n  // useEffect(() => {\n  //   if (spec) {\n  //     fetch(\"app/scenes/\" + spec + \".msc\")\n  //     .then(response => response.json())\n  //     .then(result => {\n  //       loadScene(result);\n  //     });\n  //   }\n  // }, [spec]);\n\n  useEffect(() => {\n    store.dispatch(toggleAxisHandle({visible: false}));\n    store.dispatch(select([]));\n    store.dispatch(directSelect(null));\n    renderer.clear();\n    renderer.render(scene);\n  }, [renderer, scene]);\n\n  const loadScene = (json) => {\n    let loader = msc.sceneLoader();\n    let scn = loader.load(json);\n    setScene(scn);\n    setDatasets(Object.values(loader.tables));\n    //setDatasets(Object.values(scn.getDataTables()));\n  }\n\n  // const demos = [\n  //   \"Rect\",\n  //   \"BarChartHorz\",\n  //   \"BarChartVert\",\n  //   \"BoxPlot\",\n  //   \"BulletChart\",\n  //   \"DivergingBarChart\",\n  //   \"GanttChart\",\n  //   \"GroupedBarChart\",\n  //   \"HeatMap\",\n  //   \"Histogram\",\n  //   \"MosaicPlot\",\n  //   \"StackedBarChart\",\n  //   \"TowerChart\",\n  //   \"Treemap\",\n  //   \"WaffleChart\",\n  //   \"WaterfallChart\",\n  //   \"BubblePlot\",\n  //   \"CirclePacking\",\n  //   \"DotPlot\",\n  //   \"DoughnutChart\",\n  //   \"PieChart\",\n  //   \"RadialBarChart\",\n  //   \"Scatterplot\",\n  //   \"Sunburst\",\n  //   \"BumpChart\",\n  //   \"ConnectedScatterPlot\",\n  //   \"DumbbellChart\",\n  //   \"LineGraph\",\n  //   \"LineGraph2\",\n  //   \"LollipopChart\",\n  //   \"MultiLineGraph\",\n  //   \"ParallelCoordinates\",\n  //   \"RangeChart\",\n  //   \"SlopeGraph\",\n  //   \"StringlineChart\",\n  //   \"AreaChart\",\n  //   \"DensityPlot\",\n  //   \"RadarChart\",\n  //   \"RidgelinePlot\",\n  //   \"RoseChart\",\n  //   \"StackedAreaChart\",\n  //   \"StellarChart\",\n  //   \"StreamGraph\",\n  //   \"ViolinPlot\",\n  //   \"Isotype\",\n  //   \"GridAreaChart\",\n  //   \"MultipleBarCharts\",\n  //   \"MultipleBoxPlots\",\n  //   \"MultiplePieCharts\",\n  //   \"ScatterplotMatrix\",\n  //   \"Sparklines\",\n  //   \"GridStackedAreaChart\",\n  //   \"MultipleViolinPlots\"\n  // ]\n\n  // const loadDataset = (d) => {\n  //   setDatasets(datasets.concat([d]));\n  // }\n\n  const resetStacks = () => {\n    setUndoStack([]);\n    setRedoStack([]);\n  }\n\n  return (\n    <div style={{overflow: \"hidden\"}}>\n      <Canvas scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} redoStack={redoStack} type=\"svg\"></Canvas>\n      <EventLayer scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} redoStack={redoStack}></EventLayer>\n      {/* <div id=\"specList\" style={{display: 'none'}}>\n        <ul>\n          {demos.map(d => <li key={d} onClick={(e) => setSpec(d)}>{d}</li>)}\n        </ul>\n      </div> */}\n      {/* <div id=\"zoomCtrl\">\n        <button key=\"zoom+\" className=\"zoomBtn\" id=\"zoomInBtn\"></button>\n        <input type=\"range\" min=\"25\" max=\"400\" orient=\"vertical\" defaultValue=\"100\" step=\"25\" className=\"zoomSlider\" id=\"zoomSlider\" onChange={(e) => console.log(e)}></input>\n        <button key=\"zoom-\" className=\"zoomBtn\" id=\"zoomOutBtn\"></button>\n      </div> */}\n      <DataPanel scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} loadDataset={setDatasets}></DataPanel>\n      <LayerView scene={scene} renderer={renderer}></LayerView>\n      <ToolBar scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack} redoStack={redoStack} resetStacks={resetStacks} loadScene={loadScene}></ToolBar>\n      <Inspector scene={scene} renderer={renderer} datasets={datasets} undoStack={undoStack}></Inspector>\n      <InteractiveLegend scene={scene} renderer={renderer}></InteractiveLegend>\n      <input type=\"text\" id=\"textElement\" style={{\"visibility\": 'hidden', \"position\": \"absolute\"}}></input>\n    </div>\n  )\n}\n\nexport default Authoring;\n","import Canvas from './Canvas';\nimport { useEffect, useState } from 'react';\nimport * as msc from \"mascot-vis\";\nimport EventLayer from './EventLayer';\nimport ToolBar from './ToolBar';\nimport Inspector from './Inspector';\nimport LayerView from './LayerView';\nimport DataPanel from './DataPanel';\nimport './css/App.css';\nimport store from \"./store\";\nimport { select } from \"./canvasSlice\";\n\nfunction Templating(props) {\n    const renderer = msc.renderer(\"svg\", \"canvas\");\n    const [scene, setScene] = useState(msc.scene());\n    const [spec, setSpec] = useState('BarChartHorz');\n  \n    useEffect(() => {\n      document.body.style.backgroundColor = \"#ddd\";\n      document.body.style.overflow = \"hidden\";\n    }, [])\n  \n    useEffect(() => {\n      loadScene(\"specs/\" + spec + \".json\");\n    }, [spec]);\n  \n    useEffect(() => {\n      renderer.clear();\n      renderer.render(scene);\n    }, [renderer, scene]);\n  \n    const loadScene = async (url) => {\n      const spec = await loadJSON(url);\n      let exe = msc.specExecutor();\n      let scene = await exe.run(spec);\n      store.dispatch(select([]));\n      setScene(scene);\n    }\n  \n    const demos = [\n      \"BarChartHorz\",\n      \"BarChartVert\",\n      \"BoxPlot\",\n      \"BulletChart\",\n      \"DivergingBarChart\",\n      \"GanttChart\",\n      \"GroupedBarChart\",\n      \"HeatMap\",\n      \"Histogram\",\n      \"MosaicPlot\",\n      \"StackedBarChart\",\n      \"TowerChart\",\n      \"Treemap\",\n      \"WaffleChart\",\n      \"WaterfallChart\"\n    ]\n  \n    return (\n      <div style={{overflow: \"hidden\"}}>\n        <Canvas scene={scene} renderer={renderer} type=\"svg\"></Canvas>\n        <EventLayer scene={scene} renderer={renderer}></EventLayer>\n        <div id=\"specList\">\n          <ul>\n            {demos.map(d => <li key={d} onClick={(e) => setSpec(d)}>{d}</li>)}\n          </ul>\n        </div>\n        <DataPanel scene={scene} renderer={renderer}></DataPanel>\n        <LayerView scene={scene} renderer={renderer}></LayerView>\n        <Inspector scene={scene} renderer={renderer}></Inspector>\n        <ToolBar></ToolBar>\n      </div>\n    )\n}\n\nasync function loadJSON(url) {\n    const response = await fetch(url);\n    const text = await response.text();\n    let json = JSON.parse(text);\n    return json;\n  }\n\nexport default Templating;","import './css/App.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Authoring from './Authoring';\nimport Templating from './Templating';\n\nwindow.onbeforeunload = (event) => {\n  const e = event || window.event;\n  // Cancel the event\n  e.preventDefault();\n  if (e) {\n    e.returnValue = ''; // Legacy method for cross browser support\n  }\n  return ''; // Legacy method for cross browser support\n};\n\nfunction App(props) {\n  return (\n    <Router basename={'/app'}>\n      <div>\n        <Routes>\n          <Route path = \"/\" element={<Authoring/>}/>\n          <Route path = \"/reuse\" element={<Templating/>}/>\n        </Routes>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/bootstrap.min.css';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}